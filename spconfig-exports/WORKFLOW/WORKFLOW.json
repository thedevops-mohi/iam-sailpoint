{
    "version": 1,
    "timestamp": "2025-08-13T01:56:26.434824Z",
    "tenant": "igmfinancial-uat",
    "description": "Exporting WORKFLOW",
    "options": {
        "excludeTypes": [],
        "includeTypes": [
            "WORKFLOW"
        ],
        "objectOptions": {}
    },
    "objects": [
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "face8d4d-1f84-44d2-9558-4c98db26b50f",
                "name": "Non Human Account Delete Certification Workflow"
            },
            "object": {
                "id": "face8d4d-1f84-44d2-9558-4c98db26b50f",
                "name": "Non Human Account Delete Certification Workflow",
                "description": "",
                "created": "2025-06-23T10:37:08.774825072Z",
                "modified": "2025-08-12T15:57:05.1043065Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "Compare Strings",
                    "steps": {
                        "Compare Strings": {
                            "actionId": "sp:compare-strings",
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Get Identity",
                                    "variableA.$": "$.trigger.action",
                                    "variableB": "Certification"
                                }
                            ],
                            "defaultStep": "End Step - Failure",
                            "displayName": "",
                            "type": "choice"
                        },
                        "End Step - Failure": {
                            "actionId": "sp:operator-failure",
                            "description": "GET search API HTTP request failed",
                            "displayName": "",
                            "failureDetails": "need to figure out http request body most likely.",
                            "failureName": "Search API call error",
                            "type": "failure"
                        },
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.recipient.id"
                            },
                            "description": "Get full details on the identity in question",
                            "displayName": "",
                            "nextStep": "HTTP Request",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "identities"
                                    ],
                                    "query": {
                                        "query": "id: {{$.getIdentity.id}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                "oAuthClientSecret": "$.secrets.328342c4-f170-45bc-8642-a0f3028f18c4",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthScope": null,
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2024/search"
                            },
                            "catch": [
                                {
                                    "next": "End Step - Failure"
                                }
                            ],
                            "description": "Use the output of an identity search to get entitlements",
                            "displayName": "Search Query",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$",
                                "input.$": "$.hTTPRequest.body.*.accounts[?(@.source.name==\"ServiceNow Non-Human Accounts\")].id",
                                "start": "Define Variable",
                                "steps": {
                                    "Define Variable": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "accountId",
                                                    "transforms": [],
                                                    "variableA.$": "$.loop.loopInput"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "HTTP Request 1",
                                        "type": "Mutation"
                                    },
                                    "End Step - Success 1": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "add",
                                                    "path": "/attributes/lcs",
                                                    "value": "deleted"
                                                }
                                            ],
                                            "jsonRequestBody": {
                                                "op": "replace",
                                                "path": "/attributes/lcs",
                                                "value": "disabled"
                                            },
                                            "method": "patch",
                                            "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                            "oAuthClientSecret": "$.secrets.e49f8e17-3d5b-4d74-8711-09451fe08ffd",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Accept": "application/json",
                                                "Content-Type": "application/json-patch+json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2025/accounts/{{$.defineVariable.accountId}}",
                                            "urlParams": null
                                        },
                                        "displayName": "Updating lcs attribute of ServiceNow Nonhuman account",
                                        "nextStep": "End Step - Success 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": true,
                "creator": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$.accountRequests[?(@.provisioningResult == 'committed' && @.provisioningTarget == 'AD - Non-Person accounts' && @.accountOperation == 'Modify' && 'extensionAttribute9' in @.attributeRequests[*].attributeName && 'revokeToDeleteAccount' in @.attributeRequests[*].attributeValue && 'Remove' in @.attributeRequests[*].operation)]",
                        "id": "idn:post-provisioning"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "b0ba1540-ac4d-49bc-a9c3-b1b5b8045129",
                "name": "Non Human Account Disabled Certification Workflow"
            },
            "object": {
                "id": "b0ba1540-ac4d-49bc-a9c3-b1b5b8045129",
                "name": "Non Human Account Disabled Certification Workflow",
                "description": "",
                "created": "2025-05-12T10:41:38.253774942Z",
                "modified": "2025-08-12T15:57:00.429219119Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "Compare Strings",
                    "steps": {
                        "Compare Strings": {
                            "actionId": "sp:compare-strings",
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Get Identity",
                                    "variableA.$": "$.trigger.action",
                                    "variableB": "Certification"
                                }
                            ],
                            "defaultStep": "End Step - Failure",
                            "displayName": "",
                            "type": "choice"
                        },
                        "End Step - Failure": {
                            "actionId": "sp:operator-failure",
                            "description": "GET search API HTTP request failed",
                            "displayName": "",
                            "failureDetails": "need to figure out http request body most likely.",
                            "failureName": "Search API call error",
                            "type": "failure"
                        },
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.recipient.id"
                            },
                            "description": "Get full details on the identity in question",
                            "displayName": "",
                            "nextStep": "HTTP Request",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "identities"
                                    ],
                                    "query": {
                                        "query": "id: {{$.getIdentity.id}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                "oAuthClientSecret": "$.secrets.81dfe4b6-54ed-457b-8c38-97087e6fbf54",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthScope": null,
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2024/search"
                            },
                            "catch": [
                                {
                                    "next": "End Step - Failure"
                                }
                            ],
                            "description": "Use the output of an identity search to get entitlements",
                            "displayName": "Search Query",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$",
                                "input.$": "$.hTTPRequest.body.*.accounts[?(@.source.name==\"ServiceNow Non-Human Accounts\")].id",
                                "start": "Define Variable",
                                "steps": {
                                    "Define Variable": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "accountId",
                                                    "transforms": [],
                                                    "variableA.$": "$.loop.loopInput"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "HTTP Request 1",
                                        "type": "Mutation"
                                    },
                                    "End Step - Success 1": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "add",
                                                    "path": "/attributes/lcs",
                                                    "value": "disabled"
                                                }
                                            ],
                                            "jsonRequestBody": {
                                                "op": "replace",
                                                "path": "/attributes/lcs",
                                                "value": "disabled"
                                            },
                                            "method": "patch",
                                            "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                            "oAuthClientSecret": "$.secrets.f397ccf0-f8cf-4996-ac20-e223b1e13ba8",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Accept": "application/json",
                                                "Content-Type": "application/json-patch+json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2025/accounts/{{$.defineVariable.accountId}}",
                                            "urlParams": null
                                        },
                                        "displayName": "Updating lcs attribute of ServiceNow Nonhuman account",
                                        "nextStep": "End Step - Success 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": true,
                "creator": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$.accountRequests[?(@.provisioningResult == 'committed' && @.provisioningTarget == 'AD - Non-Person accounts' && @.accountOperation == 'Modify' && 'extensionAttribute8' in @.attributeRequests[*].attributeName && 'revokeToDisableAccount' in @.attributeRequests[*].attributeValue && 'Remove' in @.attributeRequests[*].operation)]",
                        "id": "idn:post-provisioning"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "068fad8d-c74f-4dfa-98eb-cc6a56ff9c39",
                "name": "Provisioning failure Create Workflow notification "
            },
            "object": {
                "id": "068fad8d-c74f-4dfa-98eb-cc6a56ff9c39",
                "name": "Provisioning failure Create Workflow notification ",
                "description": "Provisioning failure Create notification",
                "created": "2025-05-16T03:30:14.555521963Z",
                "modified": "2025-08-11T09:43:28.620150077Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "Get Identity",
                    "steps": {
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.recipient.id"
                            },
                            "displayName": "",
                            "nextStep": "Send Email",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>IAM Ops,</p>\n<p>Please reference the details below regarding SailPoint Create Account Provisioning failure.</p>\n<p>Event Type: CREATE</p>\n<p>Short Description: SailPoint Create Account Provisioning Failure:- {{$.getIdentity.attributes.userType}} - {{$.getIdentity.attributes.samaccountname}}</p>\n<p>Display Name: {{$.getIdentity.attributes.displayName}}<br>SAMAccounName: {{$.getIdentity.attributes.samaccountname}}<br>User Type: {{$.getIdentity.attributes.userType}}<br>Start Date: {{$.getIdentity.attributes.startDate}}<br>Language: {{$.getIdentity.attributes.language}}<br>Manager: {{$.getIdentity.managerRef.name}}<br>Company: {{$.getIdentity.attributes.company}}<br>Work Location: {{$.getIdentity.attributes.street}}, {{$.getIdentity.attributes.city}}, {{$.getIdentity.attributes.postalCode}}, {{$.getIdentity.attributes.country}}</p>\n<p><br>Error: {{$.trigger.errors}}</p>\n<p>SailPoint Event Details: {{$.trigger.accountRequests}}</p>\n<p><br>This is a system-generated email. Please do not respond to this email.</p>",
                                "context": {},
                                "from": null,
                                "recipientEmailList": [
                                    "igmfinancialtest@service-now.com"
                                ],
                                "subject": "SailPoint Create Account Provisioning Failure: {{$.getIdentity.attributes.displayName}}"
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 2
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$.accountRequests[?(@.provisioningResult == 'failed' && @.accountOperation == 'Create')]",
                        "id": "idn:post-provisioning"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "90ca50af-0502-4512-b7bb-7320f4e2340d",
                "name": "Provisioning failure Modify Workflow notification "
            },
            "object": {
                "id": "90ca50af-0502-4512-b7bb-7320f4e2340d",
                "name": "Provisioning failure Modify Workflow notification ",
                "description": "Provisioning failure Modify notification",
                "created": "2025-07-02T08:23:13.904161534Z",
                "modified": "2025-08-11T09:43:24.863116303Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "Get Identity",
                    "steps": {
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.recipient.id"
                            },
                            "displayName": "",
                            "nextStep": "Send Email",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>IAM Ops,</p>\n<p>Please reference the details below regarding SailPoint Modify Account Provisioning failure.</p>\n<p>Event Type: MODIFY</p>\n<p>Short Description: SailPoint Modify Account Provisioning Failure:- {{$.getIdentity.attributes.userType}} - {{$.getIdentity.attributes.samaccountname}}</p>\n<p>Display Name: {{$.getIdentity.attributes.displayName}}<br>SAMAccounName: {{$.getIdentity.attributes.samaccountname}}<br>User Type: {{$.getIdentity.attributes.userType}}<br>Start Date: {{$.getIdentity.attributes.startDate}}<br>Language: {{$.getIdentity.attributes.language}}<br>Manager: {{$.getIdentity.managerRef.name}}<br>Company: {{$.getIdentity.attributes.company}}<br>Work Location: {{$.getIdentity.attributes.street}}, {{$.getIdentity.attributes.city}}, {{$.getIdentity.attributes.postalCode}}, {{$.getIdentity.attributes.country}}</p>\n<p><br>Error: {{$.trigger.errors}}</p>\n<p>SailPoint Event Details: {{$.trigger.accountRequests}}</p>\n<p><br>This is a system-generated email. Please do not respond to this email.</p>",
                                "context": {},
                                "from": null,
                                "recipientEmailList": [
                                    "igmfinancialtest@service-now.com"
                                ],
                                "subject": "SailPoint Modify Account Provisioning Failure: {{$.getIdentity.attributes.displayName}}"
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 2
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$.accountRequests[?(@.provisioningResult == \"failed\" && @.accountOperation == 'Modify' && @.provisioningTarget == 'ServiceNowGovernance - Dev')]",
                        "id": "idn:post-provisioning"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "12ec2d53-36d0-4ccf-b1db-c30e61dc29f8",
                "name": "access profile ownership"
            },
            "object": {
                "id": "12ec2d53-36d0-4ccf-b1db-c30e61dc29f8",
                "name": "access profile ownership",
                "description": "Child workflow (external trigger) for the parent leaver workflow that changes the ownership of access profiles from leaver to their manager.",
                "created": "2025-07-22T13:17:21.657205994Z",
                "modified": "2025-08-05T14:41:57.844631826Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "Compare Numbers": {
                            "actionId": "sp:compare-numbers",
                            "choiceList": [
                                {
                                    "comparator": "NumericGreaterThan",
                                    "nextStep": "Send Email",
                                    "variableA.$": "$.hTTPRequest.body.length()",
                                    "variableB": 0
                                }
                            ],
                            "defaultStep": "End Step — Success 1",
                            "displayName": "",
                            "type": "choice"
                        },
                        "End Step — Success 1": {
                            "actionId": "sp:operator-success",
                            "description": "End of active path",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "accessprofiles"
                                    ],
                                    "query": {
                                        "query": "owner.id:{{$.trigger.leaverId.id}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                "oAuthClientSecret": "$.secrets.113f132e-5d64-4903-83b5-83d1c9247c50",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v3/search?offset=0&limit=100",
                                "urlParams": null
                            },
                            "description": "get list of access profiles owned by this identity.",
                            "displayName": "Get Access Profiles",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$.trigger",
                                "input.$": "$.hTTPRequest.body",
                                "start": "HTTP Request 1",
                                "steps": {
                                    "End Step — Success": {
                                        "actionId": "sp:operator-success",
                                        "type": "success"
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "replace",
                                                    "path": "/owner",
                                                    "value": {
                                                        "id": "{{$.loop.context.managerRef.id}}",
                                                        "type": "IDENTITY"
                                                    }
                                                }
                                            ],
                                            "method": "patch",
                                            "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                            "oAuthClientSecret": "$.secrets.302b486c-042a-4cd8-9dd3-a59b9b258d22",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json-patch+json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/beta/access-profiles/{{$.loop.loopInput.id}}"
                                        },
                                        "description": "look up each entitlement and change owner",
                                        "displayName": "Change Owner to Manager",
                                        "nextStep": "End Step — Success",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "nextStep": "Compare Numbers",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear {{$.trigger.managerRef.name}},</p>\n<p class=\"MsoNormal\">Due to the termination/suspension of {{$.trigger.leaverId.name}}, ownership of the following Access Profiles has been transferred to you:</p>\n<ul>#if($objsLen>1)#foreach ( $detail in ${objs} )\n<li>${detail.name}</li>\n#end #{else}\n\n<li>${objs.name}</li>\n#end\n</ul>\n<p class=\"MsoNormal\">You can access the details of these items at the following link:<br><a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&amp;sysparm_article=KB0013953\">Corporate Employees - Access Items &ndash; Inventory with Owner and Approvers for Requests - Resource Centre</a></p>\n<p class=\"MsoNormal\">If you wish to transfer ownership to another individual, please follow the instructions provided in the link below to submit a SNAP request.<br><a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=a19553aadb27981095d0ddf5f49619ed&amp;sysparm_category=a8d60a5e1b115410afb584415b4bcb53\">Authorization Request - Resource Centre</a></p>\n<p class=\"MsoNormal\">This is a system-generated email. Please do not respond to this email.</p>",
                                "context": {
                                    "objs.$": "$.hTTPRequest.body",
                                    "objsLen.$": "$.hTTPRequest.body.length()"
                                },
                                "recipientEmailList.$": "$.trigger.managerRef.email",
                                "subject": "Transfer of Ownership Notification for Access Profile Objects"
                            },
                            "displayName": "",
                            "nextStep": "End Step — Success 1",
                            "type": "action",
                            "versionNumber": 2
                        }
                    }
                },
                "enabled": true,
                "creator": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "trigger": {
                    "type": "EXTERNAL",
                    "attributes": {
                        "clientId": "063bc0f2-c5f1-4423-a97b-c8c4b680f03a",
                        "description": "change ownership of sources for leaver",
                        "id": "idn:external-http",
                        "url": "/beta/workflows/execute/external/12ec2d53-36d0-4ccf-b1db-c30e61dc29f8"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "5091c2e0-123a-49d5-89b9-c4e3f4370cab",
                "name": "group membership"
            },
            "object": {
                "id": "5091c2e0-123a-49d5-89b9-c4e3f4370cab",
                "name": "group membership",
                "description": "",
                "created": "2025-07-10T13:32:16.636391259Z",
                "modified": "2025-08-05T14:34:03.163686635Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "Wait",
                    "steps": {
                        "End Step - Success 1": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "displayName": "",
                            "nextStep": "HTTP Request",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "method": "get",
                                "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                "oAuthClientSecret": "$.secrets.b33f6786-2dcc-4330-943e-fe4c1ae304fd",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workgroups",
                                "urlParams": {
                                    "filters": "memberships.identityId eq \"{{$.trigger.identity.id}}\""
                                }
                            },
                            "displayName": "",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$.trigger",
                                "input.$": "$.hTTPRequest.body",
                                "start": "HTTP Request 1",
                                "steps": {
                                    "End Step - Success": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "Get Identity 1": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.context.identity.id"
                                        },
                                        "displayName": "",
                                        "nextStep": "Send Email",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonRequestBody": {
                                                "remove": [
                                                    "{{$.loop.context.identity.id}}"
                                                ]
                                            },
                                            "method": "post",
                                            "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                            "oAuthClientSecret": "$.secrets.f7467f0f-628c-456f-b80b-c0bfb1bef7a8",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json",
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2/workgroups/{{$.loop.loopInput.id}}/members"
                                        },
                                        "displayName": "",
                                        "nextStep": "Get Identity 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<p>Dear {{$.loop.loopInput.owner.displayName}},</p>\n<p>You are receiving this notification because you are the owner of the following Governance Group:&nbsp;</p>\n<p>Governance Group Name:</p>\n<p>{{$.loop.loopInput.name}}&nbsp;</p>\n<p>Governance Group Description:</p>\n<p>{{$.loop.loopInput.description}}</p>\n<p>Please be advised that the following member of this Governance Group has been terminated and therefore removed as a member of the Governance Group:&nbsp;</p>\n<p>{{$.getIdentity1.attributes.displayName}}</p>\n<p>&nbsp;</p>\n<p>You can access the details of this Governance Group at the following link: &nbsp;</p>\n<p><a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&amp;sysparm_article=KB0013953\">Corporate Employees - Access Items &ndash; Inventory with Owner and Approvers for Requests - Resource Centre</a></p>\n<p><br>As the owner of this Governance Group, you are responsible for overseeing the group&rsquo;s membership. &nbsp;If you wish to modify the membership of this Governance Group, please follow the instructions provided in the link below to submit a SNAP request.&nbsp;</p>\n<p><a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=a19553aadb27981095d0ddf5f49619ed&amp;sysparm_category=a8d60a5e1b115410afb584415b4bcb53\">Authorization Request - Resource Centre</a></p>\n<p><br>This is a system-generated email. Please do not respond to this email.</p>",
                                            "context": {},
                                            "recipientEmailList.$": "$.loop.loopInput.owner.displayName",
                                            "subject": "Removal of Membership Notification for Governance Group - {{$.loop.loopInput.name}}"
                                        },
                                        "displayName": "",
                                        "nextStep": "End Step - Success",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success 1",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Wait": {
                            "actionId": "sp:sleep",
                            "attributes": {
                                "duration": "2m",
                                "type": "waitFor"
                            },
                            "displayName": "",
                            "nextStep": "Get Identity",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$.changes[?(@.attribute=='cloudLifecycleState' && @.newValue=='terminated')]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "3d2bc40c-4976-42ba-b596-7c878eb468f6",
                "name": "Copy of SailPoint PS - Leaver Identity Access Cleanup 2"
            },
            "object": {
                "id": "3d2bc40c-4976-42ba-b596-7c878eb468f6",
                "name": "Copy of SailPoint PS - Leaver Identity Access Cleanup 2",
                "description": "Parent workflow for leaver scenario; calls a series of child workflows through HTTP requests; steps change ownership and membership in all objects to which the leaver is associated.",
                "created": "2025-07-22T13:23:33.515074657Z",
                "modified": "2025-08-05T14:33:58.713857037Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "Wait",
                    "steps": {
                        "End Step — Success": {
                            "actionId": "sp:operator-success",
                            "type": "success"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "description": "get id for user/leaver",
                            "nextStep": "Get Identity 1",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Get Identity 1": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.getIdentity.managerRef.id"
                            },
                            "description": "retrieve manager",
                            "nextStep": "Reassign Access Profile Ownership",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "leaverId": {
                                        "id": "{{$.getIdentity.id}}",
                                        "name": "{{$.getIdentity.attributes.firstname}} {{$.getIdentity.attributes.lastname}}"
                                    },
                                    "managerRef": {
                                        "email": "{{$.getIdentity1.attributes.email}}",
                                        "id": "{{$.getIdentity1.id}}",
                                        "name": "{{$.getIdentity1.attributes.firstname}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "4da6e00f-6e12-4547-badf-604d099a6fa5",
                                "oAuthClientSecret": "$.secrets.3f35f09d-9fa3-455f-b124-892163535129",
                                "oAuthCredentialLocation": "oAuthInBody",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/393862a0-c05a-4e1a-a7e9-999d3d2ec5f3"
                            },
                            "displayName": "Reassign Entitlement Ownership",
                            "nextStep": "HTTP Request 1",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "HTTP Request 1": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "leaverId": {
                                        "id": "{{$.getIdentity.id}}",
                                        "name": "{{$.getIdentity.attributes.firstname}} {{$.getIdentity.attributes.lastname}}"
                                    },
                                    "managerRef": {
                                        "email": "{{$.getIdentity1.attributes.email}}",
                                        "id": "{{$.getIdentity1.id}}",
                                        "name": "{{$.getIdentity1.attributes.firstname}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "337c58f0-9a0b-45d2-b763-fb151072660d",
                                "oAuthClientSecret": "$.secrets.33e436e4-c9c7-47bd-b364-a274d2f50a91",
                                "oAuthCredentialLocation": "oAuthInBody",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/34d0bcd1-2b22-4141-b296-f4dbaa35f5ff"
                            },
                            "displayName": "Reassign Role Ownership",
                            "nextStep": "HTTP Request 2",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "HTTP Request 2": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "leaverId": {
                                        "id": "{{$.getIdentity.id}}",
                                        "name": "{{$.getIdentity.attributes.firstname}} {{$.getIdentity.attributes.lastname}}"
                                    },
                                    "managerRef": {
                                        "email": "{{$.getIdentity1.attributes.email}}",
                                        "id": "{{$.getIdentity1.id}}",
                                        "name": "{{$.getIdentity1.attributes.firstname}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "4509badc-3471-4b31-8fbb-468810d1e1a2",
                                "oAuthClientSecret": "$.secrets.9849f58f-d504-4f25-b363-af5824f9b4c9",
                                "oAuthCredentialLocation": "oAuthInBody",
                                "oAuthScope": null,
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/d0edb0a5-0b43-4e9e-b1ea-3b02c275a884"
                            },
                            "displayName": "Reassign Governance Group Ownership",
                            "nextStep": "End Step — Success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Reassign Access Profile Ownership": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "leaverId": {
                                        "id": "{{$.getIdentity.id}}",
                                        "name": "{{$.getIdentity.attributes.firstname}} {{$.getIdentity.attributes.lastname}}"
                                    },
                                    "managerRef": {
                                        "email": "{{$.getIdentity1.attributes.email}}",
                                        "id": "{{$.getIdentity1.id}}",
                                        "name": "{{$.getIdentity1.attributes.firstname}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "063bc0f2-c5f1-4423-a97b-c8c4b680f03a",
                                "oAuthClientSecret": "$.secrets.9a5cf61b-6e26-4a2f-864f-068b3821ce03",
                                "oAuthCredentialLocation": "oAuthInBody",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/12ec2d53-36d0-4ccf-b1db-c30e61dc29f8"
                            },
                            "description": "call request to reassign access profile ownership",
                            "nextStep": "HTTP Request",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Wait": {
                            "actionId": "sp:sleep",
                            "attributes": {
                                "duration": "1m",
                                "type": "waitFor"
                            },
                            "description": "Adding wait for birthright roles to de-provision",
                            "nextStep": "Get Identity",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$.changes[?(@.attribute=='cloudLifecycleState' && (@.newValue=='terminated' || @.newValue=='suspended'))]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "393862a0-c05a-4e1a-a7e9-999d3d2ec5f3",
                "name": "entitlement ownership"
            },
            "object": {
                "id": "393862a0-c05a-4e1a-a7e9-999d3d2ec5f3",
                "name": "entitlement ownership",
                "description": "Child workflow (external trigger) for the parent leaver workflow that changes ownership of entitlements from the leaver to their manager.",
                "created": "2025-07-22T13:41:20.797299799Z",
                "modified": "2025-08-05T14:06:04.552805175Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "Compare Numbers": {
                            "actionId": "sp:compare-numbers",
                            "choiceList": [
                                {
                                    "comparator": "NumericGreaterThan",
                                    "nextStep": "Send Email",
                                    "variableA.$": "$.hTTPRequest.body.length()",
                                    "variableB": 0
                                }
                            ],
                            "defaultStep": "End Step — Success 1",
                            "displayName": "",
                            "type": "choice"
                        },
                        "End Step — Success 1": {
                            "actionId": "sp:operator-success",
                            "description": "End of active path",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "entitlements"
                                    ],
                                    "query": {
                                        "query": "owner.id:{{$.trigger.leaverId.id}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                "oAuthClientSecret": "$.secrets.101d81ed-97b4-43ce-b36d-61d692bd9180",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v3/search?offset=0&limit=100",
                                "urlParams": null
                            },
                            "description": "get list of entitlements owned by this identity",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$.trigger",
                                "input.$": "$.hTTPRequest.body",
                                "start": "HTTP Request 1",
                                "steps": {
                                    "End Step — Success": {
                                        "actionId": "sp:operator-success",
                                        "type": "success"
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "add",
                                                    "path": "/owner",
                                                    "value": {
                                                        "id": "{{$.loop.context.managerRef.id}}",
                                                        "type": "IDENTITY"
                                                    }
                                                }
                                            ],
                                            "method": "patch",
                                            "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                            "oAuthClientSecret": "$.secrets.e392f067-1eee-49b6-ae72-93a03c63fafa",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthScope": null,
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json-patch+json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/beta/entitlements/{{$.loop.loopInput.id}}"
                                        },
                                        "description": "look up each entitlement and change owner",
                                        "nextStep": "End Step — Success",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "nextStep": "Compare Numbers",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear {{$.trigger.managerRef.name}},</p>\n<p class=\"MsoNormal\">Due to the termination/suspension of {{$.trigger.leaverId.name}}, ownership of the following Entitlements has been transferred to you:</p>\n<ul>#if($objsLen>1)#foreach ( $detail in ${objs} )\n<li>${detail.name}</li>\n#end #{else}\n\n<li>${objs.name}</li>\n#end\n</ul>\n<p class=\"MsoNormal\">You can access the details of these items at the following link:<br><a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&amp;sysparm_article=KB0013953\">Corporate Employees - Access Items &ndash; Inventory with Owner and Approvers for Requests - Resource Centre</a></p>\n<p class=\"MsoNormal\">If you wish to transfer ownership to another individual, please follow the instructions provided in the link below to submit a SNAP request.<br><a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=a19553aadb27981095d0ddf5f49619ed&amp;sysparm_category=a8d60a5e1b115410afb584415b4bcb53\">Authorization Request - Resource Centre</a></p>\n<p class=\"MsoNormal\">This is a system-generated email. Please do not respond to this email.</p>",
                                "context": {
                                    "objs.$": "$.hTTPRequest.body",
                                    "objsLen.$": "$.hTTPRequest.body.length()"
                                },
                                "recipientEmailList.$": "$.trigger.managerRef.email",
                                "replyTo.$": "",
                                "subject": "Transfer of Ownership Notification for Entitlement Objects"
                            },
                            "displayName": "",
                            "nextStep": "End Step — Success 1",
                            "type": "action",
                            "versionNumber": 2
                        }
                    }
                },
                "enabled": true,
                "creator": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "trigger": {
                    "type": "EXTERNAL",
                    "attributes": {
                        "clientId": "4da6e00f-6e12-4547-badf-604d099a6fa5",
                        "description": "Trigger to start entitlement reassignment.",
                        "id": "idn:external-http",
                        "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/393862a0-c05a-4e1a-a7e9-999d3d2ec5f3"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "d0edb0a5-0b43-4e9e-b1ea-3b02c275a884",
                "name": "governancegroup ownership"
            },
            "object": {
                "id": "d0edb0a5-0b43-4e9e-b1ea-3b02c275a884",
                "name": "governancegroup ownership",
                "description": "process a list of entitlements for a target source",
                "created": "2025-07-22T14:17:05.34312085Z",
                "modified": "2025-08-05T14:06:00.982966042Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "Get Identity",
                    "steps": {
                        "End Step - Failure": {
                            "actionId": "sp:operator-failure",
                            "description": "GET search API HTTP request failed",
                            "displayName": "",
                            "failureDetails": "need to figure out http request body most likely.",
                            "failureName": "Search API call error",
                            "type": "failure"
                        },
                        "End Step - Success 1": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.leaverId.id"
                            },
                            "description": "Get full details on the identity in question",
                            "displayName": "",
                            "nextStep": "HTTP Request",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "identities"
                                    ],
                                    "query": {
                                        "query": "id: {{$.getIdentity.id}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                "oAuthClientSecret": "$.secrets.4be41b04-5996-408b-9a3e-a8898c027932",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthScope": null,
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2024/search"
                            },
                            "catch": [
                                {
                                    "next": "End Step - Failure"
                                }
                            ],
                            "description": "Use the output of an identity search to get entitlements",
                            "displayName": "",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$",
                                "input.$": "$.hTTPRequest.body.*.owns.governanceGroups",
                                "start": "HTTP Request 1",
                                "steps": {
                                    "End Step - Success": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonRequestBody": {
                                                "owner": {
                                                    "id": "{{$.loop.context.getIdentity.managerRef.id}}"
                                                }
                                            },
                                            "method": "patch",
                                            "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                            "oAuthClientSecret": "$.secrets.d4a4a7e7-b4bd-49d6-ace7-6b2d52c82faf",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json",
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2/workgroups/{{$.loop.loopInput.id}}"
                                        },
                                        "displayName": "",
                                        "nextStep": "HTTP Request 2",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "HTTP Request 2": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonRequestBody": {
                                                "add": [
                                                    "{{$.loop.context.getIdentity.managerRef.id}}"
                                                ]
                                            },
                                            "method": "post",
                                            "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                            "oAuthClientSecret": "$.secrets.63caa428-0efa-4d23-93d7-4abf45bdf7fa",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json",
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2/workgroups/{{$.loop.loopInput.id}}/members"
                                        },
                                        "displayName": "",
                                        "nextStep": "HTTP Request 3",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "HTTP Request 3": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "method": "get",
                                            "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                            "oAuthClientSecret": "$.secrets.b1cae6b7-97cd-4356-af0a-6e5f4a1700b2",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "url": "https://igmfinancial-uat.api.identitynow.com/beta/workgroups",
                                            "urlParams": {
                                                "filters": "id eq \"{{$.loop.loopInput.id}}\""
                                            }
                                        },
                                        "displayName": "",
                                        "nextStep": "Send Email",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<p>Dear {{$.loop.context.getIdentity.managerRef.name}},</p>\n<p>Due to the termination/suspension of {{$.loop.context.getIdentity.name}}, ownership of the following Governance Group has been transferred to you:</p>\n<p><span class=\"NormalTextRun SCXW118121221 BCX8\">Governance Group Name:</span></p>\n<p>{{$.loop.loopInput.name}}</p>\n<p><span class=\"NormalTextRun SCXW138093138 BCX8\">Governance Group Description:</span></p>\n<p>{{$.hTTPRequest3.body.*.description}}</p>\n<p>You can access the details of this item at the following link:<br><br><a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&amp;sysparm_article=KB0013953\">Corporate Employees - Access Items &ndash; Inventory with Owner and Approvers for Requests - Resource Centre</a></p>\n<p><span class=\"TextRun SCXW158673015 BCX8\" lang=\"EN-US\" xml:lang=\"EN-US\" data-contrast=\"auto\"><span class=\"NormalTextRun SCXW158673015 BCX8\">As the new owner</span><span class=\"NormalTextRun SCXW158673015 BCX8\"> of this Governance Group</span><span class=\"NormalTextRun SCXW158673015 BCX8\">, you </span><span class=\"NormalTextRun SCXW158673015 BCX8\">are </span><span class=\"NormalTextRun SCXW158673015 BCX8\">responsible for</span><span class=\"NormalTextRun SCXW158673015 BCX8\"> overseeing the group</span><span class=\"NormalTextRun SCXW158673015 BCX8\">&rsquo;s membership</span><span class=\"NormalTextRun SCXW158673015 BCX8\">.&nbsp; </span><span class=\"NormalTextRun SCXW158673015 BCX8\">If you wish to transfer ownership to another individual, please follow the instructions provided in the link below to </span><span class=\"NormalTextRun SCXW158673015 BCX8\">submit</span><span class=\"NormalTextRun SCXW158673015 BCX8\"> a SNAP request.</span></span><span class=\"EOP SCXW158673015 BCX8\" data-ccp-props=\"{&quot;335559685&quot;:720,&quot;335559738&quot;:240,&quot;335559739&quot;:240}\">&nbsp;</span></p>\n<p><a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=a19553aadb27981095d0ddf5f49619ed&amp;sysparm_category=a8d60a5e1b115410afb584415b4bcb53\">Authorization Request - Resource Centre</a></p>\n<p>This is a system-generated email. Please do not respond to this email.</p>",
                                            "context": {},
                                            "recipientEmailList.$": "$.loop.context.getIdentity.managerRef.name",
                                            "subject": "Transfer of Ownership Notification for Governance Group – {{$.loop.loopInput.name}}"
                                        },
                                        "displayName": "",
                                        "nextStep": "End Step - Success",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success 1",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": true,
                "creator": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "trigger": {
                    "type": "EXTERNAL",
                    "attributes": {
                        "clientId": "4509badc-3471-4b31-8fbb-468810d1e1a2",
                        "description": ".",
                        "id": "idn:external-http",
                        "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/d0edb0a5-0b43-4e9e-b1ea-3b02c275a884"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "34d0bcd1-2b22-4141-b296-f4dbaa35f5ff",
                "name": "role ownership"
            },
            "object": {
                "id": "34d0bcd1-2b22-4141-b296-f4dbaa35f5ff",
                "name": "role ownership",
                "description": "Child workflow (external trigger) for the parent leaver workflow that changes the ownership of roles from leaver to their manager.",
                "created": "2025-07-22T14:00:53.463633193Z",
                "modified": "2025-08-05T14:05:57.45741614Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "Compare Numbers": {
                            "actionId": "sp:compare-numbers",
                            "choiceList": [
                                {
                                    "comparator": "NumericGreaterThan",
                                    "nextStep": "Send Email",
                                    "variableA.$": "$.hTTPRequest.body.length()",
                                    "variableB": 0
                                }
                            ],
                            "defaultStep": "End Step — Success 1",
                            "displayName": "",
                            "type": "choice"
                        },
                        "End Step — Success 1": {
                            "actionId": "sp:operator-success",
                            "description": "End of active path",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "roles"
                                    ],
                                    "query": {
                                        "query": "owner.id:{{$.trigger.leaverId.id}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                "oAuthClientSecret": "$.secrets.400cf7dd-4c8f-446c-9ef6-a5624a48bff2",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v3/search?offset=0&limit=100",
                                "urlParams": null
                            },
                            "description": "get list of roles owned by this identity",
                            "displayName": "Get Roles",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$.trigger",
                                "input.$": "$.hTTPRequest.body",
                                "start": "HTTP Request 1",
                                "steps": {
                                    "End Step — Success": {
                                        "actionId": "sp:operator-success",
                                        "type": "success"
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "replace",
                                                    "path": "/owner",
                                                    "value": {
                                                        "id": "{{$.loop.context.managerRef.id}}",
                                                        "type": "IDENTITY"
                                                    }
                                                }
                                            ],
                                            "method": "patch",
                                            "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                            "oAuthClientSecret": "$.secrets.9b9679fc-cfcf-4c1a-afd5-df2d4f3ed72d",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json-patch+json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/beta/roles/{{$.loop.loopInput.id}}"
                                        },
                                        "description": "look up each role and change owner",
                                        "displayName": "Change Manager to Owner",
                                        "nextStep": "End Step — Success",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "nextStep": "Compare Numbers",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear {{$.trigger.managerRef.name}},</p>\n<p class=\"MsoNormal\">Due to the termination/suspension of {{$.trigger.leaverId.name}}, ownership of the following Roles has been transferred to you:</p>\n<ul>#if($objsLen>1)#foreach ( $detail in ${objs} )\n<li>${detail.name}</li>\n#end #{else}\n\n<li>${objs.name}</li>\n#end\n</ul>\n<p class=\"MsoNormal\">You can access the details of these items at the following link:<br><a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&amp;sysparm_article=KB0013953\">Corporate Employees - Access Items &ndash; Inventory with Owner and Approvers for Requests - Resource Centre</a></p>\n<p class=\"MsoNormal\">If you wish to transfer ownership to another individual, please follow the instructions provided in the link below to submit a SNAP request.</p>\n<p class=\"MsoNormal\"><a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=a19553aadb27981095d0ddf5f49619ed&amp;sysparm_category=a8d60a5e1b115410afb584415b4bcb53\">Authorization Request - Resource Centre</a></p>\n<p class=\"MsoNormal\">This is a system-generated email. Please do not respond to this email.</p>",
                                "context": {
                                    "objs.$": "$.hTTPRequest.body",
                                    "objsLen.$": "$.hTTPRequest.body.length()"
                                },
                                "recipientEmailList.$": "$.trigger.managerRef.email",
                                "replyTo.$": "",
                                "subject": "Transfer of Ownership Notification for Role Objects"
                            },
                            "displayName": "",
                            "nextStep": "End Step — Success 1",
                            "type": "action",
                            "versionNumber": 2
                        }
                    }
                },
                "enabled": true,
                "creator": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "trigger": {
                    "type": "EXTERNAL",
                    "attributes": {
                        "clientId": "337c58f0-9a0b-45d2-b763-fb151072660d",
                        "description": "Child trigger to change leaver ownership of roles to manager.",
                        "id": "idn:external-http",
                        "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/34d0bcd1-2b22-4141-b296-f4dbaa35f5ff"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "9d322363-e96b-4789-9738-697fec80f1cc",
                "name": "Corporate Users Inactive User Governance - Phase 2"
            },
            "object": {
                "id": "9d322363-e96b-4789-9738-697fec80f1cc",
                "name": "Corporate Users Inactive User Governance - Phase 2",
                "description": "",
                "created": "2025-07-14T15:41:35.255824605Z",
                "modified": "2025-08-01T12:35:54.107815685Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "identities"
                                    ],
                                    "query": {
                                        "query": "(attributes.userType:\"employee\" OR attributes.userType:\"contractor\") AND (attributes.cloudLifecycleState:\"active\") AND (attributes.lastSignInDateType:[now-30d TO now])"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                "oAuthClientSecret": "$.secrets.8dd214cc-9959-4d41-8888-14802e667e96",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2025/search"
                            },
                            "description": "Get the list of identities whose last sign in date more than 50 days ago.",
                            "displayName": "",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "input.$": "$.hTTPRequest.body",
                                "start": "Get Identity 1",
                                "steps": {
                                    "Compare Strings": {
                                        "actionId": "sp:compare-strings",
                                        "choiceList": [
                                            {
                                                "comparator": "StringContains",
                                                "nextStep": "Get Accounts",
                                                "variableA.$": "$.getIdentity1.attributes.loaEndDate",
                                                "variableB": "None"
                                            }
                                        ],
                                        "defaultStep": "Get Accounts 1",
                                        "description": "Verify if LOA End date set for identity.",
                                        "displayName": "",
                                        "type": "choice"
                                    },
                                    "Compare Timestamps": {
                                        "actionId": "sp:compare-timestamps",
                                        "choiceList": [
                                            {
                                                "comparator": "TimestampLessThanXDay",
                                                "nextStep": "HTTP Request 3",
                                                "variableA.$": "$.getIdentity1.attributes.loaEndDateType",
                                                "variableB": "7"
                                            }
                                        ],
                                        "defaultStep": "End Step - Success 1",
                                        "description": "Check if LOA end date is in past for more than 7 days.",
                                        "displayName": "Check LOA End Date",
                                        "type": "choice"
                                    },
                                    "Define Variable": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "date",
                                                    "transforms": [],
                                                    "variableA.$": "$.getIdentity1.attributes.loaEndDateType"
                                                },
                                                {
                                                    "description": "",
                                                    "name": "currentdate",
                                                    "transforms": [
                                                        {
                                                            "id": "sp:transform:substring:string",
                                                            "input": {
                                                                "length": 10,
                                                                "start": 0
                                                            }
                                                        },
                                                        {
                                                            "id": "sp:transform:concatenate:string",
                                                            "input": {
                                                                "variableB": "T-01:00:00:000-00:00"
                                                            }
                                                        }
                                                    ],
                                                    "variableA.$": "$.now()"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "Compare Strings",
                                        "type": "Mutation"
                                    },
                                    "Define Variable 1": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "snow",
                                                    "transforms": [],
                                                    "variableA.$": "$.getAccounts1.accounts[?(@.sourceName==\"ServiceNowAPI\")].id"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "Compare Timestamps",
                                        "type": "Mutation"
                                    },
                                    "Define Variable 2": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "snow",
                                                    "transforms": [],
                                                    "variableA.$": "$.getAccounts.accounts[?(@.sourceName==\"ServiceNowAPI\")].id"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "HTTP Request 1",
                                        "type": "Mutation"
                                    },
                                    "End Step - Success 1": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "Get Accounts": {
                                        "actionId": "sp:get-accounts",
                                        "attributes": {
                                            "filterCriteria": "name",
                                            "getAccountsBy": "specificIdentity",
                                            "identity.$": "$.getIdentity1.id",
                                            "operator": "eq",
                                            "value": "ServiceNowAPI"
                                        },
                                        "description": "Get ServiceNowAPI source id",
                                        "displayName": "",
                                        "nextStep": "Define Variable 2",
                                        "type": "action",
                                        "versionNumber": 1
                                    },
                                    "Get Accounts 1": {
                                        "actionId": "sp:get-accounts",
                                        "attributes": {
                                            "filterCriteria": "name",
                                            "getAccountsBy": "specificIdentity",
                                            "identity.$": "$.getIdentity1.id",
                                            "operator": "eq",
                                            "value": "ServiceNowAPI"
                                        },
                                        "description": "Get ServiceNowAPI source id",
                                        "displayName": "",
                                        "nextStep": "Define Variable 1",
                                        "type": "action",
                                        "versionNumber": 1
                                    },
                                    "Get Identity 1": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.id"
                                        },
                                        "description": "Get information about each identity.",
                                        "displayName": "",
                                        "nextStep": "Define Variable",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "add",
                                                    "path": "/attributes/loaStartDate",
                                                    "value": "{{$.defineVariable.currentdate}}"
                                                }
                                            ],
                                            "jsonRequestBody": {
                                                "indices": [
                                                    "identities"
                                                ],
                                                "query": {
                                                    "query": "(attributes.userType:\"employee\" OR attributes.userType:\"contractor\") AND (attributes.cloudLifecycleState:\"active\") AND (attributes.lastSignInDateType:[* TO now-50d])"
                                                }
                                            },
                                            "method": "patch",
                                            "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                            "oAuthClientSecret": "$.secrets.e0cec217-2337-458b-b5a2-05c88e986e54",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2025/accounts/{{$.defineVariable2.snow}}"
                                        },
                                        "description": "Get the list of identities whose last sign in date more than 45 days ago.",
                                        "displayName": "",
                                        "nextStep": "End Step - Success 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "HTTP Request 3": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "remove",
                                                    "path": "/attributes/loaEndDate"
                                                }
                                            ],
                                            "jsonRequestBody": {
                                                "indices": [
                                                    "identities"
                                                ],
                                                "query": {
                                                    "query": "(attributes.userType:\"employee\" OR attributes.userType:\"contractor\") AND (attributes.cloudLifecycleState:\"active\") AND (attributes.lastSignInDateType:[* TO now-50d])"
                                                }
                                            },
                                            "method": "patch",
                                            "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                            "oAuthClientSecret": "$.secrets.e0cec217-2337-458b-b5a2-05c88e986e54",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2025/accounts/{{$.defineVariable1.snow}}"
                                        },
                                        "description": "Get the list of identities whose last sign in date more than 45 days ago.",
                                        "displayName": "",
                                        "nextStep": "End Step - Success 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "SCHEDULED",
                    "attributes": {
                        "cronString": "0 21 * * *",
                        "dailyTimes": [
                            "1970-01-01T03:00:00.000Z"
                        ],
                        "frequency": "daily",
                        "id": "idn:cron-schedule",
                        "timeZone": "America/Winnipeg"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "d06127fc-ecec-46ac-ab71-5c0dbe29e5df",
                "name": "Corporate Users Inactive User Governance - Phase 1"
            },
            "object": {
                "id": "d06127fc-ecec-46ac-ab71-5c0dbe29e5df",
                "name": "Corporate Users Inactive User Governance - Phase 1",
                "description": "Send email to user's manager when user didnt login for more than 30 days.",
                "created": "2025-07-07T15:37:24.908327044Z",
                "modified": "2025-08-01T12:34:31.87715364Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "identities"
                                    ],
                                    "query": {
                                        "query": "(attributes.userType:\"employee\" OR attributes.userType:\"contractor\") AND (attributes.cloudLifecycleState:\"active\") AND (attributes.lastSignInDateType:[now-30d TO now])"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                "oAuthClientSecret": "$.secrets.843bb197-5663-445f-8a5d-0e62c7535610",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2025/search"
                            },
                            "description": "Get List of all identities who didnt login for last 30 days.",
                            "displayName": "",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "input.$": "$.hTTPRequest.body",
                                "start": "Get Identity 1",
                                "steps": {
                                    "End Step - Success 1": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "Get Identity": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.manager.id"
                                        },
                                        "description": "",
                                        "displayName": "Get Manager",
                                        "nextStep": "Send Email",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Get Identity 1": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.id"
                                        },
                                        "displayName": "",
                                        "nextStep": "Verify Data Type",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<p class=\"MsoNormal\">Dear&nbsp;${managerFirstName} ${managerLastName},</p>\n<p class=\"MsoNormal\">You are receiving this notification because you are the manager of the following user, who has not logged in for the past 30 days:</p>\n<ul style=\"margin-top: 0cm;\" type=\"disc\">\n<li class=\"MsoNormal\" style=\"mso-list: l0 level1 lfo1; tab-stops: list 36.0pt;\">Name:&nbsp;${firstName} ${lastName}</li>\n<li class=\"MsoNormal\" style=\"mso-list: l0 level1 lfo1; tab-stops: list 36.0pt;\">Username:&nbsp;${sAMAccountName}</li>\n</ul>\n<p class=\"MsoNormal\">If the user is currently on leave or has left the organization, please submit an&nbsp;<a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=b069f5121be98e107254535f034bcbc9&amp;sysparm_category=240d741d1b10e010f2110f6cdc4bcbaa\">Offboarding Request</a> ticket via&nbsp;ServiceNow&nbsp;to initiate the suspension or offboarding process.</p>\n<p class=\"MsoNormal\">Important:&nbsp;If the user does not log in within the next 20 days, their account will be suspended, and all associated access will be disabled.</p>\n<p class=\"MsoNormal\">For any questions or further assistance, please refer to [KB Link] or contact the&nbsp;IAM Operations team&nbsp;at&nbsp;<a href=\"mailto:iamops@igmfinancial.com\" target=\"_blank\" rel=\"noopener\">iamops@igmfinancial.com</a>.</p>\n<p class=\"MsoNormal\">Best regards,<br>IAM Operations Team</p>\n<p class=\"MsoNormal\">Bonjour&nbsp;${managerFirstName} ${managerLastName},</p>\n<p class=\"MsoNormal\"><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">Vous recevez cet avis parce que votre subordonn&eacute; direct ci-dessous ne s&rsquo;est pas connect&eacute; &agrave; son compte depuis plus de 30&nbsp;jours&nbsp;:</span></p>\n<ul style=\"margin-top: 0cm;\" type=\"disc\">\n<li class=\"MsoNormal\" style=\"mso-list: l0 level1 lfo1; tab-stops: list 36.0pt;\"><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">Nom&nbsp;:&nbsp;${firstName} ${lastName}</span></li>\n<li class=\"MsoNormal\" style=\"mso-list: l0 level1 lfo1; tab-stops: list 36.0pt;\"><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">Nom d&rsquo;utilisateur&nbsp;: ${sAMAccountName}</span></li>\n</ul>\n<p class=\"MsoNormal\"><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">Si l&rsquo;utilisateur est actuellement en cong&eacute; ou a quitt&eacute; l&rsquo;entreprise, veuillez soumettre une </span><a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=b069f5121be98e107254535f034bcbc9&amp;sysparm_category=240d741d1b10e010f2110f6cdc4bcbaa\"><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">demande de retrait d&rsquo;utilisateur</span></a><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\"> dans le portail ServiceNow afin de lancer le processus de retrait ou de suspension.</span></p>\n<p class=\"MsoNormal\"><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">Important&nbsp;: Si l&rsquo;utilisateur ne se connecte pas &agrave; son compte dans les 20&nbsp;prochains jours, son compte sera suspendu et tous les autres acc&egrave;s associ&eacute;s &agrave; son compte seront d&eacute;sactiv&eacute;s.</span></p>\n<p class=\"MsoNormal\"><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">Si vous avez des questions ou si vous avez besoin d&rsquo;aide, veuillez consulter l&rsquo;article [KB Link] ou &eacute;crire un courriel &agrave; l&rsquo;&eacute;quipe de gestion des acc&egrave;s et des identit&eacute;s &agrave; </span><a href=\"mailto:iamops@igmfinancial.com\" target=\"_blank\" rel=\"noopener\"><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">iamops@igmfinancial.com</span></a><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">.</span></p>\n<p class=\"MsoNormal\"><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">Cordialement,<br>&Eacute;quipe de gestion des acc&egrave;s et des identit&eacute;s</span></p>",
                                            "context": {
                                                "firstName.$": "$.getIdentity1.attributes.firstname",
                                                "lastName.$": "$.getIdentity1.attributes.lastname",
                                                "managerFirstName.$": "$.getIdentity.attributes.firstname",
                                                "managerLastName.$": "$.getIdentity.attributes.lastname",
                                                "sAMAccountName.$": "$.getIdentity1.attributes.samaccountname"
                                            },
                                            "recipientEmailList": [
                                                "{{$.getIdentity.attributes.email}}",
                                                "{{$.getIdentity1.attributes.email}}"
                                            ],
                                            "subject": "Inactive User Account Notification ${firstName} ${lastName} – Action Required/ Avis relatif aux comptes d’utilisateur inactifs ${firstName} ${lastName} – Mesure à prendre"
                                        },
                                        "description": "Send email to manager",
                                        "displayName": "",
                                        "nextStep": "End Step - Success 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Verify Data Type": {
                                        "actionId": "sp:compare-unary",
                                        "choiceList": [
                                            {
                                                "comparator": "IsPresent",
                                                "nextStep": "Get Identity",
                                                "variableA.$": "$.loop.loopInput.manager"
                                            }
                                        ],
                                        "defaultStep": "End Step - Success 1",
                                        "description": "Make sure manager exists",
                                        "displayName": "Verify Manager Exists",
                                        "type": "choice"
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "SCHEDULED",
                    "attributes": {
                        "cronString": "0 19 * * *",
                        "dailyTimes": [
                            "1970-01-01T01:00:00.000Z"
                        ],
                        "frequency": "daily",
                        "id": "idn:cron-schedule",
                        "timeZone": "America/Winnipeg"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "ceebe0fe-c872-4b6a-b92b-42857dba68ec",
                "name": "Notification Suspension or Leave of Absence"
            },
            "object": {
                "id": "ceebe0fe-c872-4b6a-b92b-42857dba68ec",
                "name": "Notification Suspension or Leave of Absence",
                "description": "Lifecycle state changed to suspended",
                "created": "2024-11-05T18:38:11.931532577Z",
                "modified": "2025-07-29T19:14:49.1751944Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "Compare Strings",
                    "steps": {
                        "Compare Strings": {
                            "actionId": "sp:compare-strings",
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Get Identity",
                                    "variableA.$": "$.trigger.changes[?(@.attribute=='cloudLifecycleState')].newValue",
                                    "variableB": "suspended"
                                }
                            ],
                            "defaultStep": "success",
                            "description": "Suspended?",
                            "type": "choice"
                        },
                        "Compare Strings 1": {
                            "actionId": "sp:compare-strings",
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Send Email 1",
                                    "variableA.$": "$.getIdentity.attributes.userType",
                                    "variableB": "Advisor"
                                }
                            ],
                            "defaultStep": "Get Identity 1",
                            "description": "Check if an advisor, they don't have a manager so we have to handle differently",
                            "type": "choice"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "description": "Get Contractor Identity Information",
                            "nextStep": "Compare Strings 1",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Get Identity 1": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.getIdentity.managerRef.id"
                            },
                            "description": "Get Manager Identity Information for email",
                            "nextStep": "Send Email",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p class=\"MsoNormal\">Dear ${managerFirstName} ${managerLastName},<br><br>You are receiving this notification because you are the manager of the following user, whose account has been suspended, and all system access has been disabled :<br><br>Name: ${firstName} ${lastName}<br>Username: ${sAMAccountName}<br style=\"mso-special-character: line-break;\"><!-- [if !supportLineBreakNewLine]--><br style=\"mso-special-character: line-break;\"><!--[endif]--></p>\n<p class=\"MsoNormal\">The account suspension was initiated by a SNAP Request, or due to account inactivity.<br style=\"mso-special-character: line-break;\"><!-- [if !supportLineBreakNewLine]--><br style=\"mso-special-character: line-break;\"><!--[endif]--></p>\n<p class=\"MsoNormal\">For any questions or further assistance, please refer to [KB Link] or contact the IAM Operations team at&nbsp;<a href=\"mailto:iamops@igmfinancial.com\" target=\"_blank\" rel=\"noopener\">iamops@igmfinancial.com</a>.</p>\n<p class=\"MsoNormal\"><span lang=\"FR\" style=\"mso-ansi-language: FR;\">Best regards,<br>IAM Operations Team</span></p>\n<p class=\"MsoNormal\"><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">Bonjour&nbsp;${managerFirstName} ${managerLastName},<br><br>Vous recevez cet avis parce que le compte de votre subordonn&eacute; direct ci-dessous a &eacute;t&eacute; suspendu et que tous ses acc&egrave;s ont &eacute;t&eacute; d&eacute;sactiv&eacute;s&nbsp;:<br><br>Nom&nbsp;:&nbsp;${firstName} ${lastName}<br>Nom d&rsquo;utilisateur&nbsp;: ${sAMAccountName}<br style=\"mso-special-character: line-break;\"><!-- [if !supportLineBreakNewLine]--><br style=\"mso-special-character: line-break;\"><!--[endif]--></span></p>\n<p class=\"MsoNormal\"><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">Le compte a &eacute;t&eacute; suspendu &agrave; la suite d&rsquo;une demande&nbsp;SNAP ou parce que le compte &eacute;tait inactif.<br style=\"mso-special-character: line-break;\"><!-- [if !supportLineBreakNewLine]--><br style=\"mso-special-character: line-break;\"><!--[endif]--></span></p>\n<p class=\"MsoNormal\"><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">Si vous avez des questions ou si vous avez besoin d&rsquo;aide, veuillez consulter l&rsquo;article [KB Link] ou &eacute;crire un courriel &agrave; l&rsquo;&eacute;quipe de gestion des acc&egrave;s et des identit&eacute;s &agrave; </span><a href=\"mailto:iamops@igmfinancial.com\" target=\"_blank\" rel=\"noopener\"><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">iamops@igmfinancial.com</span></a><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">.</span></p>\n<p class=\"MsoNormal\"><span lang=\"FR-CA\" style=\"mso-ansi-language: FR-CA;\">Cordialement,<br>&Eacute;quipe de gestion des acc&egrave;s et des identit&eacute;s</span></p>",
                                "context": {
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "managerFirstName.$": "$.getIdentity1.attributes.firstname",
                                    "managerLastName.$": "$.getIdentity1.attributes.lastname",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname"
                                },
                                "from": null,
                                "recipientEmailList.$": "$.getIdentity1.attributes.email",
                                "replyTo": "",
                                "subject": "Account Suspended for ${firstName} ${lastName}/ Suspension du compte de ${firstName} ${lastName}"
                            },
                            "description": "Send email to manager",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email 1": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear Field Network Administration<br><br>The account has been suspended successfully and all system access has been disabled.<br><br>Name: ${firstName} ${lastName}<br>Username: ${sAMAccountName}<br><br>If this was processed in error, please contact the IGM Service Desk.<br><br>IGM Service Desk <br>Mon &ndash; Fri 7:30 am to 7:30 pm ET<br>Phone Number: 1-800-661-2040<br>SNAP Portal &ndash; Live Chat / Get Help<br>https://igmfinancial.service-now.com/snap<br>This is a system-generated email. Please do not respond to this email.<br><br><br><br>Bonjour Field Network Administration,<br><br>Le compte a &eacute;t&eacute; suspendu avec succ&egrave;s et tous les acc&egrave;s au syst&egrave;me ont &eacute;t&eacute; d&eacute;sactiv&eacute;s. <br><br>Nom : ${firstName} ${lastName}<br>Nom d&rsquo;utilisateur : ${sAMAccountName}<br><br>Si la suspension a &eacute;t&eacute; op&eacute;r&eacute;e par erreur, veuillez communiquer avec le Bureau des services technologiques d&rsquo;IGM. <br><br>Bureau des services technologiques d&rsquo;IGM <br>Lundi au vendredi de 7 h 30 &agrave; 19 h 30 (HE) <br>Num&eacute;ro de t&eacute;l&eacute;phone : 1-800-661-2040 <br>Portail SNAP &ndash; Clavardage en direct/Aide <br>https://igmfinancial.service-now.com/snap&nbsp;<br>Ce courriel a &eacute;t&eacute; produit par le syst&egrave;me. Veuillez ne pas y r&eacute;pondre. </p>",
                                "context": {
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname"
                                },
                                "recipientEmailList": [
                                    "fieldnetworkadministration@ig.ca"
                                ],
                                "subject": "Account Suspended for ${firstName} ${lastName} / Le compte de ${firstName} ${lastName} a été suspendu"
                            },
                            "description": "Email for Advisors. goes to Field Network Administration",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "success": {
                            "actionId": "sp:operator-success",
                            "description": null,
                            "type": "success"
                        }
                    }
                },
                "enabled": true,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "description": "Lifecycle State is suspended",
                        "filter.$": "$.changes[?(@.attribute == \"cloudLifecycleState\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "39caf5f2-5db1-4e36-be91-4d7aa20c30f1",
                "name": "With Email notification Corporate Users Inactive User Governance - Phase 2"
            },
            "object": {
                "id": "39caf5f2-5db1-4e36-be91-4d7aa20c30f1",
                "name": "With Email notification Corporate Users Inactive User Governance - Phase 2",
                "description": "",
                "created": "2025-07-29T19:03:49.043970302Z",
                "modified": "2025-07-29T19:04:16.280017098Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "identities"
                                    ],
                                    "query": {
                                        "query": "(attributes.userType:\"employee\" OR attributes.userType:\"contractor\") AND (attributes.cloudLifecycleState:\"active\") AND (attributes.lastSignInDateType:[* TO now-50d])"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                "oAuthClientSecret": "",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2025/search"
                            },
                            "description": "Get the list of identities whose last sign in date more than 45 days ago.",
                            "displayName": "",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "input.$": "$.hTTPRequest.body",
                                "start": "Get Identity 1",
                                "steps": {
                                    "Compare Strings": {
                                        "actionId": "sp:compare-strings",
                                        "choiceList": [
                                            {
                                                "comparator": "StringContains",
                                                "nextStep": "Get Accounts",
                                                "variableA.$": "$.getIdentity1.attributes.loaEndDate",
                                                "variableB": "None"
                                            }
                                        ],
                                        "defaultStep": "Get Accounts 1",
                                        "description": "Verify if LOA End date set for identity.",
                                        "displayName": "",
                                        "type": "choice"
                                    },
                                    "Compare Timestamps": {
                                        "actionId": "sp:compare-timestamps",
                                        "choiceList": [
                                            {
                                                "comparator": "TimestampLessThanXDay",
                                                "nextStep": "HTTP Request 3",
                                                "variableA.$": "$.getIdentity1.attributes.loaEndDateType",
                                                "variableB": "7"
                                            }
                                        ],
                                        "defaultStep": "End Step - Success 1",
                                        "description": "Check if LOA end date is in past for more than 7 days.",
                                        "displayName": "Check LOA End Date",
                                        "type": "choice"
                                    },
                                    "Define Variable": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "date",
                                                    "transforms": [],
                                                    "variableA.$": "$.getIdentity1.attributes.loaEndDateType"
                                                },
                                                {
                                                    "description": "",
                                                    "name": "currentdate",
                                                    "transforms": [
                                                        {
                                                            "id": "sp:transform:substring:string",
                                                            "input": {
                                                                "length": 10,
                                                                "start": 0
                                                            }
                                                        },
                                                        {
                                                            "id": "sp:transform:concatenate:string",
                                                            "input": {
                                                                "variableB": "T-01:00:00:000-00:00"
                                                            }
                                                        }
                                                    ],
                                                    "variableA.$": "$.now()"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "Compare Strings",
                                        "type": "Mutation"
                                    },
                                    "Define Variable 1": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "snow",
                                                    "transforms": [],
                                                    "variableA.$": "$.getAccounts1.accounts[?(@.sourceName==\"ServiceNowAPI\")].id"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "Compare Timestamps",
                                        "type": "Mutation"
                                    },
                                    "Define Variable 2": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "snow",
                                                    "transforms": [],
                                                    "variableA.$": "$.getAccounts.accounts[?(@.sourceName==\"ServiceNowAPI\")].id"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "HTTP Request 1",
                                        "type": "Mutation"
                                    },
                                    "End Step - Success 1": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "Get Accounts": {
                                        "actionId": "sp:get-accounts",
                                        "attributes": {
                                            "filterCriteria": "name",
                                            "getAccountsBy": "specificIdentity",
                                            "identity.$": "$.getIdentity1.id",
                                            "operator": "eq",
                                            "value": "ServiceNowAPI"
                                        },
                                        "description": "Get ServiceNowAPI source id",
                                        "displayName": "",
                                        "nextStep": "Define Variable 2",
                                        "type": "action",
                                        "versionNumber": 1
                                    },
                                    "Get Accounts 1": {
                                        "actionId": "sp:get-accounts",
                                        "attributes": {
                                            "filterCriteria": "name",
                                            "getAccountsBy": "specificIdentity",
                                            "identity.$": "$.getIdentity1.id",
                                            "operator": "eq",
                                            "value": "ServiceNowAPI"
                                        },
                                        "description": "Get ServiceNowAPI source id",
                                        "displayName": "",
                                        "nextStep": "Define Variable 1",
                                        "type": "action",
                                        "versionNumber": 1
                                    },
                                    "Get Identity": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.manager.id"
                                        },
                                        "description": "Get Manager information",
                                        "displayName": "Get Manager",
                                        "nextStep": "Send Email",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Get Identity 1": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.id"
                                        },
                                        "description": "Get information about each identity.",
                                        "displayName": "",
                                        "nextStep": "Define Variable",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "add",
                                                    "path": "/attributes/loaStartDate",
                                                    "value": "{{$.defineVariable.currentdate}}"
                                                }
                                            ],
                                            "jsonRequestBody": {
                                                "indices": [
                                                    "identities"
                                                ],
                                                "query": {
                                                    "query": "(attributes.userType:\"employee\" OR attributes.userType:\"contractor\") AND (attributes.cloudLifecycleState:\"active\") AND (attributes.lastSignInDateType:[* TO now-50d])"
                                                }
                                            },
                                            "method": "patch",
                                            "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                            "oAuthClientSecret": "$.secrets.e0cec217-2337-458b-b5a2-05c88e986e54",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2025/accounts/{{$.defineVariable2.snow}}"
                                        },
                                        "description": "Get the list of identities whose last sign in date more than 45 days ago.",
                                        "displayName": "",
                                        "nextStep": "Verify Data Type",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "HTTP Request 2": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "add",
                                                    "path": "/attributes/loaStartDate",
                                                    "value": "{{$.defineVariable.currentdate}}"
                                                }
                                            ],
                                            "jsonRequestBody": {
                                                "indices": [
                                                    "identities"
                                                ],
                                                "query": {
                                                    "query": "(attributes.userType:\"employee\" OR attributes.userType:\"contractor\") AND (attributes.cloudLifecycleState:\"active\") AND (attributes.lastSignInDateType:[* TO now-50d])"
                                                }
                                            },
                                            "method": "patch",
                                            "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                            "oAuthClientSecret": "$.secrets.e0cec217-2337-458b-b5a2-05c88e986e54",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2025/accounts/{{$.defineVariable1.snow}}"
                                        },
                                        "description": "Get the list of identities whose last sign in date more than 45 days ago.",
                                        "displayName": "",
                                        "nextStep": "Verify Data Type",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "HTTP Request 3": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "remove",
                                                    "path": "/attributes/loaEndDate"
                                                }
                                            ],
                                            "jsonRequestBody": {
                                                "indices": [
                                                    "identities"
                                                ],
                                                "query": {
                                                    "query": "(attributes.userType:\"employee\" OR attributes.userType:\"contractor\") AND (attributes.cloudLifecycleState:\"active\") AND (attributes.lastSignInDateType:[* TO now-50d])"
                                                }
                                            },
                                            "method": "patch",
                                            "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                            "oAuthClientSecret": "$.secrets.e0cec217-2337-458b-b5a2-05c88e986e54",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2025/accounts/{{$.defineVariable1.snow}}"
                                        },
                                        "description": "Get the list of identities whose last sign in date more than 45 days ago.",
                                        "displayName": "",
                                        "nextStep": "HTTP Request 2",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<p class=\"MsoNormal\">Dear&nbsp;${managerFirstName}<strong> </strong>${managerLastName},</p>\n<p class=\"MsoNormal\"><span style=\"font-size: 11.0pt; line-height: 107%; font-family: 'Aptos',sans-serif; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Aptos; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-CA; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;\">The following user has not logged in for the past 45 days:</span></p>\n<p>Name<strong>:</strong>&nbsp;${firstName} ${lastName}</p>\n<p>Username<strong>:</strong>&nbsp;${sAMAccountName}</p>\n<p class=\"MsoNormal\">As a result, the user&rsquo;s account has been&nbsp;suspended<strong>,</strong>&nbsp;and all access has been&nbsp;disabled. The user&rsquo;s email address has also been&nbsp;restricted.</p>\n<p class=\"MsoNormal\">If reactivation of the account is required, please submit a&nbsp;ServiceNow ticket&nbsp;using the&nbsp;<a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=2aae9af7db6975d0520eae3b13961903&amp;sysparm_category=240d741d1b10e010f2110f6cdc4bcbaa\">Onboarding Request - Resource Centre</a>&nbsp;form and select the&nbsp;\"Return from temporary leave\"&nbsp;option.</p>\n<p class=\"MsoNormal\">For any further questions, please contact the&nbsp;IAM Operations team&nbsp;at&nbsp;<a href=\"mailto:iamops@igmfinancial.com\" target=\"_blank\" rel=\"noopener\">iamops@igmfinancial.com</a>.</p>\n<p class=\"MsoNormal\">Best regards,<br>IAM Operations Team</p>",
                                            "context": {
                                                "firstName.$": "$.getIdentity1.attributes.firstname",
                                                "lastName.$": "$.getIdentity1.attributes.lastname",
                                                "managerFirstName.$": "$.getIdentity.attributes.firstname",
                                                "managerLastName.$": "$.getIdentity.attributes.lastname",
                                                "sAMAccountName.$": "$.getIdentity1.attributes.samaccountname"
                                            },
                                            "recipientEmailList.$": "$.getIdentity.attributes.email",
                                            "subject": "User Account ${firstName} ${lastName} Suspended Due to Inactivity"
                                        },
                                        "description": "Send email to manager.",
                                        "displayName": "",
                                        "nextStep": "End Step - Success 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Verify Data Type": {
                                        "actionId": "sp:compare-unary",
                                        "choiceList": [
                                            {
                                                "comparator": "IsPresent",
                                                "nextStep": "Get Identity",
                                                "variableA.$": "$.loop.loopInput.manager"
                                            }
                                        ],
                                        "defaultStep": "End Step - Success 1",
                                        "description": "Make sure manager exists",
                                        "displayName": "Verify Manager Exists",
                                        "type": "choice"
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "SCHEDULED",
                    "attributes": {
                        "cronString": "0 9,10,11,12,13,14,15,21 * * *",
                        "dailyTimes": [
                            "1969-12-31T15:00:00.000Z",
                            "1969-12-31T16:00:00.000Z",
                            "1969-12-31T17:00:00.000Z",
                            "1969-12-31T18:00:00.000Z",
                            "1969-12-31T19:00:00.000Z",
                            "1969-12-31T20:00:00.000Z",
                            "1969-12-31T21:00:00.000Z",
                            "1970-01-01T03:00:00.000Z"
                        ],
                        "frequency": "daily",
                        "id": "idn:cron-schedule",
                        "timeZone": "America/Winnipeg"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "197b43da-4d8d-4b15-b5ee-edc7f22cac37",
                "name": "SailPoint PS - Reassign Role Ownership"
            },
            "object": {
                "id": "197b43da-4d8d-4b15-b5ee-edc7f22cac37",
                "name": "SailPoint PS - Reassign Role Ownership",
                "description": "Child workflow (external trigger) for the parent leaver workflow that changes the ownership of roles from leaver to their manager.",
                "created": "2025-04-07T23:00:14.914443989Z",
                "modified": "2025-07-25T14:49:23.782807422Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "Compare Numbers": {
                            "actionId": "sp:compare-numbers",
                            "choiceList": [
                                {
                                    "comparator": "NumericGreaterThan",
                                    "nextStep": "Send Email",
                                    "variableA.$": "$.hTTPRequest.body.length()",
                                    "variableB": 0
                                }
                            ],
                            "defaultStep": "End Step — Success 1",
                            "displayName": "",
                            "type": "choice"
                        },
                        "End Step — Success 1": {
                            "actionId": "sp:operator-success",
                            "description": "End of active path",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "roles"
                                    ],
                                    "query": {
                                        "query": "owner.id:{{$.trigger.leaverId.id}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "b0f1b396f93a4ee9979d009ccd099c1f",
                                "oAuthClientSecret": "$.secrets.a30e84a0-73d3-4bc7-90cc-a3fa699419cb",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v3/search?offset=0&limit=100",
                                "urlParams": null
                            },
                            "description": "get list of roles owned by this identity",
                            "displayName": "Get Roles",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$.trigger",
                                "input.$": "$.hTTPRequest.body",
                                "start": "HTTP Request 1",
                                "steps": {
                                    "End Step — Success": {
                                        "actionId": "sp:operator-success",
                                        "type": "success"
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "replace",
                                                    "path": "/owner",
                                                    "value": {
                                                        "id": "{{$.loop.context.managerRef.id}}",
                                                        "type": "IDENTITY"
                                                    }
                                                }
                                            ],
                                            "method": "patch",
                                            "oAuthClientId": "b0f1b396f93a4ee9979d009ccd099c1f",
                                            "oAuthClientSecret": "$.secrets.cc208483-1797-4562-bba9-2e5da9ebae83",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json-patch+json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/beta/roles/{{$.loop.loopInput.id}}"
                                        },
                                        "description": "look up each role and change owner",
                                        "displayName": "Change Manager to Owner",
                                        "nextStep": "End Step — Success",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "nextStep": "Compare Numbers",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear {{$.trigger.managerRef.name}},</p>\n<p class=\"MsoNormal\">Due to the termination/suspension of {{$.trigger.leaverId.name}}, ownership of the following Roles has been transferred to you:</p>\n<ul>#if($objsLen>1)#foreach ( $detail in ${objs} )\n<li>${detail.name}</li>\n#end #{else}\n\n<li>${objs.name}</li>\n#end\n</ul>\n<p class=\"MsoNormal\">You can access the details of these items at the following link:<br><a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&amp;sysparm_article=KB0013953\">Corporate Employees - Access Items &ndash; Inventory with Owner and Approvers for Requests - Resource Centre</a></p>\n<p class=\"MsoNormal\">If you wish to transfer ownership to another individual, please follow the instructions provided in the link below to submit a SNAP request.</p>\n<p class=\"MsoNormal\"><a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=a19553aadb27981095d0ddf5f49619ed&amp;sysparm_category=a8d60a5e1b115410afb584415b4bcb53\">Authorization Request - Resource Centre</a></p>\n<p class=\"MsoNormal\">This is a system-generated email. Please do not respond to this email.</p>",
                                "context": {
                                    "objs.$": "$.hTTPRequest.body",
                                    "objsLen.$": "$.hTTPRequest.body.length()"
                                },
                                "recipientEmailList.$": "$.trigger.managerRef.email",
                                "replyTo.$": "",
                                "subject": "Transfer of Ownership Notification for Role Objects"
                            },
                            "displayName": "",
                            "nextStep": "End Step — Success 1",
                            "type": "action",
                            "versionNumber": 2
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "trigger": {
                    "type": "EXTERNAL",
                    "attributes": {
                        "clientId": "7194bae8-581a-4e07-a2cc-1543741f3bd4",
                        "description": "Child trigger to change leaver ownership of roles to manager",
                        "id": "idn:external-http",
                        "url": "/beta/workflows/execute/external/197b43da-4d8d-4b15-b5ee-edc7f22cac37"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "748bfa07-4302-42c5-8d37-5371cf70060b",
                "name": "SailPoint PS - Leaver Identity Access Cleanup"
            },
            "object": {
                "id": "748bfa07-4302-42c5-8d37-5371cf70060b",
                "name": "SailPoint PS - Leaver Identity Access Cleanup",
                "description": "Parent workflow for leaver scenario; calls a series of child workflows through HTTP requests; steps change ownership and membership in all objects to which the leaver is associated.",
                "created": "2025-04-07T22:53:28.878270057Z",
                "modified": "2025-07-25T14:49:19.680830159Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "Wait",
                    "steps": {
                        "End Step — Success": {
                            "actionId": "sp:operator-success",
                            "type": "success"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "description": "get id for user/leaver",
                            "nextStep": "Get Identity 1",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Get Identity 1": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.getIdentity.managerRef.id"
                            },
                            "description": "retrieve manager",
                            "nextStep": "Reassign Entitlement Ownership",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Reassign Access Profile Ownership": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "leaverId": {
                                        "id": "{{$.getIdentity.id}}",
                                        "name": "{{$.getIdentity.attributes.firstname}} {{$.getIdentity.attributes.lastname}}"
                                    },
                                    "managerRef": {
                                        "email": "{{$.getIdentity1.attributes.email}}",
                                        "id": "{{$.getIdentity1.id}}",
                                        "name": "{{$.getIdentity1.attributes.firstname}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "8efb0db1-e6d1-4519-a36f-160b2284b5f7",
                                "oAuthClientSecret": "$.secrets.d2d7e112-6fa2-4b08-8ab8-80c115e5f77f",
                                "oAuthCredentialLocation": "oAuthInBody",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/141b761b-fac6-44d2-a16e-048863148aa1"
                            },
                            "description": "call request to reassign access profile ownership",
                            "nextStep": "Reassign Role Ownership",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Reassign Entitlement Ownership": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "leaverId": {
                                        "id": "{{$.getIdentity.id}}",
                                        "name": "{{$.getIdentity.attributes.firstname}} {{$.getIdentity.attributes.lastname}}"
                                    },
                                    "managerRef": {
                                        "email": "{{$.getIdentity1.email}}",
                                        "id": "{{$.getIdentity1.id}}",
                                        "name": "{{$.getIdentity1.attributes.firstname}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "0cba8d61-0c99-40f4-ae74-dbd807d16db1",
                                "oAuthClientSecret": "$.secrets.af2356f3-a9af-47e3-8fd6-571e56f01bb3",
                                "oAuthCredentialLocation": "oAuthInBody",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/d111715e-2db9-4268-8a50-3f15847c4ed4"
                            },
                            "description": "call request to reassign entitlement ownership",
                            "nextStep": "Reassign Access Profile Ownership",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Reassign Governance Group Membership": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "leaverId": {
                                        "id": "{{$.getIdentity.id}}",
                                        "name": "{{$.getIdentity.attributes.firstname}} {{$.getIdentity.attributes.lastname}}"
                                    },
                                    "managerRef": {
                                        "email": "{{$.getIdentity1.attributes.email}}",
                                        "id": "{{$.getIdentity1.id}}",
                                        "name": "{{$.getIdentity1.attributes.firstname}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "a4e1bbe0-d93c-47c6-84f0-007e30445c62",
                                "oAuthClientSecret": "$.secrets.ea8e4acb-5981-4a8e-89b4-e6dad331ee3b",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthScope": null,
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/a5c451a2-9716-47dc-a372-fafedac2c5e9"
                            },
                            "nextStep": "Reassign Governance Group Ownership",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Reassign Governance Group Ownership": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "leaverId": {
                                        "id": "{{$.getIdentity.id}}",
                                        "name": "{{$.getIdentity.attributes.firstname}} {{$.getIdentity.attributes.lastname}}"
                                    },
                                    "managerRef": {
                                        "email": "{{$.getIdentity1.attributes.email}}",
                                        "id": "{{$.getIdentity1.id}}",
                                        "name": "{{$.getIdentity1.attributes.firstname}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "f44c272e-9942-4873-bbb0-b7700747e4ed",
                                "oAuthClientSecret": "$.secrets.84ffb22e-95c3-4608-ba9b-304ef1567f60",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/14601058-2305-48c6-b104-8a07bcad37de"
                            },
                            "nextStep": "End Step — Success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Reassign Role Ownership": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "leaverId": {
                                        "id": "{{$.getIdentity.id}}",
                                        "name": "{{$.getIdentity.attributes.firstname}} {{$.getIdentity.attributes.lastname}}"
                                    },
                                    "managerRef": {
                                        "email": "{{$.getIdentity1.attributes.email}}",
                                        "id": "{{$.getIdentity1.id}}",
                                        "name": "{{$.getIdentity1.attributes.firstname}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "7194bae8-581a-4e07-a2cc-1543741f3bd4",
                                "oAuthClientSecret": "$.secrets.88e1527c-fc43-4ed0-b9d0-603a6deff607",
                                "oAuthCredentialLocation": "oAuthInBody",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/197b43da-4d8d-4b15-b5ee-edc7f22cac37"
                            },
                            "description": "call request to reassign role ownership",
                            "nextStep": "Reassign Governance Group Membership",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Wait": {
                            "actionId": "sp:sleep",
                            "attributes": {
                                "duration": "1m",
                                "type": "waitFor"
                            },
                            "description": "Adding wait for birthright roles to de-provision",
                            "nextStep": "Get Identity",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$.changes[?(@.attribute=='cloudLifecycleState' && @.newValue=='terminated')]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "14601058-2305-48c6-b104-8a07bcad37de",
                "name": "SailPoint PS - Reassign Governance Group Ownership"
            },
            "object": {
                "id": "14601058-2305-48c6-b104-8a07bcad37de",
                "name": "SailPoint PS - Reassign Governance Group Ownership",
                "description": "Child workflow (external trigger) for the parent leaver workflow that changes the ownership of governance groups from leaver to their manager.",
                "created": "2025-04-07T23:00:32.953845151Z",
                "modified": "2025-07-22T08:31:07.252009829Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "method": "get",
                                "oAuthClientId": "b0f1b396f93a4ee9979d009ccd099c1f",
                                "oAuthClientSecret": "$.secrets.7fff893f-c9c0-4701-937c-37fc45e2bbd5",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": "",
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workgroups?offset=0&limit=50",
                                "urlParams": ""
                            },
                            "description": "Get ... all workgroups",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$.trigger",
                                "input.$": "$.hTTPRequest.body",
                                "start": "Define Variable",
                                "steps": {
                                    "Compare Strings": {
                                        "actionId": "sp:compare-strings",
                                        "choiceList": [
                                            {
                                                "comparator": "StringEquals",
                                                "nextStep": "HTTP Request 2",
                                                "variableA.$": "$.defineVariable.first",
                                                "variableB.$": "$.defineVariable1.second"
                                            }
                                        ],
                                        "defaultStep": "success",
                                        "displayName": "",
                                        "type": "choice"
                                    },
                                    "Define Variable": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "First",
                                                    "transforms": [],
                                                    "variableA.$": "$.loop.loopInput.owner.id"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "Define Variable 1",
                                        "type": "Mutation"
                                    },
                                    "Define Variable 1": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "Second",
                                                    "transforms": [],
                                                    "variableA.$": "$.loop.context.leaverId.id"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "Compare Strings",
                                        "type": "Mutation"
                                    },
                                    "HTTP Request 2": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": null,
                                            "jsonRequestBody": {
                                                "owner": {
                                                    "id": "{{$.loop.context.managerRef.id}}"
                                                }
                                            },
                                            "method": "patch",
                                            "oAuthClientId": "b0f1b396f93a4ee9979d009ccd099c1f",
                                            "oAuthClientSecret": "$.secrets.f952eee6-1a5d-4911-92b9-a9c9d394a191",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json",
                                            "requestHeaders": "Content-Type:application/json",
                                            "textRequestBody": "",
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2/workgroups/{{$.loop.loopInput.id}}"
                                        },
                                        "description": "Call governance group API to update(patch) governance group with IAM owner temporarily.",
                                        "nextStep": "Send Email",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<p>Dear {{$.loop.context.managerRef.name}},</p>\n<p>Due to the termination/suspension of {{$.loop.context.leaverId.name}}, ownership of the following Governance Group has been transferred to you:</p>\n<p>{{$.loop.loopInput.name}}</p>\n<p>You can access the details of this item at the following link:<br><a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&amp;sysparm_article=KB0013953\">Corporate Employees - Access Items &ndash; Inventory with Owner and Approvers for Requests - Resource Centre</a></p>\n<p>If you wish to transfer ownership to another individual, please follow the instructions provided in the link below to submit a SNAP request.</p>\n<p><a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=a19553aadb27981095d0ddf5f49619ed&amp;sysparm_category=a8d60a5e1b115410afb584415b4bcb53\">Authorization Request - Resource Centre</a></p>\n<p>This is a system-generated email. Please do not respond to this email.</p>",
                                            "context": {},
                                            "recipientEmailList.$": "$.loop.context.managerRef.email",
                                            "subject": "Transfer of Ownership Notification for Governance Group – {{$.loop.loopInput.name}}"
                                        },
                                        "displayName": "",
                                        "nextStep": "success",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "success": {
                                        "actionId": "sp:operator-success",
                                        "type": "success"
                                    }
                                }
                            },
                            "description": "loop through all gov groups with filter where owner is the leaver",
                            "nextStep": "success 1",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "success 1": {
                            "actionId": "sp:operator-success",
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "trigger": {
                    "type": "EXTERNAL",
                    "attributes": {
                        "clientId": "f44c272e-9942-4873-bbb0-b7700747e4ed",
                        "description": "Call to IDN to change ownership of governance groups owned by leaver",
                        "id": "idn:external-http",
                        "url": "/beta/workflows/execute/external/14601058-2305-48c6-b104-8a07bcad37de"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "24cde0f3-4bb3-48fe-8a4b-9a0148ced0de",
                "name": "Copy of Corporate Users Inactive User Governance - Phase 1"
            },
            "object": {
                "id": "24cde0f3-4bb3-48fe-8a4b-9a0148ced0de",
                "name": "Copy of Corporate Users Inactive User Governance - Phase 1",
                "description": "Send email to user's manager when user didnt login for more than 30 days.",
                "created": "2025-07-14T17:32:45.180124Z",
                "modified": "2025-07-14T17:32:45.180124Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "identities"
                                    ],
                                    "query": {
                                        "query": "(attributes.userType:\"employee\" OR attributes.userType:\"contractor\") AND (attributes.cloudLifecycleState:\"active\") AND (attributes.lastSignInDateType:[now-65d TO now-30d])"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                "oAuthClientSecret": "",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2025/search"
                            },
                            "description": "Get List of all identities who didnt login for last 30 days.",
                            "displayName": "",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "input.$": "$.hTTPRequest.body",
                                "start": "Get Identity 1",
                                "steps": {
                                    "End Step - Success 1": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "Get Identity": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.manager.id"
                                        },
                                        "description": "",
                                        "displayName": "Get Manager",
                                        "nextStep": "Send Email",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Get Identity 1": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.id"
                                        },
                                        "displayName": "",
                                        "nextStep": "Verify Data Type",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<p class=\"MsoNormal\">Dear&nbsp;${managerFirstName}<strong> </strong>${managerLastName},</p>\n<p class=\"MsoNormal\">The following user has not logged in for the past 30 days:</p>\n<p>Name<strong>:</strong>&nbsp;${firstName} ${lastName}</p>\n<p>Username<strong>:</strong>&nbsp;${sAMAccountName}</p>\n<p class=\"MsoNormal\">If the user is currently on leave or has left the organization, please submit an&nbsp;<a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=b069f5121be98e107254535f034bcbc9&amp;sysparm_category=240d741d1b10e010f2110f6cdc4bcbaa\">Offboarding Request - Resource Centre</a> ticket via&nbsp;ServiceNow&nbsp;to initiate the suspension or offboarding process.</p>\n<p class=\"MsoNormal\">Important<strong>:</strong>&nbsp;If the user does not log in within the next 15 days, their account will be suspended, and all associated access will be disabled.</p>\n<p class=\"MsoNormal\">For any questions or further assistance, please contact the&nbsp;IAM Operations team&nbsp;at&nbsp;<a href=\"mailto:iamops@igmfinancial.com\" target=\"_blank\" rel=\"noopener\">iamops@igmfinancial.com</a>.</p>\n<p class=\"MsoNormal\">Best regards,<br>IAM Operations Team</p>",
                                            "context": {
                                                "firstName.$": "$.getIdentity1.attributes.firstname",
                                                "lastName.$": "$.getIdentity1.attributes.lastname",
                                                "managerFirstName.$": "$.getIdentity.attributes.firstname",
                                                "managerLastName.$": "$.getIdentity.attributes.lastname",
                                                "sAMAccountName.$": "$.getIdentity1.attributes.samaccountname"
                                            },
                                            "recipientEmailList.$": "$.getIdentity.attributes.email",
                                            "subject": "Inactive User Account ${firstName} ${lastName} – Action Required"
                                        },
                                        "description": "Send email to manager",
                                        "displayName": "",
                                        "nextStep": "End Step - Success 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Verify Data Type": {
                                        "actionId": "sp:compare-unary",
                                        "choiceList": [
                                            {
                                                "comparator": "IsPresent",
                                                "nextStep": "Get Identity",
                                                "variableA.$": "$.loop.loopInput.manager"
                                            }
                                        ],
                                        "defaultStep": "End Step - Success 1",
                                        "description": "Make sure manager exists",
                                        "displayName": "Verify Manager Exists",
                                        "type": "choice"
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "SCHEDULED",
                    "attributes": {
                        "cronString": "0 9,10,11,12,13,14,15 * * *",
                        "dailyTimes": [
                            "1969-12-31T15:00:00.000Z",
                            "1969-12-31T16:00:00.000Z",
                            "1969-12-31T17:00:00.000Z",
                            "1969-12-31T18:00:00.000Z",
                            "1969-12-31T19:00:00.000Z",
                            "1969-12-31T20:00:00.000Z",
                            "1969-12-31T21:00:00.000Z"
                        ],
                        "frequency": "daily",
                        "id": "idn:cron-schedule",
                        "timeZone": "America/Winnipeg"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "6dabb08f-7bac-4a82-b40b-70351bca5ef7",
                "name": "Check Get Accounts -Inactive Users"
            },
            "object": {
                "id": "6dabb08f-7bac-4a82-b40b-70351bca5ef7",
                "name": "Check Get Accounts -Inactive Users",
                "description": "",
                "created": "2025-07-12T13:09:49.214373815Z",
                "modified": "2025-07-14T15:41:52.630345886Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "identities"
                                    ],
                                    "query": {
                                        "query": "(attributes.userType:\"employee\" OR attributes.userType:\"contractor\") AND (attributes.cloudLifecycleState:\"active\") AND (attributes.lastSignInDateType:[* TO now-50d])"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                "oAuthClientSecret": "$.secrets.e0cec217-2337-458b-b5a2-05c88e986e54",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2025/search"
                            },
                            "description": "Get the list of identities whose last sign in date more than 45 days ago.",
                            "displayName": "",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "input.$": "$.hTTPRequest.body",
                                "start": "Get Identity 1",
                                "steps": {
                                    "Compare Strings": {
                                        "actionId": "sp:compare-strings",
                                        "choiceList": [
                                            {
                                                "comparator": "StringContains",
                                                "nextStep": "Get Accounts",
                                                "variableA.$": "$.getIdentity1.attributes.loaEndDate",
                                                "variableB": "None"
                                            }
                                        ],
                                        "defaultStep": "Compare Timestamps",
                                        "description": "Verify if LOA End date set for identity.",
                                        "displayName": "",
                                        "type": "choice"
                                    },
                                    "Compare Timestamps": {
                                        "actionId": "sp:compare-timestamps",
                                        "choiceList": [
                                            {
                                                "comparator": "TimestampLessThanXDay",
                                                "nextStep": "HTTP Request 1",
                                                "variableA.$": "$.getIdentity1.attributes.loaEndDateType",
                                                "variableB": "7"
                                            }
                                        ],
                                        "defaultStep": "End Step - Success 1",
                                        "description": "Check if LOA end date is in past for more than 7 days.",
                                        "displayName": "Check LOA End Date",
                                        "type": "choice"
                                    },
                                    "Define Variable": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "date",
                                                    "transforms": [],
                                                    "variableA.$": "$.getIdentity1.attributes.loaEndDateType"
                                                },
                                                {
                                                    "description": "",
                                                    "name": "currentdate",
                                                    "transforms": [
                                                        {
                                                            "id": "sp:transform:substring:string",
                                                            "input": {
                                                                "length": 10,
                                                                "start": 0
                                                            }
                                                        },
                                                        {
                                                            "id": "sp:transform:concatenate:string",
                                                            "input": {
                                                                "variableB": "T-01:00:00:000-00:00"
                                                            }
                                                        }
                                                    ],
                                                    "variableA.$": "$.now()"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "Compare Strings",
                                        "type": "Mutation"
                                    },
                                    "Define Variable 2": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "snow",
                                                    "transforms": [],
                                                    "variableA.$": "$.getAccounts.accounts[?(@.sourceName==\"ServiceNowAPI\")].id"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "Send Email 1",
                                        "type": "Mutation"
                                    },
                                    "End Step - Success 1": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "Get Accounts": {
                                        "actionId": "sp:get-accounts",
                                        "attributes": {
                                            "filterCriteria": "name",
                                            "getAccountsBy": "specificIdentity",
                                            "identity.$": "$.getIdentity1.id",
                                            "operator": "eq",
                                            "value": "ServiceNowAPI"
                                        },
                                        "description": "Get ServiceNowAPI source id",
                                        "displayName": "",
                                        "nextStep": "Define Variable 2",
                                        "type": "action",
                                        "versionNumber": 1
                                    },
                                    "Get Identity": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.manager.id"
                                        },
                                        "description": "Get Manager information",
                                        "displayName": "Get Manager",
                                        "nextStep": "Send Email",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Get Identity 1": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.id"
                                        },
                                        "description": "Get information about each identity.",
                                        "displayName": "",
                                        "nextStep": "Define Variable",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "add",
                                                    "path": "/attributes/loaStartDate",
                                                    "value": "{{$.defineVariable.currentdate}}"
                                                }
                                            ],
                                            "jsonRequestBody": {
                                                "indices": [
                                                    "identities"
                                                ],
                                                "query": {
                                                    "query": "(attributes.userType:\"employee\" OR attributes.userType:\"contractor\") AND (attributes.cloudLifecycleState:\"active\") AND (attributes.lastSignInDateType:[* TO now-50d])"
                                                }
                                            },
                                            "method": "patch",
                                            "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                            "oAuthClientSecret": "$.secrets.e0cec217-2337-458b-b5a2-05c88e986e54",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2025/accounts/{{$.defineVariable2.snow}}"
                                        },
                                        "description": "Get the list of identities whose last sign in date more than 45 days ago.",
                                        "displayName": "",
                                        "nextStep": "Verify Data Type",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<p class=\"MsoNormal\">Dear&nbsp;${managerFirstName}<strong> </strong>${managerLastName},</p>\n<p class=\"MsoNormal\"><span style=\"font-size: 11.0pt; line-height: 107%; font-family: 'Aptos',sans-serif; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Aptos; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-CA; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;\">The following user has not logged in for the past 45 days:</span></p>\n<p>Name<strong>:</strong>&nbsp;${firstName} ${lastName}</p>\n<p>Username<strong>:</strong>&nbsp;${sAMAccountName}</p>\n<p class=\"MsoNormal\">As a result, the user&rsquo;s account has been&nbsp;suspended<strong>,</strong>&nbsp;and all access has been&nbsp;disabled. The user&rsquo;s email address has also been&nbsp;restricted.</p>\n<p class=\"MsoNormal\">If reactivation of the account is required, please submit a&nbsp;ServiceNow ticket&nbsp;using the&nbsp;<a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=2aae9af7db6975d0520eae3b13961903&amp;sysparm_category=240d741d1b10e010f2110f6cdc4bcbaa\">Onboarding Request - Resource Centre</a>&nbsp;form and select the&nbsp;\"Return from temporary leave\"&nbsp;option.</p>\n<p class=\"MsoNormal\">For any further questions, please contact the&nbsp;IAM Operations team&nbsp;at&nbsp;<a href=\"mailto:iamops@igmfinancial.com\" target=\"_blank\" rel=\"noopener\">iamops@igmfinancial.com</a>.</p>\n<p class=\"MsoNormal\">Best regards,<br>IAM Operations Team</p>",
                                            "context": {
                                                "firstName.$": "$.getIdentity1.attributes.firstname",
                                                "lastName.$": "$.getIdentity1.attributes.lastname",
                                                "managerFirstName.$": "$.getIdentity.attributes.firstname",
                                                "managerLastName.$": "$.getIdentity.attributes.lastname",
                                                "sAMAccountName.$": "$.getIdentity1.attributes.samaccountname"
                                            },
                                            "recipientEmailList.$": "$.getIdentity.attributes.email",
                                            "subject": "User Account ${firstName} ${lastName} Suspended Due to Inactivity"
                                        },
                                        "description": "Send email to manager.",
                                        "displayName": "",
                                        "nextStep": "End Step - Success 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email 1": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<p>Account details:</p>\n<p>${accountDetails}</p>",
                                            "context": {
                                                "accountDetails.$": "$.defineVariable2.snow",
                                                "firstName.$": "$.getIdentity1.attributes.firstname",
                                                "lastName.$": "$.getIdentity1.attributes.lastname"
                                            },
                                            "recipientEmailList": [
                                                "khilan.shah@igmfinancial.com"
                                            ],
                                            "subject": "Account details for ${firstName} ${lastName}"
                                        },
                                        "description": "get accounts details in email",
                                        "displayName": "",
                                        "nextStep": "HTTP Request 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Verify Data Type": {
                                        "actionId": "sp:compare-unary",
                                        "choiceList": [
                                            {
                                                "comparator": "IsPresent",
                                                "nextStep": "Get Identity",
                                                "variableA.$": "$.loop.loopInput.manager"
                                            }
                                        ],
                                        "defaultStep": "End Step - Success 1",
                                        "description": "Make sure manager exists",
                                        "displayName": "Verify Manager Exists",
                                        "type": "choice"
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "SCHEDULED",
                    "attributes": {
                        "cronString": "0 9,10,11,12,13,14,15 * * *",
                        "dailyTimes": [
                            "1969-12-31T15:00:00.000Z",
                            "1969-12-31T16:00:00.000Z",
                            "1969-12-31T17:00:00.000Z",
                            "1969-12-31T18:00:00.000Z",
                            "1969-12-31T19:00:00.000Z",
                            "1969-12-31T20:00:00.000Z",
                            "1969-12-31T21:00:00.000Z"
                        ],
                        "frequency": "daily",
                        "id": "idn:cron-schedule",
                        "timeZone": "America/Winnipeg"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "2b926bc6-4ac1-4023-b810-db7375692df2",
                "name": "Old Corporate Users  Inactive User Governance - Phase 2"
            },
            "object": {
                "id": "2b926bc6-4ac1-4023-b810-db7375692df2",
                "name": "Old Corporate Users  Inactive User Governance - Phase 2",
                "description": "Send email to user's manager when user didnt login for more than 45 days and change LCS to suspended",
                "created": "2025-07-10T16:01:21.230562288Z",
                "modified": "2025-07-14T15:41:25.037470241Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "identities"
                                    ],
                                    "query": {
                                        "query": "(attributes.userType:\"employee\" OR attributes.userType:\"contractor\") AND (attributes.cloudLifecycleState:\"active\") AND (attributes.lastSignInDateType:[* TO now-50d])"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                "oAuthClientSecret": "$.secrets.4f9fe194-edd4-45aa-afe4-06f757255ffd",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2025/search"
                            },
                            "description": "Get the list of identities whose last sign in date more than 45 days ago.",
                            "displayName": "",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "input.$": "$.hTTPRequest.body",
                                "start": "Get Identity 1",
                                "steps": {
                                    "Compare Strings": {
                                        "actionId": "sp:compare-strings",
                                        "choiceList": [
                                            {
                                                "comparator": "StringContains",
                                                "nextStep": "Get Accounts",
                                                "variableA.$": "$.getIdentity1.attributes.loaEndDate",
                                                "variableB": "None"
                                            }
                                        ],
                                        "defaultStep": "Compare Timestamps",
                                        "description": "Verify if LOA End date set for identity.",
                                        "displayName": "",
                                        "type": "choice"
                                    },
                                    "Compare Timestamps": {
                                        "actionId": "sp:compare-timestamps",
                                        "choiceList": [
                                            {
                                                "comparator": "TimestampLessThanXDay",
                                                "nextStep": "HTTP Request 1",
                                                "variableA.$": "$.getIdentity1.attributes.loaEndDateType",
                                                "variableB": "7"
                                            }
                                        ],
                                        "defaultStep": "End Step - Success 1",
                                        "description": "Check if LOA end date is in past for more than 7 days.",
                                        "displayName": "Check LOA End Date",
                                        "type": "choice"
                                    },
                                    "Define Variable": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "date",
                                                    "transforms": [],
                                                    "variableA.$": "$.getIdentity1.attributes.loaEndDateType"
                                                },
                                                {
                                                    "description": "",
                                                    "name": "currentdate",
                                                    "transforms": [
                                                        {
                                                            "id": "sp:transform:substring:string",
                                                            "input": {
                                                                "length": 10,
                                                                "start": 0
                                                            }
                                                        },
                                                        {
                                                            "id": "sp:transform:concatenate:string",
                                                            "input": {
                                                                "variableB": "T-01:00:00:000-00:00"
                                                            }
                                                        }
                                                    ],
                                                    "variableA.$": "$.now()"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "Compare Strings",
                                        "type": "Mutation"
                                    },
                                    "Define Variable 1": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "accountid",
                                                    "transforms": [],
                                                    "variableA.$": "$.getAccounts.accounts[?(@.sourceName==\"ServiceNowAPI\")].id"
                                                }
                                            ]
                                        },
                                        "displayName": "Define Variable 1",
                                        "nextStep": "HTTP Request 1",
                                        "type": "Mutation"
                                    },
                                    "End Step - Success 1": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "Get Accounts": {
                                        "actionId": "sp:get-accounts",
                                        "attributes": {
                                            "filterCriteria": "name",
                                            "getAccountsBy": "specificIdentity",
                                            "identity.$": "$.getIdentity1.id",
                                            "operator": "eq",
                                            "value": "ServiceNowAPI"
                                        },
                                        "description": "Get list of Accounts for identity",
                                        "displayName": "",
                                        "nextStep": "Define Variable 1",
                                        "type": "action",
                                        "versionNumber": 1
                                    },
                                    "Get Identity": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.manager.id"
                                        },
                                        "description": "Get Manager information",
                                        "displayName": "Get Manager",
                                        "nextStep": "Send Email",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Get Identity 1": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.id"
                                        },
                                        "description": "Get information about each identity.",
                                        "displayName": "",
                                        "nextStep": "Define Variable",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "add",
                                                    "path": "/attributes/loaStartDate",
                                                    "value": "{{$.defineVariable.currentdate}}"
                                                }
                                            ],
                                            "jsonRequestBody": "[{\"op\":\"add\",\"path\":\"/attributes/loaStartDate\",\"value\":{{$.defineVariable.CurrentDate}}}]",
                                            "method": "patch",
                                            "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                            "oAuthClientSecret": "$.secrets.d0786920-3fb0-4aa3-9925-67bf0c133cf8",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2025/accounts/{{$.defineVariable1.accountid}}"
                                        },
                                        "description": "Set LOA start date as today for identity",
                                        "displayName": "HTTP Request 1",
                                        "nextStep": "Verify Data Type",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<p class=\"MsoNormal\">Dear&nbsp;${managerFirstName}<strong> </strong>${managerLastName},</p>\n<p class=\"MsoNormal\"><span style=\"font-size: 11.0pt; line-height: 107%; font-family: 'Aptos',sans-serif; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Aptos; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-CA; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;\">The following user has not logged in for the past 45 days:</span></p>\n<p>Name<strong>:</strong>&nbsp;${firstName} ${lastName}</p>\n<p>Username<strong>:</strong>&nbsp;${sAMAccountName}</p>\n<p class=\"MsoNormal\">As a result, the user&rsquo;s account has been&nbsp;suspended<strong>,</strong>&nbsp;and all access has been&nbsp;disabled. The user&rsquo;s email address has also been&nbsp;restricted.</p>\n<p class=\"MsoNormal\">If reactivation of the account is required, please submit a&nbsp;ServiceNow ticket&nbsp;using the&nbsp;<a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=2aae9af7db6975d0520eae3b13961903&amp;sysparm_category=240d741d1b10e010f2110f6cdc4bcbaa\">Onboarding Request - Resource Centre</a>&nbsp;form and select the&nbsp;\"Return from temporary leave\"&nbsp;option.</p>\n<p class=\"MsoNormal\">For any further questions, please contact the&nbsp;IAM Operations team&nbsp;at&nbsp;<a href=\"mailto:iamops@igmfinancial.com\" target=\"_blank\" rel=\"noopener\">iamops@igmfinancial.com</a>.</p>\n<p class=\"MsoNormal\">Best regards,<br>IAM Operations Team</p>",
                                            "context": {
                                                "firstName.$": "$.getIdentity1.attributes.firstname",
                                                "lastName.$": "$.getIdentity1.attributes.lastname",
                                                "managerFirstName.$": "$.getIdentity.attributes.firstname",
                                                "managerLastName.$": "$.getIdentity.attributes.lastname",
                                                "sAMAccountName.$": "$.getIdentity1.attributes.samaccountname"
                                            },
                                            "recipientEmailList.$": "$.getIdentity.attributes.email",
                                            "subject": "User Account ${firstName} ${lastName} Suspended Due to Inactivity"
                                        },
                                        "description": "Send email to manager.",
                                        "displayName": "",
                                        "nextStep": "End Step - Success 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Verify Data Type": {
                                        "actionId": "sp:compare-unary",
                                        "choiceList": [
                                            {
                                                "comparator": "IsPresent",
                                                "nextStep": "Get Identity",
                                                "variableA.$": "$.loop.loopInput.manager"
                                            }
                                        ],
                                        "defaultStep": "End Step - Success 1",
                                        "description": "Make sure manager exists",
                                        "displayName": "Verify Manager Exists",
                                        "type": "choice"
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "SCHEDULED",
                    "attributes": {
                        "cronString": "0 9,10,11,12,13,14,15 * * *",
                        "dailyTimes": [
                            "1969-12-31T15:00:00.000Z",
                            "1969-12-31T16:00:00.000Z",
                            "1969-12-31T17:00:00.000Z",
                            "1969-12-31T18:00:00.000Z",
                            "1969-12-31T19:00:00.000Z",
                            "1969-12-31T20:00:00.000Z",
                            "1969-12-31T21:00:00.000Z"
                        ],
                        "frequency": "daily",
                        "id": "idn:cron-schedule",
                        "timeZone": "America/Winnipeg"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "cf4cc557-d261-4066-99c3-ddc67955b998",
                "name": "Set LCS Inactive User Governance - Phase 2"
            },
            "object": {
                "id": "cf4cc557-d261-4066-99c3-ddc67955b998",
                "name": "Set LCS Inactive User Governance - Phase 2",
                "description": "Send email to user's manager when user didnt login for more than 45 days and change LCS to suspended",
                "created": "2025-07-09T15:57:45.399232244Z",
                "modified": "2025-07-14T13:32:19.654143482Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "identities"
                                    ],
                                    "query": {
                                        "query": "(attributes.userType:\"employee\" OR attributes.userType:\"contractor\") AND (attributes.cloudLifecycleState:\"active\") AND (attributes.lastSignInDateType:[* TO now-50d])"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                "oAuthClientSecret": "$.secrets.816fc4ec-3d26-4fb8-9f14-fdb3e131d313",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2025/search"
                            },
                            "description": "Get the list of identities whose last sign in date more than 45 days ago.",
                            "displayName": "",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "input.$": "$.hTTPRequest.body",
                                "start": "Get Identity 1",
                                "steps": {
                                    "Compare Strings": {
                                        "actionId": "sp:compare-strings",
                                        "choiceList": [
                                            {
                                                "comparator": "StringEquals",
                                                "nextStep": "HTTP Request 1",
                                                "variableA.$": "$.getIdentity1.attributes.loaEndDate",
                                                "variableB": "None"
                                            }
                                        ],
                                        "defaultStep": "Compare Timestamps",
                                        "description": "Verify if LOA End date set for identity.",
                                        "displayName": "",
                                        "type": "choice"
                                    },
                                    "Compare Timestamps": {
                                        "actionId": "sp:compare-timestamps",
                                        "choiceList": [
                                            {
                                                "comparator": "TimestampLessThanXDay",
                                                "nextStep": "HTTP Request 1",
                                                "variableA.$": "$.getIdentity1.attributes.loaEndDateType",
                                                "variableB": "7"
                                            }
                                        ],
                                        "defaultStep": "End Step - Success 1",
                                        "description": "Check if LOA end date is in past for more than 7 days.",
                                        "displayName": "Check LOA End Date",
                                        "type": "choice"
                                    },
                                    "Define Variable": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "Date",
                                                    "transforms": [],
                                                    "variableA.$": "$.getIdentity1.attributes.loaEndDateType"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "Compare Strings",
                                        "type": "Mutation"
                                    },
                                    "End Step - Success 1": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "Get Identity": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.manager.id"
                                        },
                                        "description": "Get Manager information",
                                        "displayName": "Get Manager",
                                        "nextStep": "Send Email",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Get Identity 1": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.id"
                                        },
                                        "description": "Get information about each identity.",
                                        "displayName": "",
                                        "nextStep": "Define Variable",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonRequestBody": {
                                                "lifecycleStateId": "aee456a2c51849cfb33bd1b8a91a7fb6"
                                            },
                                            "method": "post",
                                            "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                            "oAuthClientSecret": "$.secrets.d0786920-3fb0-4aa3-9925-67bf0c133cf8",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2025/identities/{{$.loop.loopInput.id}}/set-lifecycle-state"
                                        },
                                        "description": "Update LCS to suspended.",
                                        "displayName": "",
                                        "nextStep": "Verify Data Type",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<p class=\"MsoNormal\">Dear&nbsp;${managerFirstName}<strong> </strong>${managerLastName},</p>\n<p class=\"MsoNormal\"><span style=\"font-size: 11.0pt; line-height: 107%; font-family: 'Aptos',sans-serif; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Aptos; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-CA; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;\">The following user has not logged in for the past 45 days:</span></p>\n<p>Name<strong>:</strong>&nbsp;${firstName} ${lastName}</p>\n<p>Username<strong>:</strong>&nbsp;${sAMAccountName}</p>\n<p class=\"MsoNormal\">As a result, the user&rsquo;s account has been&nbsp;suspended<strong>,</strong>&nbsp;and all access has been&nbsp;disabled. The user&rsquo;s email address has also been&nbsp;restricted.</p>\n<p class=\"MsoNormal\">If reactivation of the account is required, please submit a&nbsp;ServiceNow ticket&nbsp;using the&nbsp;<a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=2aae9af7db6975d0520eae3b13961903&amp;sysparm_category=240d741d1b10e010f2110f6cdc4bcbaa\">Onboarding Request - Resource Centre</a>&nbsp;form and select the&nbsp;\"Return from temporary leave\"&nbsp;option.</p>\n<p class=\"MsoNormal\">For any further questions, please contact the&nbsp;IAM Operations team&nbsp;at&nbsp;<a href=\"mailto:iamops@igmfinancial.com\" target=\"_blank\" rel=\"noopener\">iamops@igmfinancial.com</a>.</p>\n<p class=\"MsoNormal\">Best regards,<br>IAM Operations Team</p>",
                                            "context": {
                                                "firstName.$": "$.getIdentity1.attributes.firstname",
                                                "lastName.$": "$.getIdentity1.attributes.lastname",
                                                "managerFirstName.$": "$.getIdentity.attributes.firstname",
                                                "managerLastName.$": "$.getIdentity.attributes.lastname",
                                                "sAMAccountName.$": "$.getIdentity1.attributes.samaccountname"
                                            },
                                            "recipientEmailList.$": "$.getIdentity.attributes.email",
                                            "subject": "User Account ${firstName} ${lastName} Suspended Due to Inactivity"
                                        },
                                        "description": "Send email to manager.",
                                        "displayName": "",
                                        "nextStep": "End Step - Success 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Verify Data Type": {
                                        "actionId": "sp:compare-unary",
                                        "choiceList": [
                                            {
                                                "comparator": "IsPresent",
                                                "nextStep": "Get Identity",
                                                "variableA.$": "$.loop.loopInput.manager"
                                            }
                                        ],
                                        "defaultStep": "End Step - Success 1",
                                        "description": "Make sure manager exists",
                                        "displayName": "Verify Manager Exists",
                                        "type": "choice"
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "SCHEDULED",
                    "attributes": {
                        "cronString": "0 9,10,11,12,13,14,15 * * *",
                        "dailyTimes": [
                            "1969-12-31T15:00:00.000Z",
                            "1969-12-31T16:00:00.000Z",
                            "1969-12-31T17:00:00.000Z",
                            "1969-12-31T18:00:00.000Z",
                            "1969-12-31T19:00:00.000Z",
                            "1969-12-31T20:00:00.000Z",
                            "1969-12-31T21:00:00.000Z"
                        ],
                        "frequency": "daily",
                        "id": "idn:cron-schedule",
                        "timeZone": "America/Winnipeg"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "4d597d41-f1d2-4897-8332-fc93edf1f7fa",
                "name": "Copy of SailPoint PS - Leaver Identity Access Cleanup"
            },
            "object": {
                "id": "4d597d41-f1d2-4897-8332-fc93edf1f7fa",
                "name": "Copy of SailPoint PS - Leaver Identity Access Cleanup",
                "description": "Parent workflow for leaver scenario; calls a series of child workflows through HTTP requests; steps change ownership and membership in all objects to which the leaver is associated.",
                "created": "2025-07-10T17:56:48.145572025Z",
                "modified": "2025-07-10T17:56:48.145572025Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "Wait",
                    "steps": {
                        "End Step — Success": {
                            "actionId": "sp:operator-success",
                            "type": "success"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "description": "get id for user/leaver",
                            "nextStep": "Get Identity 1",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Get Identity 1": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.getIdentity.managerRef.id"
                            },
                            "description": "retrieve manager",
                            "nextStep": "Reassign Entitlement Ownership",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Reassign Access Profile Ownership": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "leaverId": {
                                        "id": "{{$.getIdentity.id}}",
                                        "name": "{{$.getIdentity.attributes.firstname}} {{$.getIdentity.attributes.lastname}}"
                                    },
                                    "managerRef": {
                                        "email": "{{$.getIdentity1.attributes.email}}",
                                        "id": "{{$.getIdentity1.id}}",
                                        "name": "{{$.getIdentity1.attributes.firstname}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "8efb0db1-e6d1-4519-a36f-160b2284b5f7",
                                "oAuthClientSecret": "",
                                "oAuthCredentialLocation": "oAuthInBody",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/141b761b-fac6-44d2-a16e-048863148aa1"
                            },
                            "description": "call request to reassign access profile ownership",
                            "nextStep": "Reassign Role Ownership",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Reassign Entitlement Ownership": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "leaverId": {
                                        "id": "{{$.getIdentity.id}}",
                                        "name": "{{$.getIdentity.attributes.firstname}} {{$.getIdentity.attributes.lastname}}"
                                    },
                                    "managerRef": {
                                        "email": "{{$.getIdentity1.email}}",
                                        "id": "{{$.getIdentity1.id}}",
                                        "name": "{{$.getIdentity1.attributes.firstname}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "0cba8d61-0c99-40f4-ae74-dbd807d16db1",
                                "oAuthClientSecret": "",
                                "oAuthCredentialLocation": "oAuthInBody",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/d111715e-2db9-4268-8a50-3f15847c4ed4"
                            },
                            "description": "call request to reassign entitlement ownership",
                            "nextStep": "Reassign Access Profile Ownership",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Reassign Governance Group Membership": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "leaverId": {
                                        "id": "{{$.getIdentity.id}}",
                                        "name": "{{$.getIdentity.attributes.firstname}} {{$.getIdentity.attributes.lastname}}"
                                    },
                                    "managerRef": {
                                        "email": "{{$.getIdentity1.attributes.email}}",
                                        "id": "{{$.getIdentity1.id}}",
                                        "name": "{{$.getIdentity1.attributes.firstname}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "a4e1bbe0-d93c-47c6-84f0-007e30445c62",
                                "oAuthClientSecret": "",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthScope": null,
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/a5c451a2-9716-47dc-a372-fafedac2c5e9"
                            },
                            "nextStep": "Reassign Governance Group Ownership",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Reassign Governance Group Ownership": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "leaverId": {
                                        "id": "{{$.getIdentity.id}}",
                                        "name": "{{$.getIdentity.attributes.firstname}} {{$.getIdentity.attributes.lastname}}"
                                    },
                                    "managerRef": {
                                        "email": "{{$.getIdentity1.attributes.email}}",
                                        "id": "{{$.getIdentity1.id}}",
                                        "name": "{{$.getIdentity1.attributes.firstname}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "f44c272e-9942-4873-bbb0-b7700747e4ed",
                                "oAuthClientSecret": "",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/14601058-2305-48c6-b104-8a07bcad37de"
                            },
                            "nextStep": "End Step — Success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Reassign Role Ownership": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "leaverId": {
                                        "id": "{{$.getIdentity.id}}",
                                        "name": "{{$.getIdentity.attributes.firstname}} {{$.getIdentity.attributes.lastname}}"
                                    },
                                    "managerRef": {
                                        "email": "{{$.getIdentity1.attributes.email}}",
                                        "id": "{{$.getIdentity1.id}}",
                                        "name": "{{$.getIdentity1.attributes.firstname}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "7194bae8-581a-4e07-a2cc-1543741f3bd4",
                                "oAuthClientSecret": "",
                                "oAuthCredentialLocation": "oAuthInBody",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workflows/execute/external/197b43da-4d8d-4b15-b5ee-edc7f22cac37"
                            },
                            "description": "call request to reassign role ownership",
                            "nextStep": "Reassign Governance Group Membership",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Wait": {
                            "actionId": "sp:sleep",
                            "attributes": {
                                "duration": "1m",
                                "type": "waitFor"
                            },
                            "description": "Adding wait for birthright roles to de-provision",
                            "nextStep": "Get Identity",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$.changes[?(@.attribute=='cloudLifecycleState' && @.newValue=='terminated')]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "a5c451a2-9716-47dc-a372-fafedac2c5e9",
                "name": "SailPoint PS - Reassign Governance Group Membership"
            },
            "object": {
                "id": "a5c451a2-9716-47dc-a372-fafedac2c5e9",
                "name": "SailPoint PS - Reassign Governance Group Membership",
                "description": "Child workflow (external trigger) for the parent leaver workflow that searches all governance groups, then searches within the membership of those groups for the leaver identity and finally, changes the membership of those governance groups from the leaver to their manager. (Two child workflows from this part 1)",
                "created": "2025-04-07T23:00:59.615917284Z",
                "modified": "2025-07-10T14:35:48.208067651Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "Get governance groups",
                    "steps": {
                        "Compare Numbers": {
                            "actionId": "sp:compare-numbers",
                            "choiceList": [
                                {
                                    "comparator": "NumericGreaterThan",
                                    "nextStep": "Send Email",
                                    "variableA.$": "$.getGovernanceGroups.body.length()",
                                    "variableB": 0
                                }
                            ],
                            "defaultStep": "success 1",
                            "displayName": "",
                            "type": "choice"
                        },
                        "Get governance groups": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "method": "get",
                                "oAuthClientId": "b0f1b396f93a4ee9979d009ccd099c1f",
                                "oAuthClientSecret": "$.secrets.ae8c4526-3cbe-4344-adda-c7b017b4618c",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": "",
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workgroups",
                                "urlParams": {
                                    "filters": "memberships.identityId eq \"{{$.trigger.leaverId.id}}\""
                                }
                            },
                            "description": "Get ... all workgroups",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$.trigger",
                                "input.$": "$.getGovernanceGroups.body",
                                "start": "HTTP Request",
                                "steps": {
                                    "End Step — Success": {
                                        "actionId": "sp:operator-success",
                                        "type": "success"
                                    },
                                    "HTTP Request": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonRequestBody": {
                                                "add": [
                                                    "{{$.loop.context.managerRef.id}}"
                                                ],
                                                "remove": [
                                                    "{{$.loop.context.leaverId.id}}"
                                                ]
                                            },
                                            "method": "post",
                                            "oAuthClientId": "b0f1b396f93a4ee9979d009ccd099c1f",
                                            "oAuthClientSecret": "$.secrets.dfdc444a-e2d1-472f-bcb3-50bdbb6861ba",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json",
                                            "requestHeaders": null,
                                            "textRequestBody": "[{\"id\":\"{{$.loop.context.managerRef.id}}\",\"name\":\"{{$.loop.context.managerRef.name}}\",\"type\":\"IDENTITY\"}]",
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2/workgroups/{{$.loop.loopInput.id}}/members"
                                        },
                                        "displayName": "Add a member",
                                        "nextStep": "End Step — Success",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "nextStep": "Compare Numbers",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear {{$.trigger.managerRef.name}},</p>\n<p class=\"MsoNormal\">Due to the off-boarding of {{$.trigger.leaverId.name}}, you have been added to the following Governance Groups:</p>\n<ul>#if($objsLen>1)#foreach ( $detail in ${objs} )\n<li>${detail.name}</li>\n#end #{else}\n\n<li>${objs.name}</li>\n#end\n</ul>\n<p class=\"MsoNormal\">You can access the details of these items at the following link:&nbsp;<br><a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&amp;sysparm_article=KB0013953\">Corporate Employees - Access Items &ndash; Inventory with Owner and Approvers for Requests - Resource Centre</a></p>\n<p class=\"MsoNormal\">If you wish to transfer membership to another individual, please follow the instructions provided in the link below to submit a SNAP request.<br><a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=a19553aadb27981095d0ddf5f49619ed&amp;sysparm_category=a8d60a5e1b115410afb584415b4bcb53\">Authorization Request - Resource Centre</a></p>\n<p class=\"MsoNormal\">This is a system-generated email. Please do not respond to this email.</p>",
                                "context": {
                                    "objs.$": "$.getGovernanceGroups.body",
                                    "objsLen.$": "$.getGovernanceGroups.body.length()"
                                },
                                "from.$": "",
                                "recipientEmailList.$": "$.trigger.managerRef.email",
                                "subject": "Transfer of Membership Notification for Governance Group Objects"
                            },
                            "nextStep": "success 1",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "success 1": {
                            "actionId": "sp:operator-success",
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "trigger": {
                    "type": "EXTERNAL",
                    "attributes": {
                        "clientId": "a4e1bbe0-d93c-47c6-84f0-007e30445c62",
                        "description": "step one of gathering gov groups to be searched for leaver as member",
                        "id": "idn:external-http",
                        "url": "/beta/workflows/execute/external/a5c451a2-9716-47dc-a372-fafedac2c5e9"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "141b761b-fac6-44d2-a16e-048863148aa1",
                "name": "SailPoint PS - Reassign Access Profile Ownership"
            },
            "object": {
                "id": "141b761b-fac6-44d2-a16e-048863148aa1",
                "name": "SailPoint PS - Reassign Access Profile Ownership",
                "description": "Child workflow (external trigger) for the parent leaver workflow that changes the ownership of access profiles from leaver to their manager.",
                "created": "2025-04-07T22:59:30.676611661Z",
                "modified": "2025-07-10T09:42:09.523278583Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "Compare Numbers": {
                            "actionId": "sp:compare-numbers",
                            "choiceList": [
                                {
                                    "comparator": "NumericGreaterThan",
                                    "nextStep": "Send Email",
                                    "variableA.$": "$.hTTPRequest.body.length()",
                                    "variableB": 0
                                }
                            ],
                            "defaultStep": "End Step — Success 1",
                            "displayName": "",
                            "type": "choice"
                        },
                        "End Step — Success 1": {
                            "actionId": "sp:operator-success",
                            "description": "End of active path",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "accessprofiles"
                                    ],
                                    "query": {
                                        "query": "owner.id:{{$.trigger.leaverId.id}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "b0f1b396f93a4ee9979d009ccd099c1f",
                                "oAuthClientSecret": "$.secrets.4ca88132-fa54-4ae7-96d8-0d01b69dd1a8",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v3/search?offset=0&limit=100",
                                "urlParams": null
                            },
                            "description": "get list of access profiles owned by this identity",
                            "displayName": "Get Access Profiles",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$.trigger",
                                "input.$": "$.hTTPRequest.body",
                                "start": "HTTP Request 1",
                                "steps": {
                                    "End Step — Success": {
                                        "actionId": "sp:operator-success",
                                        "type": "success"
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "replace",
                                                    "path": "/owner",
                                                    "value": {
                                                        "id": "{{$.loop.context.managerRef.id}}",
                                                        "type": "IDENTITY"
                                                    }
                                                }
                                            ],
                                            "method": "patch",
                                            "oAuthClientId": "b0f1b396f93a4ee9979d009ccd099c1f",
                                            "oAuthClientSecret": "$.secrets.bf111bc9-e5b6-4f7d-9533-d13bc455418e",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json-patch+json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/beta/access-profiles/{{$.loop.loopInput.id}}"
                                        },
                                        "description": "look up each entitlement and change owner",
                                        "displayName": "Change Owner to Manager",
                                        "nextStep": "End Step — Success",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "nextStep": "Compare Numbers",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear {{$.trigger.managerRef.name}},</p>\n<p class=\"MsoNormal\">Due to the termination/suspension of {{$.trigger.leaverId.name}}, ownership of the following Access Profiles has been transferred to you:</p>\n<ul>#if($objsLen>1)#foreach ( $detail in ${objs} )\n<li>${detail.name}</li>\n#end #{else}\n\n<li>${objs.name}</li>\n#end\n</ul>\n<p class=\"MsoNormal\">You can access the details of these items at the following link:<br><a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&amp;sysparm_article=KB0013953\">Corporate Employees - Access Items &ndash; Inventory with Owner and Approvers for Requests - Resource Centre</a></p>\n<p class=\"MsoNormal\">If you wish to transfer ownership to another individual, please follow the instructions provided in the link below to submit a SNAP request.<br><a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=a19553aadb27981095d0ddf5f49619ed&amp;sysparm_category=a8d60a5e1b115410afb584415b4bcb53\">Authorization Request - Resource Centre</a></p>\n<p class=\"MsoNormal\">This is a system-generated email. Please do not respond to this email.</p>",
                                "context": {
                                    "objs.$": "$.hTTPRequest.body",
                                    "objsLen.$": "$.hTTPRequest.body.length()"
                                },
                                "recipientEmailList.$": "$.trigger.managerRef.email",
                                "subject": "Transfer of Ownership Notification for Access Profile Objects"
                            },
                            "displayName": "",
                            "nextStep": "End Step — Success 1",
                            "type": "action",
                            "versionNumber": 2
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "trigger": {
                    "type": "EXTERNAL",
                    "attributes": {
                        "clientId": "8efb0db1-e6d1-4519-a36f-160b2284b5f7",
                        "description": "change ownership of sources for leaver",
                        "id": "idn:external-http",
                        "url": "/beta/workflows/execute/external/141b761b-fac6-44d2-a16e-048863148aa1"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "d111715e-2db9-4268-8a50-3f15847c4ed4",
                "name": "SailPoint PS - Reassign Entitlement Ownership"
            },
            "object": {
                "id": "d111715e-2db9-4268-8a50-3f15847c4ed4",
                "name": "SailPoint PS - Reassign Entitlement Ownership",
                "description": "Child workflow (external trigger) for the parent leaver workflow that changes ownership of entitlements from the leaver to their manager.",
                "created": "2025-04-07T22:57:44.343374159Z",
                "modified": "2025-07-10T09:42:06.059890273Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "Compare Numbers": {
                            "actionId": "sp:compare-numbers",
                            "choiceList": [
                                {
                                    "comparator": "NumericGreaterThan",
                                    "nextStep": "Send Email",
                                    "variableA.$": "$.hTTPRequest.body.length()",
                                    "variableB": 0
                                }
                            ],
                            "defaultStep": "End Step — Success 1",
                            "displayName": "",
                            "type": "choice"
                        },
                        "End Step — Success 1": {
                            "actionId": "sp:operator-success",
                            "description": "End of active path",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "entitlements"
                                    ],
                                    "query": {
                                        "query": "owner.id:{{$.trigger.leaverId.id}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "b0f1b396f93a4ee9979d009ccd099c1f",
                                "oAuthClientSecret": "$.secrets.43452108-7eb8-43df-8e4a-87f4e199672b",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v3/search?offset=0&limit=100",
                                "urlParams": null
                            },
                            "description": "get list of entitlements owned by this identity",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$.trigger",
                                "input.$": "$.hTTPRequest.body",
                                "start": "HTTP Request 1",
                                "steps": {
                                    "End Step — Success": {
                                        "actionId": "sp:operator-success",
                                        "type": "success"
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "add",
                                                    "path": "/owner",
                                                    "value": {
                                                        "id": "{{$.loop.context.managerRef.id}}",
                                                        "type": "IDENTITY"
                                                    }
                                                }
                                            ],
                                            "method": "patch",
                                            "oAuthClientId": "b0f1b396f93a4ee9979d009ccd099c1f",
                                            "oAuthClientSecret": "$.secrets.693378b5-f3a1-4310-b4fa-e5c5d0028222",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthScope": null,
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json-patch+json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/beta/entitlements/{{$.loop.loopInput.id}}"
                                        },
                                        "description": "look up each entitlement and change owner",
                                        "nextStep": "End Step — Success",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "nextStep": "Compare Numbers",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear {{$.trigger.managerRef.name}},</p>\n<p class=\"MsoNormal\">Due to the termination/suspension of {{$.trigger.leaverId.name}}, ownership of the following Entitlements has been transferred to you:</p>\n<ul>#if($objsLen>1)#foreach ( $detail in ${objs} )\n<li>${detail.name}</li>\n#end #{else}\n\n<li>${objs.name}</li>\n#end\n</ul>\n<p class=\"MsoNormal\">You can access the details of these items at the following link:<br><a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&amp;sysparm_article=KB0013953\">Corporate Employees - Access Items &ndash; Inventory with Owner and Approvers for Requests - Resource Centre</a></p>\n<p class=\"MsoNormal\">If you wish to transfer ownership to another individual, please follow the instructions provided in the link below to submit a SNAP request.<br><a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=a19553aadb27981095d0ddf5f49619ed&amp;sysparm_category=a8d60a5e1b115410afb584415b4bcb53\">Authorization Request - Resource Centre</a></p>\n<p class=\"MsoNormal\">This is a system-generated email. Please do not respond to this email.</p>",
                                "context": {
                                    "objs.$": "$.hTTPRequest.body",
                                    "objsLen.$": "$.hTTPRequest.body.length()"
                                },
                                "recipientEmailList.$": "$.trigger.managerRef.email",
                                "replyTo.$": "",
                                "subject": "Transfer of Ownership Notification for Entitlement Objects"
                            },
                            "displayName": "",
                            "nextStep": "End Step — Success 1",
                            "type": "action",
                            "versionNumber": 2
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "trigger": {
                    "type": "EXTERNAL",
                    "attributes": {
                        "clientId": "0cba8d61-0c99-40f4-ae74-dbd807d16db1",
                        "description": "Trigger to start entitlement reassignment",
                        "id": "idn:external-http",
                        "url": "/beta/workflows/execute/external/d111715e-2db9-4268-8a50-3f15847c4ed4"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "345d1959-8a88-4938-90be-d1e322939e0e",
                "name": "Copy of Inactive User Governance - Phase 2"
            },
            "object": {
                "id": "345d1959-8a88-4938-90be-d1e322939e0e",
                "name": "Copy of Inactive User Governance - Phase 2",
                "description": "Send email to user's manager when user didnt login for more than 45 days and change LCS to suspended",
                "created": "2025-07-08T19:23:48.144408163Z",
                "modified": "2025-07-09T15:26:41.401270416Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "identities"
                                    ],
                                    "query": {
                                        "query": "(attributes.userType:\"employee\" OR attributes.userType:\"contractor\") AND (attributes.cloudLifecycleState:\"active\") AND (attributes.lastSignInDateType:[* TO now-50d])"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                "oAuthClientSecret": "$.secrets.c33bae1a-95aa-42e7-a760-5826bb130380",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2025/search"
                            },
                            "description": "Get the list of identities whose last sign in date more than 45 days ago.",
                            "displayName": "",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "input.$": "$.hTTPRequest.body",
                                "start": "Get Identity 1",
                                "steps": {
                                    "Compare Strings": {
                                        "actionId": "sp:compare-strings",
                                        "choiceList": [
                                            {
                                                "comparator": "StringEquals",
                                                "nextStep": "HTTP Request 1",
                                                "variableA.$": "$.getIdentity1.attributes.loaEndDate",
                                                "variableB": "None"
                                            }
                                        ],
                                        "defaultStep": "Compare Timestamps",
                                        "description": "Verify if LOA End date set for identity.",
                                        "displayName": "",
                                        "type": "choice"
                                    },
                                    "Compare Timestamps": {
                                        "actionId": "sp:compare-timestamps",
                                        "choiceList": [
                                            {
                                                "comparator": "TimestampGreaterThanXDay",
                                                "nextStep": "HTTP Request 1",
                                                "variableA.$": "$.getIdentity1.attributes.loaEndDate",
                                                "variableB": "7"
                                            }
                                        ],
                                        "defaultStep": "End Step - Success 1",
                                        "description": "Check if LOA end date is in past for more than 7 days.",
                                        "displayName": "Check LOA End Date",
                                        "type": "choice"
                                    },
                                    "End Step - Success 1": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "Get Identity": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.manager.id"
                                        },
                                        "description": "Get Manager information",
                                        "displayName": "Get Manager",
                                        "nextStep": "Send Email",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Get Identity 1": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.id"
                                        },
                                        "description": "Get information about each identity.",
                                        "displayName": "",
                                        "nextStep": "Compare Strings",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonRequestBody": {
                                                "lifecycleStateId": "aee456a2c51849cfb33bd1b8a91a7fb6"
                                            },
                                            "method": "post",
                                            "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                            "oAuthClientSecret": "$.secrets.d0786920-3fb0-4aa3-9925-67bf0c133cf8",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2025/identities/{{$.loop.loopInput.id}}/set-lifecycle-state"
                                        },
                                        "description": "Update LCS to suspended.",
                                        "displayName": "",
                                        "nextStep": "Verify Data Type",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<p class=\"MsoNormal\">Dear&nbsp;${managerFirstName}<strong> </strong>${managerLastName},</p>\n<p class=\"MsoNormal\"><span style=\"font-size: 11.0pt; line-height: 107%; font-family: 'Aptos',sans-serif; mso-ascii-theme-font: minor-latin; mso-fareast-font-family: Aptos; mso-fareast-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-CA; mso-fareast-language: EN-US; mso-bidi-language: AR-SA;\">The following user has not logged in for the past 45 days:</span></p>\n<p>Name<strong>:</strong>&nbsp;${firstName} ${lastName}</p>\n<p>Username<strong>:</strong>&nbsp;${sAMAccountName}</p>\n<p class=\"MsoNormal\">As a result, the user&rsquo;s account has been&nbsp;suspended<strong>,</strong>&nbsp;and all access has been&nbsp;disabled. The user&rsquo;s email address has also been&nbsp;restricted.</p>\n<p class=\"MsoNormal\">If reactivation of the account is required, please submit a&nbsp;ServiceNow ticket&nbsp;using the&nbsp;<a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=2aae9af7db6975d0520eae3b13961903&amp;sysparm_category=240d741d1b10e010f2110f6cdc4bcbaa\">Onboarding Request - Resource Centre</a>&nbsp;form and select the&nbsp;\"Return from temporary leave\"&nbsp;option.</p>\n<p class=\"MsoNormal\">For any further questions, please contact the&nbsp;IAM Operations team&nbsp;at&nbsp;<a href=\"mailto:iamops@igmfinancial.com\" target=\"_blank\" rel=\"noopener\">iamops@igmfinancial.com</a>.</p>\n<p class=\"MsoNormal\">Best regards,<br>IAM Operations Team</p>",
                                            "context": {
                                                "firstName.$": "$.getIdentity1.attributes.firstname",
                                                "lastName.$": "$.getIdentity1.attributes.lastname",
                                                "managerFirstName.$": "$.getIdentity.attributes.firstname",
                                                "managerLastName.$": "$.getIdentity.attributes.lastname",
                                                "sAMAccountName.$": "$.getIdentity1.attributes.samaccountname"
                                            },
                                            "recipientEmailList.$": "$.getIdentity.attributes.email",
                                            "subject": "User Account ${firstName} ${lastName} Suspended Due to Inactivity"
                                        },
                                        "description": "Send email to manager.",
                                        "displayName": "",
                                        "nextStep": "End Step - Success 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Verify Data Type": {
                                        "actionId": "sp:compare-unary",
                                        "choiceList": [
                                            {
                                                "comparator": "IsPresent",
                                                "nextStep": "Get Identity",
                                                "variableA.$": "$.loop.loopInput.manager"
                                            }
                                        ],
                                        "defaultStep": "End Step - Success 1",
                                        "description": "Make sure manager exists",
                                        "displayName": "Verify Manager Exists",
                                        "type": "choice"
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "SCHEDULED",
                    "attributes": {
                        "cronString": "0 9,10,11,12,13,14,15 * * *",
                        "dailyTimes": [
                            "1969-12-31T15:00:00.000Z",
                            "1969-12-31T16:00:00.000Z",
                            "1969-12-31T17:00:00.000Z",
                            "1969-12-31T18:00:00.000Z",
                            "1969-12-31T19:00:00.000Z",
                            "1969-12-31T20:00:00.000Z",
                            "1969-12-31T21:00:00.000Z"
                        ],
                        "frequency": "daily",
                        "id": "idn:cron-schedule",
                        "timeZone": "America/Winnipeg"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "71532e21-80a9-48c7-9dce-1fc6cf5047f8",
                "name": "Copy of Inactive User Governance - Phase 1"
            },
            "object": {
                "id": "71532e21-80a9-48c7-9dce-1fc6cf5047f8",
                "name": "Copy of Inactive User Governance - Phase 1",
                "description": "Send email to user's manager when user didnt login for more than 30 days.",
                "created": "2025-07-07T16:34:33.783985157Z",
                "modified": "2025-07-07T16:34:33.783985157Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "identities"
                                    ],
                                    "query": {
                                        "query": "(attributes.userType:\"employee\" OR attributes.userType:\"contractor\") AND (attributes.cloudLifecycleState:\"active\") AND (attributes.lastSignInDateType:[now-70d TO now])"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                "oAuthClientSecret": "",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2025/search"
                            },
                            "displayName": "",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "input.$": "$.hTTPRequest.body",
                                "start": "Get Identity 1",
                                "steps": {
                                    "End Step - Success 1": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "Get Identity": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.manager.id"
                                        },
                                        "description": "",
                                        "displayName": "Get Manager",
                                        "nextStep": "Send Email",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Get Identity 1": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.id"
                                        },
                                        "displayName": "",
                                        "nextStep": "Verify Data Type",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<p class=\"MsoNormal\">Dear&nbsp;${managerFirstName}<strong> </strong>${managerLastName},</p>\n<p class=\"MsoNormal\">The following user has not logged in for the past 30 days:</p>\n<p>Name<strong>:</strong>&nbsp;${firstName} ${lastName}</p>\n<p>Username<strong>:</strong>&nbsp;${sAMAccountName}</p>\n<p class=\"MsoNormal\">If the user is currently on leave or has left the organization, please submit an&nbsp;<a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=b069f5121be98e107254535f034bcbc9&amp;sysparm_category=240d741d1b10e010f2110f6cdc4bcbaa\">Offboarding Request - Resource Centre</a> ticket via&nbsp;ServiceNow&nbsp;to initiate the suspension or offboarding process.</p>\n<p class=\"MsoNormal\">Important<strong>:</strong>&nbsp;If the user does not log in within the next 15 days, their account will be suspended, and all associated access will be disabled.</p>\n<p class=\"MsoNormal\">For any questions or further assistance, please contact the&nbsp;IAM Operations team&nbsp;at&nbsp;<a href=\"mailto:iamops@igmfinancial.com\" target=\"_blank\" rel=\"noopener\">iamops@igmfinancial.com</a>.</p>\n<p class=\"MsoNormal\">Best regards,<br>IAM Operations Team</p>",
                                            "context": {
                                                "firstName.$": "$.getIdentity1.attributes.firstname",
                                                "lastName.$": "$.getIdentity1.attributes.lastname",
                                                "managerFirstName.$": "$.getIdentity.attributes.firstname",
                                                "managerLastName.$": "$.getIdentity.attributes.lastname",
                                                "sAMAccountName.$": "$.getIdentity1.attributes.samaccountname"
                                            },
                                            "recipientEmailList.$": "$.getIdentity.attributes.email",
                                            "subject": "Inactive User Account ${firstName} ${lastName} – Action Required"
                                        },
                                        "description": "Send email to manager",
                                        "displayName": "",
                                        "nextStep": "End Step - Success 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Verify Data Type": {
                                        "actionId": "sp:compare-unary",
                                        "choiceList": [
                                            {
                                                "comparator": "IsPresent",
                                                "nextStep": "Get Identity",
                                                "variableA.$": "$.loop.loopInput.manager"
                                            }
                                        ],
                                        "defaultStep": "End Step - Success 1",
                                        "description": "Make sure manager exists",
                                        "displayName": "Verify Manager Exists",
                                        "type": "choice"
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "SCHEDULED",
                    "attributes": {
                        "cronString": "0 9,10,11,12,13,14,15 * * *",
                        "dailyTimes": [
                            "1969-12-31T15:00:00.000Z",
                            "1969-12-31T16:00:00.000Z",
                            "1969-12-31T17:00:00.000Z",
                            "1969-12-31T18:00:00.000Z",
                            "1969-12-31T19:00:00.000Z",
                            "1969-12-31T20:00:00.000Z",
                            "1969-12-31T21:00:00.000Z"
                        ],
                        "frequency": "daily",
                        "id": "idn:cron-schedule",
                        "timeZone": "America/Winnipeg"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "1ca6ced1-6889-4b26-a3c3-aab0ea6e6aee",
                "name": "Inactive User Governance - Using scheduled search"
            },
            "object": {
                "id": "1ca6ced1-6889-4b26-a3c3-aab0ea6e6aee",
                "name": "Inactive User Governance - Using scheduled search",
                "description": "Send email to user's manager when user didnt login for 45 days.",
                "created": "2025-06-20T20:02:02.287465061Z",
                "modified": "2025-07-07T16:32:34.567035067Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "Loop",
                    "steps": {
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$.trigger.searchResults.Identity.preview[*].ID",
                                "input.$": "$.trigger.searchResults.Identity",
                                "start": "Get Identity",
                                "steps": {
                                    "End Step - Success 1": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "Get Identity": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.ID"
                                        },
                                        "displayName": "",
                                        "nextStep": "End Step - Success 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$.[?(@.searchName=='LastSignInDate -Stage 1')]",
                        "id": "idn:saved-search-complete"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "d1ec0b44-6ad8-4765-a039-f0491edc17f3",
                "name": "http  Non Human Account Certification Workflow 2"
            },
            "object": {
                "id": "d1ec0b44-6ad8-4765-a039-f0491edc17f3",
                "name": "http  Non Human Account Certification Workflow 2",
                "description": "",
                "created": "2025-06-26T14:53:13.853541053Z",
                "modified": "2025-06-26T14:54:42.171898259Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "Compare Strings",
                    "steps": {
                        "Compare Strings": {
                            "actionId": "sp:compare-strings",
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Get Identity",
                                    "variableA.$": "$.trigger.action",
                                    "variableB": "Certification"
                                }
                            ],
                            "defaultStep": "End Step - Failure",
                            "displayName": "",
                            "type": "choice"
                        },
                        "End Step - Failure": {
                            "actionId": "sp:operator-failure",
                            "description": "GET search API HTTP request failed",
                            "displayName": "",
                            "failureDetails": "need to figure out http request body most likely.",
                            "failureName": "Search API call error",
                            "type": "failure"
                        },
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.recipient.id"
                            },
                            "description": "Get full details on the identity in question",
                            "displayName": "",
                            "nextStep": "HTTP Request",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "identities"
                                    ],
                                    "query": {
                                        "query": "id: {{$.getIdentity.id}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                "oAuthClientSecret": "$.secrets.3d1963fb-7e42-489b-816c-53ad5edb13e0",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthScope": null,
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2024/search"
                            },
                            "catch": [
                                {
                                    "next": "End Step - Failure"
                                }
                            ],
                            "description": "Use the output of an identity search to get entitlements",
                            "displayName": "Search Query",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$",
                                "input.$": "$.hTTPRequest.body.*.accounts[?(@.source.name==\"ServiceNow Non-Human Accounts\")].id",
                                "start": "Define Variable",
                                "steps": {
                                    "Define Variable": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "accountId",
                                                    "transforms": [],
                                                    "variableA.$": "$.loop.loopInput"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "HTTP Request 1",
                                        "type": "Mutation"
                                    },
                                    "End Step - Success 1": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "replace",
                                                    "path": "/attributes/lcs",
                                                    "value": "disabled"
                                                }
                                            ],
                                            "jsonRequestBody": {
                                                "op": "replace",
                                                "path": "/attributes/lcs",
                                                "value": "disabled"
                                            },
                                            "method": "patch",
                                            "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                            "oAuthClientSecret": "$.secrets.ea6632d7-9cd0-4f11-a76d-ccf461aaac32",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Accept": "application/json",
                                                "Content-Type": "application/json-patch+json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2024/accounts/{{$.defineVariable.accountId}}",
                                            "urlParams": null
                                        },
                                        "displayName": "Updating lcs attribute of ServiceNow Nonhuman account",
                                        "nextStep": "End Step - Success 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$.accountRequests[?(@.provisioningResult == 'committed' && @.provisioningTarget == 'AD - Non-Person accounts' && @.accountOperation == 'Modify' && 'extensionAttribute8' in @.attributeRequests[*].attributeName && 'revokeToDisableAccount' in @.attributeRequests[*].attributeValue && 'Remove' in @.attributeRequests[*].operation)]",
                        "id": "idn:post-provisioning"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "72596fa1-0be2-470a-84f6-421f6d6e3a74",
                "name": "mail Non Human Account Certification Workflow"
            },
            "object": {
                "id": "72596fa1-0be2-470a-84f6-421f6d6e3a74",
                "name": "mail Non Human Account Certification Workflow",
                "description": "",
                "created": "2025-06-26T14:18:50.742747402Z",
                "modified": "2025-06-26T14:53:39.946863697Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "Compare Strings",
                    "steps": {
                        "Compare Strings": {
                            "actionId": "sp:compare-strings",
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Get Identity",
                                    "variableA.$": "$.trigger.action",
                                    "variableB": "Certification"
                                }
                            ],
                            "defaultStep": "End Step - Failure",
                            "displayName": "",
                            "type": "choice"
                        },
                        "End Step - Failure": {
                            "actionId": "sp:operator-failure",
                            "description": "GET search API HTTP request failed",
                            "displayName": "",
                            "failureDetails": "need to figure out http request body most likely.",
                            "failureName": "Search API call error",
                            "type": "failure"
                        },
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.recipient.id"
                            },
                            "description": "Get full details on the identity in question",
                            "displayName": "",
                            "nextStep": "HTTP Request",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "identities"
                                    ],
                                    "query": {
                                        "query": "id: {{$.getIdentity.id}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "5dd67b3494ff4922b07840c0ee4314e7",
                                "oAuthClientSecret": "$.secrets.d7eb9974-1705-41eb-a8ac-b893a6b0b3e7",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthScope": null,
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2024/search"
                            },
                            "catch": [
                                {
                                    "next": "End Step - Failure"
                                }
                            ],
                            "description": "Use the output of an identity search to get entitlements",
                            "displayName": "Search Query",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$",
                                "input.$": "$.hTTPRequest.body.*.accounts[?(@.source.name==\"ServiceNow Non-Human Accounts\")].id",
                                "start": "Define Variable",
                                "steps": {
                                    "Define Variable": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "accountId",
                                                    "transforms": [],
                                                    "variableA.$": "$.loop.loopInput"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "Send Email",
                                        "type": "Mutation"
                                    },
                                    "End Step - Success 1": {
                                        "actionId": "sp:operator-success",
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<div>\n<div>{{$.defineVariable.accountId}}</div>\n</div>",
                                            "context": {},
                                            "from": null,
                                            "recipientEmailList": [
                                                "Rahul.Majumder@igmfinancial.com"
                                            ],
                                            "replyTo": "rahul.majumder@igmfinancial.com",
                                            "subject": null
                                        },
                                        "description": null,
                                        "displayName": "",
                                        "nextStep": "End Step - Success 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$.accountRequests[?(@.provisioningResult == 'committed' && @.provisioningTarget == 'AD - Non-Person accounts' && @.accountOperation == 'Modify' && 'extensionAttribute8' in @.attributeRequests[*].attributeName && 'revokeToDisableAccount' in @.attributeRequests[*].attributeValue && 'Remove' in @.attributeRequests[*].operation)]",
                        "id": "idn:post-provisioning"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "00bee526-9be2-4451-8736-7efeae559f9d",
                "name": "Copy of SailPoint PS - Reassign Access Profile Ownership"
            },
            "object": {
                "id": "00bee526-9be2-4451-8736-7efeae559f9d",
                "name": "Copy of SailPoint PS - Reassign Access Profile Ownership",
                "description": "Child workflow (external trigger) for the parent leaver workflow that changes the ownership of access profiles from leaver to their manager.",
                "created": "2025-06-25T19:32:04.154117691Z",
                "modified": "2025-06-25T19:32:04.154117691Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "Compare Numbers": {
                            "actionId": "sp:compare-numbers",
                            "choiceList": [
                                {
                                    "comparator": "NumericGreaterThan",
                                    "nextStep": "Send Email",
                                    "variableA.$": "$.hTTPRequest.body.length()",
                                    "variableB": 0
                                }
                            ],
                            "defaultStep": "End Step — Success 1",
                            "displayName": "",
                            "type": "choice"
                        },
                        "End Step — Success 1": {
                            "actionId": "sp:operator-success",
                            "description": "End of active path",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "indices": [
                                        "accessprofiles"
                                    ],
                                    "query": {
                                        "query": "owner.id:{{$.trigger.leaverId.id}}"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "b0f1b396f93a4ee9979d009ccd099c1f",
                                "oAuthClientSecret": "",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": {
                                    "Content-Type": "application/json"
                                },
                                "url": "https://igmfinancial-uat.api.identitynow.com/v3/search?offset=0&limit=100",
                                "urlParams": null
                            },
                            "description": "get list of access profiles owned by this identity",
                            "displayName": "Get Access Profiles",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$.trigger",
                                "input.$": "$.hTTPRequest.body",
                                "start": "HTTP Request 1",
                                "steps": {
                                    "End Step — Success": {
                                        "actionId": "sp:operator-success",
                                        "type": "success"
                                    },
                                    "HTTP Request 1": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": [
                                                {
                                                    "op": "replace",
                                                    "path": "/owner",
                                                    "value": {
                                                        "id": "{{$.loop.context.managerRef.id}}",
                                                        "type": "IDENTITY"
                                                    }
                                                }
                                            ],
                                            "method": "patch",
                                            "oAuthClientId": "b0f1b396f93a4ee9979d009ccd099c1f",
                                            "oAuthClientSecret": "$.secrets.bf111bc9-e5b6-4f7d-9533-d13bc455418e",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json-patch+json",
                                            "requestHeaders": {
                                                "Content-Type": "application/json-patch+json"
                                            },
                                            "url": "https://igmfinancial-uat.api.identitynow.com/beta/access-profiles/{{$.loop.loopInput.id}}"
                                        },
                                        "description": "look up each entitlement and change owner",
                                        "displayName": "Change Owner to Manager",
                                        "nextStep": "End Step — Success",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "nextStep": "Compare Numbers",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear {{$.trigger.managerRef.name}},</p>\n<p class=\"MsoNormal\">Due to the termination/suspension of {{$.trigger.leaverId.name}}, ownership of the following Access Profiles has been transferred to you:</p>\n<ul>#if($objsLen>1)#foreach ( $detail in ${objs} )\n<li>${detail.name}</li>\n#end #{else}\n\n<li>${objs.name}</li>\n#end\n</ul>\n<p class=\"MsoNormal\">You can access the details of these items at the following link:<br><a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&amp;sysparm_article=KB0013953\">Corporate Employees - Access Items &ndash; Inventory with Owner and Approvers for Requests - Resource Centre</a></p>\n<p class=\"MsoNormal\">If you wish to transfer ownership to another individual, please follow the instructions provided in the link below to submit a SNAP request.<br><a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=a19553aadb27981095d0ddf5f49619ed&amp;sysparm_category=a8d60a5e1b115410afb584415b4bcb53\">Authorization Request - Resource Centre</a></p>\n<p class=\"MsoNormal\">This is a system-generated email. Please do not respond to this email.</p>",
                                "context": {
                                    "objs.$": "$.hTTPRequest.body",
                                    "objsLen.$": "$.hTTPRequest.body.length()"
                                },
                                "recipientEmailList.$": "$.trigger.managerRef.email",
                                "subject": "Transfer of Ownership Notification for Access Profile Objects"
                            },
                            "displayName": "",
                            "nextStep": "End Step — Success 1",
                            "type": "action",
                            "versionNumber": 2
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "trigger": {
                    "type": "EXTERNAL",
                    "attributes": {
                        "description": "change ownership of sources for leaver",
                        "id": "idn:external-http"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "dfdffabe-724e-4a65-adf5-ed0e6da4f638",
                "name": "Copy of SailPoint PS - Reassign Governance Group Ownership 2"
            },
            "object": {
                "id": "dfdffabe-724e-4a65-adf5-ed0e6da4f638",
                "name": "Copy of SailPoint PS - Reassign Governance Group Ownership 2",
                "description": "Child workflow (external trigger) for the parent leaver workflow that changes the ownership of governance groups from leaver to their manager.",
                "created": "2025-06-25T18:51:38.917227733Z",
                "modified": "2025-06-25T18:51:38.917227733Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "method": "get",
                                "oAuthClientId": "b0f1b396f93a4ee9979d009ccd099c1f",
                                "oAuthClientSecret": "",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "requestHeaders": "",
                                "url": "https://igmfinancial-uat.api.identitynow.com/beta/workgroups?offset=0&limit=50",
                                "urlParams": ""
                            },
                            "description": "Get ... all workgroups",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$.trigger",
                                "input.$": "$.hTTPRequest.body",
                                "start": "Define Variable",
                                "steps": {
                                    "Compare Strings": {
                                        "actionId": "sp:compare-strings",
                                        "choiceList": [
                                            {
                                                "comparator": "StringEquals",
                                                "nextStep": "HTTP Request 2",
                                                "variableA.$": "$.defineVariable.first",
                                                "variableB.$": "$.defineVariable1.second"
                                            }
                                        ],
                                        "defaultStep": "success",
                                        "displayName": "",
                                        "type": "choice"
                                    },
                                    "Define Variable": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "First",
                                                    "transforms": [],
                                                    "variableA.$": "$.loop.loopInput.owner.id"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "Define Variable 1",
                                        "type": "Mutation"
                                    },
                                    "Define Variable 1": {
                                        "actionId": "sp:define-variable",
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "Second",
                                                    "transforms": [],
                                                    "variableA.$": "$.loop.context.leaverId.id"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "Compare Strings",
                                        "type": "Mutation"
                                    },
                                    "HTTP Request 2": {
                                        "actionId": "sp:http",
                                        "attributes": {
                                            "authenticationType": "OAuth",
                                            "jsonPatchRequestBody": null,
                                            "jsonRequestBody": {
                                                "owner": {
                                                    "id": "{{$.loop.context.managerRef.id}}"
                                                }
                                            },
                                            "method": "patch",
                                            "oAuthClientId": "b0f1b396f93a4ee9979d009ccd099c1f",
                                            "oAuthClientSecret": "$.secrets.f952eee6-1a5d-4911-92b9-a9c9d394a191",
                                            "oAuthCredentialLocation": "oAuthInHeader",
                                            "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                            "requestContentType": "json",
                                            "requestHeaders": "Content-Type:application/json",
                                            "textRequestBody": "",
                                            "url": "https://igmfinancial-uat.api.identitynow.com/v2/workgroups/{{$.loop.loopInput.id}}"
                                        },
                                        "description": "Call governance group API to update(patch) governance group with IAM owner temporarily.",
                                        "nextStep": "Send Email",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<p>Dear {{$.loop.context.managerRef.name}},</p>\n<p>Due to the termination/suspension of {{$.loop.context.leaverId.name}}, ownership of the following Governance Group has been transferred to you:</p>\n<p>{{$.loop.loopInput.name}}</p>\n<p>You can access the details of this item at the following link:<br><a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&amp;sysparm_article=KB0013953\">Corporate Employees - Access Items &ndash; Inventory with Owner and Approvers for Requests - Resource Centre</a></p>\n<p>If you wish to transfer ownership to another individual, please follow the instructions provided in the link below to submit a SNAP request.</p>\n<p><a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=a19553aadb27981095d0ddf5f49619ed&amp;sysparm_category=a8d60a5e1b115410afb584415b4bcb53\">Authorization Request - Resource Centre</a></p>\n<p>This is a system-generated email. Please do not respond to this email.</p>",
                                            "context": {},
                                            "recipientEmailList.$": "$.loop.context.managerRef.email",
                                            "subject": "Transfer of Ownership Notification for Governance Group – {{$.loop.loopInput.name}}"
                                        },
                                        "displayName": "",
                                        "nextStep": "success",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "success": {
                                        "actionId": "sp:operator-success",
                                        "type": "success"
                                    }
                                }
                            },
                            "description": "loop through all gov groups with filter where owner is the leaver",
                            "nextStep": "success 1",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "success 1": {
                            "actionId": "sp:operator-success",
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "EXTERNAL",
                    "attributes": {
                        "description": "Call to IDN to change ownership of governance groups owned by leaver",
                        "id": "idn:external-http"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "f56b4367-e6f9-4fbe-9ba0-c13fa7be39f0",
                "name": "NH Account - Owner Change Notification"
            },
            "object": {
                "id": "f56b4367-e6f9-4fbe-9ba0-c13fa7be39f0",
                "name": "NH Account - Owner Change Notification",
                "description": "When an user, who has been assigned as the owner of any non-human account, either leaves the organization (termination of identity) or goes on LOA (suspension of identity) or approves an owner update SNAP request, user’s manager will be assigned as new owner through a new cloud rule – Non-Humans – Manager Correlation. \nThis workflow will be used for notifying the new owner (old owner’s manager).",
                "created": "2025-05-26T08:45:53.367377875Z",
                "modified": "2025-05-26T12:09:22.388131985Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "8b3c97da521442999ef05af532ecf6f7",
                    "name": "rahul.majumder"
                },
                "definition": {
                    "start": "Compare Strings 1",
                    "steps": {
                        "Compare Strings": {
                            "actionId": "sp:compare-strings",
                            "choiceList": [
                                {
                                    "comparator": "StringMatches",
                                    "nextStep": "Get Identity 1",
                                    "variableA.$": "$.defineVariable.userTypes",
                                    "variableB.$": "$.getIdentity.attributes.userType"
                                }
                            ],
                            "defaultStep": "End Step - Success",
                            "displayName": "",
                            "type": "choice"
                        },
                        "Compare Strings 1": {
                            "actionId": "sp:compare-strings",
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "End Step - Success",
                                    "variableA.$": "$.trigger.changes[?(@.attribute=='managerFullName')].oldValue",
                                    "variableB": "None"
                                }
                            ],
                            "defaultStep": "Get Identity",
                            "displayName": "",
                            "type": "choice"
                        },
                        "Define Variable": {
                            "actionId": "sp:define-variable",
                            "attributes": {
                                "id": "sp:define-variable",
                                "variables": [
                                    {
                                        "description": "",
                                        "name": "userTypes",
                                        "transforms": [],
                                        "variableA": "TEST,SVC,BOT,PRF,PRA"
                                    }
                                ]
                            },
                            "displayName": "",
                            "nextStep": "Compare Strings",
                            "type": "Mutation"
                        },
                        "End Step - Success": {
                            "actionId": "sp:operator-success",
                            "displayName": "",
                            "type": "success"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "displayName": "",
                            "nextStep": "Define Variable",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Get Identity 1": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.getIdentity.managerRef.id"
                            },
                            "description": "Get Manager Identity Information for list of",
                            "displayName": "",
                            "nextStep": "Send Email",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "Dear ${managerFirstName},<br>\n<br>\nOwnership of the following Non-Human Account has been transferred to you:<br>\n<br>\n<b>Account Name (sAMAccountName)</b>: ${NHAccountName}<br>\n<b>UPN</b>: ${UPN}<br>\n<b>Environment</b>: ${environment}<br>\n<b>Display Name</b>: ${displayName}<br>\n<b>Account Type</b>: ${acctType}<br>\n<b>Description</b>: ${description}<br>\n<b>Status</b>: ${lcs}<br>\n<br>\nThis transfer was triggered by the offboarding of the previously assigned owner, ${oldManagerName}, or by a SNAP Request approved by ${oldManagerName}.\n<br>\nIf you wish to transfer ownership of this account to a different person, follow the instructions in the link below to submit a SNAP request.<br>\n<br>\n<a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&sysparm_article=KB0015994\">IGM - SNAP - How to request a new or update a Non-Human Account</a><br>\n<br>\nThis is a system-generated email. Please do not respond to this email.<br>\n<br>\nBonjour ${managerFirstName},<br>\n<br>\nLa propriété du compte non humain suivant vous a été transférée :<br>\n<br>\n<b>Nom du compte (sAMAccountName)</b>: ${NHAccountName}<br>\n<b>Nom principal de l’utilisateur (UPN)</b>: ${UPN}<br>\n<b>Environnement</b>: ${environment}<br>\n<b>Nom d’affichage</b>: ${displayName}<br>\n<b>Type de compte</b>: ${acctType}<br>\n<b>Description</b>: ${description}<br>\n<b>État</b>: ${lcs}<br>\n<br>\nCe transfert a été déclenché par le départ de l’ancien titulaire assigné, ${oldManagerName}, ou fait suite à une demande SNAP approuvée par ${oldManagerName}.\n<br>\nSi vous souhaitez transférer la propriété de ce compte à une autre personne, veuillez soumettre une demande SNAP en suivant les instructions accessibles par le lien ci-dessous.<br>\n<br>\n<a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&sysparm_article=KB0015994\">IGM - SNAP - Comment demander la création ou la mise à jour d’un compte non humain</a><br>\n<br>\nCe courriel a été produit par le système. Veuillez ne pas y répondre.",
                                "context": {
                                    "NHAccountName.$": "$.getIdentity.attributes.samaccountname",
                                    "UPN.$": "$.getIdentity.attributes.upn",
                                    "acctType.$": "$.getIdentity.attributes.userType",
                                    "description.$": "$.getIdentity.attributes.fullDescription",
                                    "displayName.$": "$.getIdentity.attributes.displayName",
                                    "environment.$": "$.getIdentity.attributes.applicationEnvironment",
                                    "lcs.$": "$.getIdentity.attributes.cloudLifecycleState",
                                    "managerFirstName.$": "$.getIdentity1.attributes.firstname",
                                    "oldManagerName.$": "$.trigger.changes[?(@.attribute=='managerFullName')].oldValue"
                                },
                                "from": null,
                                "recipientEmailList.$": "$.getIdentity1.attributes.email",
                                "subject": "Change of Owner for Non-Human Account: ${NHAccountName}/Changement de titulaire pour un compte non humain: ${NHAccountName}"
                            },
                            "description": "Send email to manager's manager.",
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 2
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$.changes[?(@.attribute == \"managerFullName\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "4ea50038-d351-43dc-abec-1a4beebe2dd9",
                "name": "Mover Advisor IAM Ops Notification"
            },
            "object": {
                "id": "4ea50038-d351-43dc-abec-1a4beebe2dd9",
                "name": "Mover Advisor IAM Ops Notification",
                "description": "Joiner Advisor IAM Ops Notification",
                "created": "2023-04-11T15:06:10.922986137Z",
                "modified": "2025-04-04T18:36:37.971666428Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "Get Identity",
                    "steps": {
                        "Compare Strings": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "success",
                                    "variableA.$": "$.getIdentity.attributes.cloudLifecycleState",
                                    "variableB": "Terminated"
                                }
                            ],
                            "defaultStep": "Compare Strings 1",
                            "description": "Check if identity was terminated. Since termination changes subscription indicatior as well",
                            "type": "choice"
                        },
                        "Compare Strings 1": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Send Email 1",
                                    "variableA.$": "$.getIdentity.attributes.userType",
                                    "variableB": "Advisor"
                                }
                            ],
                            "defaultStep": "success",
                            "description": "Check if identity is an Advisor",
                            "type": "choice"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "description": "Get Identity Information",
                            "nextStep": "Compare Strings",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email 1": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>IAM Ops,<br><br>Changes have been made to an Advisor identity. Please reference the details below to provision and deprovision appropriate access for this event.<br><br>Event Type: MOVER<br>Short Description: MOVER - ${userType} - ${sAMAccountName}<br>Name: ${firstName} ${lastName}<br>User Type: ${userType}<br>Start Date: ${startDate}<br>Language: ${language}<br>Manager: ${manager}<br>Company: ${company}<br>Work Location: ${street}, ${city}, ${postalCode}, ${country}<br><br><br>Changes (If dollar sign and curly brackets appears, there was no change to the attribute) :<br><br>First Name Old Value: ${oldFirst}<br>First Name New Value: ${newFirst}<br><br>Last Name Old Value: ${oldLast}<br>LastName New Value: ${newLast}<br><br>Department Old Value: ${oldDep}<br>Department New Value: ${newDep}<br><br>Subscription Indicator Old Value: ${oldSub}<br>Subscription Indicator New Value: ${newSub}<br><br>Title Old Value: ${oldTitle}<br>Title New Value: ${newTitle}<br><br>Rep Relationships Old Value: ${oldRep}<br>Rep Relationships New Value: ${newRep}<br><br>RGOFNAME Old Value: ${oldRgofname}<br>RGOFNAME New Value: ${newRgofname}<br><br>RGOFNO Old Value: ${oldRgofno}<br>RGOFNO New Value: ${newRgofno}<br><br>Language Old Value: ${oldLanguage}<br>Language New Value: ${newLanguage}</p>\n<p>DEALERNUM Old Value: ${oldDealernum}<br>DEALERNUM New Value: ${newDealernum}<br><br><br>This is a system-generated email. Please do not respond to this email.</p>",
                                "context": {
                                    "city.$": "$.getIdentity.attributes.city",
                                    "company.$": "$.getIdentity.attributes.company",
                                    "country.$": "$.getIdentity.attributes.country",
                                    "dealernumber.$": "$.getIdentity.attributes.dealernum",
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "language.$": "$.getIdentity.attributes.language",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "manager.$": "$.getIdentity.managerRef.name",
                                    "newDealernum.$": "$.trigger.changes[?(@.attribute=='dealernum')].newValue",
                                    "newDep.$": "$.trigger.changes[?(@.attribute=='department')].newValue",
                                    "newFirst.$": "$.trigger.changes[?(@.attribute=='firstname')].newValue",
                                    "newLanguage.$": "$.trigger.changes[?(@.attribute=='language')].newValue",
                                    "newLast.$": "$.trigger.changes[?(@.attribute=='lastname')].newValue",
                                    "newRep.$": "$.trigger.changes[?(@.attribute=='repRelationships')].newValue",
                                    "newRgofname.$": "$.trigger.changes[?(@.attribute=='rgofname')].newValue",
                                    "newRgofno.$": "$.trigger.changes[?(@.attribute=='rgofno')].newValue",
                                    "newSub.$": "$.trigger.changes[?(@.attribute=='subscriptionIndicator')].newValue",
                                    "newTitle.$": "$.trigger.changes[?(@.attribute=='title')].newValue",
                                    "oldDealernum.$": "$.trigger.changes[?(@.attribute=='dealernum')].oldValue",
                                    "oldDep.$": "$.trigger.changes[?(@.attribute=='department')].oldValue",
                                    "oldFirst.$": "$.trigger.changes[?(@.attribute=='firstname')].oldValue",
                                    "oldLanguage.$": "$.trigger.changes[?(@.attribute=='language')].oldValue",
                                    "oldLast.$": "$.trigger.changes[?(@.attribute=='lastname')].oldValue",
                                    "oldRep.$": "$.trigger.changes[?(@.attribute=='repRelationships')].oldValue",
                                    "oldRgofname.$": "$.trigger.changes[?(@.attribute=='rgofname')].oldValue",
                                    "oldRgofno.$": "$.trigger.changes[?(@.attribute=='rgofno')].oldValue",
                                    "oldSub.$": "$.trigger.changes[?(@.attribute=='subscriptionIndicator')].oldValue",
                                    "oldTitle.$": "$.trigger.changes[?(@.attribute=='title')].oldValue",
                                    "postalCode.$": "$.getIdentity.attributes.postalCode",
                                    "rgofname.$": "$.getIdentity.attributes.rgofname",
                                    "rgofno.$": "$.getIdentity.attributes.rgofno",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname",
                                    "startDate.$": "$.getIdentity.attributes.startDate",
                                    "street.$": "$.getIdentity.attributes.street",
                                    "userType.$": "$.getIdentity.attributes.userType"
                                },
                                "from": null,
                                "recipientEmailList": [
                                    "igmfinancialtest@service-now.com",
                                    "iamops@igmfinancial.com"
                                ],
                                "replyTo": null,
                                "subject": "Mover - Advisor - ${firstName} ${lastName}"
                            },
                            "description": "Advisor mover event notification for IAM Ops team",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "success": {
                            "description": null,
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d08",
                    "name": "emmanuel.martinez"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "description": "Need to check if department, subscription indicator, or job title changed",
                        "filter.$": "$.changes[?(@.attribute == \"department\" || @.attribute == \"subscriptionIndicator\" || @.attribute == \"title\" || @.attribute == \"firstname\" || @.attribute == \"lastname\" || @.attribute == \"repRelationships\" || @.attribute == \"rgofname\" || @.attribute == \"rgofno\" || @.attribute == \"language\" || @.attribute == \"dealernum\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "7125f87d-639a-4cde-b066-15375dd443a2",
                "name": "Copy of Add LegacyUserID-Interactive 2"
            },
            "object": {
                "id": "7125f87d-639a-4cde-b066-15375dd443a2",
                "name": "Copy of Add LegacyUserID-Interactive 2",
                "description": "Used with Form to manually enter new LegacyUserID records/accounts in an interactive manner.",
                "created": "2025-02-19T15:26:02.244435626Z",
                "modified": "2025-02-19T15:26:02.244435626Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d06",
                    "name": "scott.walker"
                },
                "definition": {
                    "start": "Interactive Form",
                    "steps": {
                        "End Step - Success": {
                            "description": "Happy path success",
                            "displayName": "End Step - Success 1",
                            "type": "success"
                        },
                        "End Step - Success 1": {
                            "displayName": "End Step - Success 2",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "attributes": {
                                        "UserID": "{{$.interactiveForm.formData.newLegacyUserId}}",
                                        "sourceId": "8c62fa689ccc40989e89b870a9052897"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "549adea6-3899-44db-ba74-a19a17101800",
                                "oAuthClientSecret": "",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthScope": null,
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2024/accounts"
                            },
                            "catch": [
                                {
                                    "next": "Send Email"
                                }
                            ],
                            "description": "Use the SailPoint \"Create Account\" API call to create the new Source Account.",
                            "displayName": "",
                            "nextStep": "Interactive Message 1",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Interactive Form": {
                            "actionId": "sp:interactive-form",
                            "attributes": {
                                "formDefinitionId": "fa84dbf6-ecad-4240-8b6b-661b50cbb9b6",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>This form allows input of arbitrary sAMAccountNames / UserIDs to be added to the \"burn\" / exclusion list. UserId / sAMAccountName values entered here will be excluded from being re-used for any future HIRE or RE-HIRE onboarding processes in SailPoint.&nbsp;</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "Enter new \"Do-Not-Use\" Legacy UserID"
                            },
                            "description": "UserId / sAMAccountName values entered here will be excluded from being re-used for any future HIRE or RE-HIRE onboarding processes in SailPoint.",
                            "displayName": "",
                            "nextStep": "HTTP Request",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "ERROR",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>&lt;/p&gt;The attempt to add {{$.interactiveForm.formData.newLegacyUserId}} as a new \"do-not-use\" Legacy UserId failed at the HTTP create-account step. &lt;/p&gt;</p>\n<p>The SailPoint Platform team has been notified via an email of this issue.&nbsp;</p>",
                                "ownerId.$": "$.trigger.launchedBy.id"
                            },
                            "description": "Inform the entry person/admin that the workflow failed to add the desired LegacyUserId record.",
                            "displayName": "Interactive Message 2",
                            "nextStep": "End Step - Success 1",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 1": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "INFO",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>&lt;/p&gt; <strong>Success:</strong> The desired UserID/sAMAccountName {{$.interactiveForm.formData.newLegacyUserId}} has been added as a new \"do-not-use\" LegacyUserId record, and will not be used for hires or re-hires in the future. &lt;/p&gt;</p>",
                                "ownerId.$": "$.trigger.launchedBy.id"
                            },
                            "description": "Inform the entry person/admin that the new LegacyUserId record has been successfully added",
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>&lt;/p&gt;The attempt to add {{$.interactiveForm.formData.newLegacyUserId}} as a new \"do-not-use\" Legacy UserId failed at the HTTP create-account step. &lt;/p&gt;</p>\n<p>Please examine the workflow for potential issues.&nbsp;</p>",
                                "context": {},
                                "from": null,
                                "recipientEmailList": [
                                    "scott.walker@igmfinancial.com",
                                    "igmsailpointsandboxnotifications@igmfinancial.com"
                                ],
                                "replyTo": null,
                                "subject": "Add LegacyUserID workflow Failure"
                            },
                            "description": "Notify Platform SailPoint team of workflow failure.",
                            "displayName": "",
                            "nextStep": "Interactive Message",
                            "type": "action",
                            "versionNumber": 2
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d06",
                    "name": "scott.walker"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d06",
                    "name": "scott.walker"
                },
                "trigger": {
                    "displayName": "Trigger: Create LegacyUserID-Interactive Workflow",
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$[?(@.workflowId == '7125f87d-639a-4cde-b066-15375dd443a2')]",
                        "id": "idn:interactive-process-launched"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "9af6f563-55f7-43ee-aea1-241e07279b0c",
                "name": "Copy of Add LegacyUserID-Interactive"
            },
            "object": {
                "id": "9af6f563-55f7-43ee-aea1-241e07279b0c",
                "name": "Copy of Add LegacyUserID-Interactive",
                "description": "Used with Form to manually enter new LegacyUserID records/accounts in an interactive manner.",
                "created": "2025-02-19T14:07:57.630585976Z",
                "modified": "2025-02-19T14:12:57.970191614Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d06",
                    "name": "scott.walker"
                },
                "definition": {
                    "start": "Interactive Form",
                    "steps": {
                        "End Step - Success": {
                            "description": "Happy path success",
                            "displayName": "End Step - Success 1",
                            "type": "success"
                        },
                        "End Step - Success 1": {
                            "displayName": "End Step - Success 2",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "jsonRequestBody": {
                                    "attributes": {
                                        "UserID": "{{$.interactiveForm.formData.newLegacyUserId}}",
                                        "sourceId": "8c62fa689ccc40989e89b870a9052897"
                                    }
                                },
                                "method": "post",
                                "oAuthClientId": "549adea6-3899-44db-ba74-a19a17101800",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthScope": null,
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "url": "https://igmfinancial-uat.api.identitynow.com/v2024/accounts"
                            },
                            "catch": [
                                {
                                    "next": "Send Email"
                                }
                            ],
                            "description": "Use the SailPoint \"Create Account\" API call to create the new Source Account.",
                            "displayName": "",
                            "nextStep": "Interactive Message 1",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Interactive Form": {
                            "actionId": "sp:interactive-form",
                            "attributes": {
                                "formDefinitionId": "fa84dbf6-ecad-4240-8b6b-661b50cbb9b6",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>UserId / sAMAccountName values entered here will be excluded from being re-used for any future HIRE or RE-HIRE onboarding processes in SailPoint.&nbsp;</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "Enter new Do-Not-Use Legacy UserID"
                            },
                            "description": "UserId / sAMAccountName values entered here will be excluded from being re-used for any future HIRE or RE-HIRE onboarding processes in SailPoint.</p>\nThis is only expected to be used when an Identities sAMAccountName is forceably changed via a manual re-linking the identity to a different primary AD account.",
                            "displayName": "",
                            "nextStep": "HTTP Request",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "ERROR",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>&lt;/p&gt;The attempt to add {{$.interactiveForm.formData.newLegacyUserId}} as a new \"do-not-use\" Legacy UserId failed at the HTTP create-account step. &lt;/p&gt;</p>\n<p>The SailPoint Platform team has been notified via an email of this issue.&nbsp;</p>",
                                "ownerId.$": "$.trigger.launchedBy.id"
                            },
                            "description": "Inform the entry person/admin that the workflow failed to add the desired LegacyUserId record.",
                            "displayName": "Interactive Message 2",
                            "nextStep": "End Step - Success 1",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 1": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "INFO",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>&lt;/p&gt; <strong>Success:</strong> The desired UserID/sAMAccountName {{$.interactiveForm.formData.newLegacyUserId}} has been added as a new \"do-not-use\" LegacyUserId record, and will not be used for hires or re-hires in the future. &lt;/p&gt;</p>",
                                "ownerId.$": "$.trigger.launchedBy.id"
                            },
                            "description": "Inform the entry person/admin that the new LegacyUserId record has been successfully added",
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>&lt;/p&gt;The attempt to add {{$.interactiveForm.formData.newLegacyUserId}} as a new \"do-not-use\" Legacy UserId failed at the HTTP create-account step. &lt;/p&gt;</p>\n<p>Please examine the workflow for potential issues.&nbsp;</p>",
                                "context": {},
                                "from": null,
                                "recipientEmailList": [
                                    "scott.walker@igmfinancial.com",
                                    "igmsailpointsandboxnotifications@igmfinancial.com"
                                ],
                                "replyTo": null,
                                "subject": "Add LegacyUserID workflow Failure"
                            },
                            "description": "Notify Platform SailPoint team of workflow failure.",
                            "displayName": "",
                            "nextStep": "Interactive Message",
                            "type": "action",
                            "versionNumber": 2
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d06",
                    "name": "scott.walker"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d06",
                    "name": "scott.walker"
                },
                "trigger": {
                    "displayName": "Trigger: Create LegacyUserID-Interactive Workflow",
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$[?(@.workflowId == '9af6f563-55f7-43ee-aea1-241e07279b0c')]",
                        "id": "idn:interactive-process-launched"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "308b06ca-2221-4d2b-a65f-3bb903d403ac",
                "name": "Manager Change Notification for Contractors"
            },
            "object": {
                "id": "308b06ca-2221-4d2b-a65f-3bb903d403ac",
                "name": "Manager Change Notification for Contractors",
                "description": "This workflow sends an email notification to the new manager of a Contractor, in an event of manager change.",
                "created": "2024-08-16T14:52:28.41355483Z",
                "modified": "2025-02-08T12:03:57.873778283Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "Compare Strings 1",
                    "steps": {
                        "Compare Strings": {
                            "choiceList": [
                                {
                                    "comparator": "StringMatches",
                                    "nextStep": "Get Identity 1",
                                    "variableA.$": "$.defineVariable.userType",
                                    "variableB.$": "$.getIdentity.attributes.userType"
                                }
                            ],
                            "defaultStep": "End Step - Success",
                            "displayName": "",
                            "type": "choice"
                        },
                        "Compare Strings 1": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "End Step - Success",
                                    "variableA.$": "$.trigger.changes[?(@.attribute=='managerFullName')].oldValue",
                                    "variableB": "None"
                                }
                            ],
                            "defaultStep": "Get Identity",
                            "displayName": "",
                            "type": "choice"
                        },
                        "Define Variable": {
                            "attributes": {
                                "id": "sp:define-variable",
                                "variables": [
                                    {
                                        "description": "",
                                        "name": "userType",
                                        "transforms": [],
                                        "variableA": "Contractor"
                                    }
                                ]
                            },
                            "displayName": "",
                            "nextStep": "Compare Strings",
                            "type": "Mutation"
                        },
                        "End Step - Success": {
                            "displayName": "",
                            "type": "success"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "displayName": "",
                            "nextStep": "Define Variable",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Get Identity 1": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.getIdentity.managerRef.id"
                            },
                            "description": "Get Manager Identity Information",
                            "displayName": "",
                            "nextStep": "Send Email",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear ${managerFirstName},<br><br></p>\n<p class=\"MsoNormal\">You have been assigned as the Manager for the following user:</p>\n<p class=\"MsoNormal\"><strong>Display Name:&nbsp;</strong>${displayName}<br><strong>sAMAccountName</strong>: ${AccountName}<br><strong>UPN</strong>: ${UPN}<br><br>This transfer was triggered by the offboarding of the previously assigned manager, ${oldManagerName}, or by a SNAP Request approved by ${oldManagerName}.&nbsp;</p>\n<p class=\"MsoNormal\"><br>If you wish to update the manager for this user to a different person, please follow the instructions in the link below to submit a SNAP request.<br><br></p>\n<p class=\"MsoNormal\"><strong><a href=\"https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Figmfinancial.service-now.com%2Fsnap%3Fid%3Dkb_article_view%26sysparm_article%3DKB0015599&amp;data=05%7C02%7CJyoti.Gupta%40IGMFinancial.com%7Ca730246b12074bd17ba408dcbe354c5c%7Cdc411c631f524491bb51c4d215a1de23%7C0%7C0%7C638594383320646865%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&amp;sdata=zPvA%2Fa9eFkPr%2BACi1tOHF%2B1pyzbPr5IYK7i9Af5iSyE%3D&amp;reserved=0\" target=\"_blank\" rel=\"noopener noreferrer\">IGM -SNAP-How to Update Employee or Contractor User Account</a></strong></p>\n<p class=\"MsoNormal\"><br>This is a system-generated email. Please do not respond to this email.</p>\n<p>Bonjour ${managerFirstName},<br><br></p>\n<p class=\"MsoNormal\">On vous a désigné(e) comme gestionnaire de l’utilisateur suivant :</p>\n<p class=\"MsoNormal\"><strong>Nom affiché &nbsp;</strong>: ${displayName}<br><strong>Nom d’utilisateur</strong>: ${AccountName}<br><strong>UPN</strong>: ${UPN}<br><br>\nCe transfert a été déclenché par le départ de l’ancien(ne) gestionnaire assigné(e), ${oldManagerName}, ou fait suite à une demande SNAP approuvée par ${oldManagerName}.&nbsp;</p>\n<p class=\"MsoNormal\"><br>Si vous souhaitez faire un changement de gestionnaire pour cet utilisateur, veuillez soumettre une demande SNAP en suivant les instructions accessibles par le lien ci-dessous.<br><br></p>\n<p class=\"MsoNormal\"><strong><a href=\"https://igmfinancial.service-now.com/kb_view.do?sysparm_article=KB0016562\" target=\"_blank\" rel=\"noopener noreferrer\">Portail SNAP d’IGM – Procédure de mise à jour du compte d’utilisateur d’un(e) employé(e) ou d’un(e) employé(e) contractuel(le)</a></strong></p>\n<p class=\"MsoNormal\"><br>Ce courriel a été produit par le système. Veuillez ne pas y répondre.</p>",
                                "context": {
                                    "AccountName.$": "$.getIdentity.attributes.samaccountname",
                                    "UPN.$": "$.getIdentity.attributes.upn",
                                    "displayName.$": "$.getIdentity.attributes.displayName",
                                    "managerFirstName.$": "$.getIdentity1.attributes.firstname",
                                    "oldManagerName.$": "$.trigger.changes[?(@.attribute=='managerFullName')].oldValue"
                                },
                                "from": null,
                                "recipientEmailList.$": "$.getIdentity1.attributes.email",
                                "subject": "Change of Manager for User/Changement de gestionnaire pour utilisateur: ${displayName}"
                            },
                            "description": "Send email to manager's manager.",
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 2
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$.changes[?(@.attribute == \"managerFullName\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "5f6203fb-c60b-45a2-b2ca-f4edd3cb8105",
                "name": "Template: Create a Security Group in Active Directory"
            },
            "object": {
                "id": "5f6203fb-c60b-45a2-b2ca-f4edd3cb8105",
                "name": "Template: Create a Security Group in Active Directory",
                "description": "This interactive workflow creates a new Active Directory security group.\n\nYou will be asked to provide some group details using an interactive form.",
                "created": "2025-02-05T16:37:34.944539831Z",
                "modified": "2025-02-05T16:37:34.944539831Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "c957ea5feed14a30a210111608c5e39d",
                    "name": "june.leung"
                },
                "definition": {
                    "start": "Interactive Form 3",
                    "steps": {
                        "Active Directory": {
                            "actionId": "sp:pag-active-directory",
                            "attributes": {},
                            "catch": [
                                {
                                    "next": "Interactive Message 16"
                                }
                            ],
                            "description": "The Privileged Action Gateway retrieves organizational units from Active Directory.\nThe directory location to search in and the depth of the search can be controlled using the Search Base DN and Search Scope inputs.",
                            "displayName": "PAG: Get Organizational Units",
                            "nextStep": "Compare Numbers",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Active Directory 1": {
                            "actionId": "sp:pag-active-directory",
                            "attributes": {},
                            "catch": [
                                {
                                    "next": "Interactive Message 4"
                                }
                            ],
                            "description": "The Privileged Action Gateway creates the new group using the details provided in the New Group Details interactive form.",
                            "displayName": "PAG: Create Group",
                            "nextStep": "Interactive Message 12",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Active Directory 3": {
                            "actionId": "sp:pag-active-directory",
                            "attributes": {},
                            "catch": [
                                {
                                    "next": "Interactive Message 8"
                                }
                            ],
                            "description": "The Privileged Action Gateway searches for groups in Active Directory with the same name as the one provided in the interactive form.",
                            "displayName": "PAG: Find Duplicate Groups",
                            "nextStep": "Compare Numbers 1",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Active Directory 4": {
                            "actionId": "sp:pag-active-directory",
                            "attributes": {},
                            "catch": [
                                {
                                    "next": "Interactive Message 11"
                                }
                            ],
                            "description": "The Privileged Action Gateway searches for the provided manager in Active Directory.\n\nThe manager is provided as an Identity Security Cloud identity, but the workflow needs the Active Directory account belonging to that identity to set them as the group's manager.",
                            "displayName": "PAG: Find Manager",
                            "nextStep": "Interactive Message",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Active Directory 5": {
                            "actionId": "sp:pag-active-directory",
                            "attributes": {},
                            "catch": [
                                {
                                    "next": "Interactive Message 13"
                                }
                            ],
                            "description": "The Privileged Action Gateway sets the group's manager in Active Directory.",
                            "displayName": "PAG: Set Group Manager",
                            "nextStep": "Verify Data Type 5",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Compare Numbers": {
                            "choiceList": [
                                {
                                    "comparator": "NumericGreaterThan",
                                    "nextStep": "Interactive Form",
                                    "variableA.$": "$.activeDirectory.result.count",
                                    "variableB": 0
                                }
                            ],
                            "defaultStep": "Interactive Message 15",
                            "description": "The search results are evaluated to determine if any organizational units were found in Active Directory. If one or more organizational units are found, it evaluates to True, otherwise False.",
                            "displayName": "Organizational Units Found?",
                            "type": "choice"
                        },
                        "Compare Numbers 1": {
                            "choiceList": [
                                {
                                    "comparator": "NumericEquals",
                                    "nextStep": "Interactive Message 6",
                                    "variableA.$": "$.activeDirectory3.result.count",
                                    "variableB": 0
                                }
                            ],
                            "defaultStep": "Interactive Message 9",
                            "description": "The provided group name is evaluated to determine if the name is available. If the group name is available, it evaluates to True, otherwise False.",
                            "displayName": "Group Name Available?",
                            "type": "choice"
                        },
                        "End Step - Failure": {
                            "description": "The workflow cannot continue as the group was not created. The workflow ends in a failed state.",
                            "displayName": "Failure: Create Group Failed",
                            "failureName": "Create Group Failed",
                            "type": "failure"
                        },
                        "End Step - Failure 1": {
                            "description": "The workflow could not continue as the provided manager does not have an account in Active Directory. The workflow ends in a failed state.",
                            "displayName": "Failure: Manager Not Found",
                            "failureName": "Manager Not Found",
                            "type": "failure"
                        },
                        "End Step - Failure 2": {
                            "description": "The workflow cannot continue as a command error occurred while searching for groups. The workflow ends in a failed state.",
                            "displayName": "Failure: Find Duplicate Groups",
                            "failureName": "No Groups Found",
                            "type": "failure"
                        },
                        "End Step - Failure 3": {
                            "description": "The workflow cannot continue as a group already exists with the provided name. The workflow ends in a failed state.\n\nThe user will need to launch the workflow again and provide a different name.",
                            "displayName": "Failure: Group Name Taken",
                            "failureName": "Group Name Taken",
                            "type": "failure"
                        },
                        "End Step - Failure 4": {
                            "description": "The workflow cannot continue as setting the group's manager failed. The workflow ends in a failed state.",
                            "displayName": "Failure: Set Manager Error",
                            "failureName": "Set Manager Error",
                            "type": "failure"
                        },
                        "End Step - Failure 5": {
                            "description": "The workflow cannot continue as no organizational units were found in Active Directory. The workflow ends in a failed state.",
                            "displayName": "Failure: No Organizational Units",
                            "failureName": "No Organizational Units Found",
                            "type": "failure"
                        },
                        "End Step - Failure 6": {
                            "description": "The workflow cannot continue as a command error occurred and no organizational units were found in Active Directory. The workflow ends in a failed state.",
                            "displayName": "Failure: List Organizational Units Error",
                            "failureName": "No Organizational Units Found",
                            "type": "failure"
                        },
                        "End Step - Success": {
                            "description": "The new group has been created and the manager has been set and notified. The workflow completed successfully.",
                            "displayName": "Success: Group Created",
                            "type": "success"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.interactiveForm.formData.managerIdentity",
                                "method": "GET",
                                "path": "v3/identities/{{ $.id }}",
                                "service": "mice"
                            },
                            "description": "The full identity of the manager provided in the New Group Details interactive form is retrieved.",
                            "displayName": "Get Manager Identity",
                            "nextStep": "Active Directory 4",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Interactive Form": {
                            "actionId": "sp:interactive-form",
                            "attributes": {
                                "formDefinitionId": "1b163bdf-4919-4828-96e6-d3b2e7603f2d",
                                "inputForForm": "{{ $.inputForForm }}",
                                "inputForForm_array_locations.$": "$.activeDirectory.result.data",
                                "inputForForm_array_locations_label": "$.ou",
                                "inputForForm_array_locations_value": "$.distinguishedName",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "New Group Details"
                            },
                            "description": "This interactive form allows the user to provide details about the new group.\n\nThe user will need to enter a name, group type, manager, and location.",
                            "displayName": "Form: Get Group Details",
                            "nextStep": "Interactive Message 2",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Form 1": {
                            "actionId": "sp:interactive-form",
                            "attributes": {
                                "formDefinitionId": "842ecc40-8b4b-48da-a94a-11cb6f0529df",
                                "inputForForm_comment": "Manager’s email not configured in Active Directory.",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "Notification Details Required"
                            },
                            "description": "This interactive form allows the user to provide the manager’s email address as their email was not configured in Active Directory.",
                            "displayName": "Form: Manager Email Address",
                            "nextStep": "Interactive Message 14",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Form 3": {
                            "actionId": "sp:interactive-form",
                            "attributes": {
                                "formDefinitionId": "96fb5489-b4cd-43af-9960-d898acc385bf",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "Introduction"
                            },
                            "description": "This interactive form explains the purpose of the workflow and what the user will need to do to complete it.",
                            "displayName": "Form: Introduction",
                            "nextStep": "Interactive Message 3",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "INFO",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>The new group is being created...</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "🔧  Creating Group"
                            },
                            "description": "This interactive message notifies the user that the workflow is currently creating the new group in Active Directory.",
                            "displayName": "Message: Creating Group",
                            "nextStep": "Active Directory 1",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 10": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "INFO",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>Sending email to {{ $.activeDirectory4.result.data.mail }}...</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "📨  Sending Manager Notification"
                            },
                            "description": "This interactive message notifies the user that the workflow is currently sending an email to the new group's manager.",
                            "displayName": "Message: Emailing Manager (AD)",
                            "nextStep": "Send Email",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 11": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "ERROR",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>Provided manager '{{ $.getIdentity.alias }}' could not be found on the target Active Directory domain.</p>\n<p>Detail Code: {{ $.activeDirectory4.error.detailCode }}</p>\n<p>Error: {{ $.activeDirectory4.error.message.text }}</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "Manager Not Found"
                            },
                            "description": "This interactive message notifies the user that an error has occurred as the manager could not be found in Active Directory.",
                            "displayName": "Message: Manager Not Found",
                            "nextStep": "End Step - Failure 1",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 12": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "INFO",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>Setting group manager to '{{ $.getIdentity.name }}'...</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "🔧  Setting Manager"
                            },
                            "description": "This interactive message notifies the user that the workflow is currently setting the group's manager in Active Directory.",
                            "displayName": "Message: Setting Group Manager",
                            "nextStep": "Active Directory 5",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 13": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "ERROR",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>Set Manager Failed.</p>\n<p>{{ $.activeDirectory5.error.detailCode }}</p>\n<p>{{ $.activeDirectory5.error.message.text }}</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "Setting Manager Failed"
                            },
                            "description": "This interactive message notifies the user that an error occurred, and setting the manager failed.",
                            "displayName": "Message: Setting Manager Failed",
                            "nextStep": "End Step - Failure 4",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 14": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "INFO",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>Sending email to {{ $.interactiveForm1.formData.managerEmailAddress }}...</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "📨  Sending Manager Notification"
                            },
                            "description": "This interactive message notifies the user that the workflow is currently sending an email to the new group's manager.",
                            "displayName": "Message: Emailing Manager (Form)",
                            "nextStep": "Send Email 1",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 15": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "ERROR",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>No organizational units were found in Active Directory.</p>\n<p>This may be due to the search base or scope defined in the action.</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "No Search Results"
                            },
                            "description": "This interactive message notifies the user that an error has occurred, which may be due to the selected search base or scope.",
                            "displayName": "Message: Empty Results",
                            "nextStep": "End Step - Failure 5",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 16": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "ERROR",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>No organizational units were found in Active Directory due to a command failure.</p>\n<p>Detail Code: {{ $.activeDirectory.error.detailCode }}</p>\n<p>Error: {{ $.activeDirectory.error.message.text }}</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "List Organizational Units Error"
                            },
                            "description": "This interactive message notifies the user that no organizational units were found due to a command error.",
                            "displayName": "Message: Get Organizational Units Failed",
                            "nextStep": "End Step - Failure 6",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 2": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "INFO",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>Checking whether the supplied group name is unique...</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "🔎  Validating Group Name"
                            },
                            "description": "This interactive message notifies the user that the workflow is currently looking for groups with the same name as the one provided in the interactive form.",
                            "displayName": "Message: Looking for Existing Group",
                            "nextStep": "Active Directory 3",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 3": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "INFO",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>Getting Organizational Units from Active Directory...</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "🔎  Getting Organizational Units"
                            },
                            "description": "This interactive message notifies the user that the workflow is currently retrieving organizational units from Active Directory.",
                            "displayName": "Message: Get Organizational Units",
                            "nextStep": "Active Directory",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 4": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "ERROR",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>Group creation failed.</p>\n<p>Detail Code : {{ $.activeDirectory1.error.detailCode }}</p>\n<p>Error : {{ $.activeDirectory1.error.message.text }}</p>\n<p>&nbsp;</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "Create Group Failed"
                            },
                            "description": "This interactive message notifies the user that an error occurred, and the new group was not created.",
                            "displayName": "Message: Create Group Failed",
                            "nextStep": "End Step - Failure",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 5": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "INFO",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>Looking for the supplied manager's user account in the Active Directory domain...</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "🔎  Locating Manager"
                            },
                            "description": "This interactive message notifies the user that the workflow is locating the provided manager’s account in Active Directory.",
                            "displayName": "Message: Locating Manager Account",
                            "nextStep": "Get Identity",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 6": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "INFO",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>The supplied group name is available.</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "✅  Group Name Available"
                            },
                            "description": "This interactive message notifies the user that the group name is available.",
                            "displayName": "Message: Group Name Available",
                            "nextStep": "Interactive Message 5",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 7": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "INFO",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p><strong>Name:&nbsp;</strong>{{ $.interactiveForm.formData.name }}</p>\n<p><strong>Type: </strong>{{ $.interactiveForm.formData.type }}</p>\n<p><strong>Manager: </strong>{{ $.activeDirectory4.result.data.sAMAccountName }}</p>\n<p><strong>Location: </strong>CN={{ $.interactiveForm.formData.name }},{{ $.interactiveForm.formData.organizationalUnit }}</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "📋  New Group Details"
                            },
                            "description": "This interactive message displays the new group’s details to the user.",
                            "displayName": "Message: Display New Group",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 8": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "ERROR",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>No groups were found in Active Directory due to a command failure.</p>\n<p>Detail Code: {{ $.activeDirectory3.error.detailCode }}</p>\n<p>Error: {{ $.activeDirectory3.error.message.text }}</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "Find Duplicate Groups Error"
                            },
                            "description": "This interactive message notifies the user that the privileged action gateway failed to search for groups.",
                            "displayName": "Message: Find Duplicate Groups Error",
                            "nextStep": "End Step - Failure 2",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Interactive Message 9": {
                            "actionId": "sp:interactive-message",
                            "attributes": {
                                "category": "ERROR",
                                "interactiveProcessId.$": "$.trigger.interactiveProcessId",
                                "message": "<p>Found an existing group named '{{ $.interactiveForm.formData.name }}'.</p>\n<p>Please launch the workflow again &amp; supply a different name.</p>",
                                "ownerId.$": "$.trigger.launchedBy.id",
                                "title": "Group Name Taken"
                            },
                            "description": "This interactive message notifies the user that an error has occurred as the provided group name is already taken.\n\nThe user will need to run the workflow again and provide a different name.",
                            "displayName": "Message: Group Name Taken",
                            "nextStep": "End Step - Failure 3",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<div>\n<div>You have been assigned as the manager of a new group.</div>\n<div>&nbsp;</div>\n<div>Name: {{ $.interactiveForm.formData.name }}</div>\n<div>&nbsp;</div>\n<div>Type: {{ $.interactiveForm.formData.type }}</div>\n<div>&nbsp;</div>\n<div>Location: CN={{ $.interactiveForm.formData.name }},{{ $.interactiveForm.formData.organizationalUnit }}</div>\n</div>",
                                "context": null,
                                "from": null,
                                "method": "POST",
                                "path": "notification/send-notification",
                                "recipientEmailList.$": "$.activeDirectory4.result.data.mail",
                                "replyTo": null,
                                "service": "hermes",
                                "subject": "New Group Created",
                                "useInternalClient": true
                            },
                            "description": "An email is sent to the group’s manager notifying them they have been assigned as the manager of the new group. The email also contains the new group’s details.",
                            "displayName": "Send Manager Email (AD)",
                            "nextStep": "Interactive Message 7",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email 1": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<div>You have been assigned as the manager of a new group.</div>\n<div>&nbsp;</div>\n<div>Name: {{ $.interactiveForm.formData.name }}</div>\n<div>&nbsp;</div>\n<div>Type: {{ $.interactiveForm.formData.type }}</div>\n<div>&nbsp;</div>\n<div>Location: CN={{ $.interactiveForm.formData.name }},{{ $.interactiveForm.formData.organizationalUnit }}</div>",
                                "context": null,
                                "from": null,
                                "method": "POST",
                                "path": "notification/send-notification",
                                "recipientEmailList.$": "$.interactiveForm1.formData.managerEmailAddress",
                                "replyTo": null,
                                "service": "hermes",
                                "subject": "New Group Created",
                                "useInternalClient": true
                            },
                            "description": "An email is sent to the group’s manager notifying them they have been assigned as the manager of the new group. The email also contains the new group’s details.",
                            "displayName": "Send Manager Email (Form)",
                            "nextStep": "Interactive Message 7",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Verify Data Type 5": {
                            "choiceList": [
                                {
                                    "comparator": "IsNull",
                                    "nextStep": "Interactive Form 1",
                                    "variableA.$": "$.activeDirectory4.result.data.mail"
                                }
                            ],
                            "defaultStep": "Interactive Message 10",
                            "description": "The manager’s Active Directory account is evaluated to determine if their email address is empty. If their email address is not configured, it evaluates to True, otherwise False.",
                            "displayName": "Is Manager Email Empty?",
                            "type": "choice"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "c957ea5feed14a30a210111608c5e39d",
                    "name": "june.leung"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "c957ea5feed14a30a210111608c5e39d",
                    "name": "june.leung"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$[?(@.workflowId == '5f6203fb-c60b-45a2-b2ca-f4edd3cb8105')]",
                        "id": "idn:interactive-process-launched"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "252efffa-e162-4bfe-a3c6-cbe77e47ccc1",
                "name": "Notification Leaver"
            },
            "object": {
                "id": "252efffa-e162-4bfe-a3c6-cbe77e47ccc1",
                "name": "Notification Leaver",
                "description": "Lifecycle state changed to terminated",
                "created": "2024-11-06T15:24:37.668947859Z",
                "modified": "2025-02-03T13:25:48.426907748Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "Compare Strings",
                    "steps": {
                        "Compare Strings": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Get Identity",
                                    "variableA.$": "$.trigger.changes[?(@.attribute=='cloudLifecycleState')].newValue",
                                    "variableB": "terminated"
                                }
                            ],
                            "defaultStep": "success",
                            "description": "Suspended?",
                            "type": "choice"
                        },
                        "Compare Strings 1": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Send Email 1",
                                    "variableA.$": "$.getIdentity.attributes.userType",
                                    "variableB": "Advisor"
                                }
                            ],
                            "defaultStep": "Get Identity 1",
                            "description": "Check if an advisor, they don't have a manager so we have to handle differently",
                            "type": "choice"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "description": "Get Identity Information",
                            "nextStep": "Compare Strings 1",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Get Identity 1": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.getIdentity.managerRef.id"
                            },
                            "description": "Get Manager Identity Information for email",
                            "nextStep": "Send Email",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear ${managerFirstName} ${managerLastName},<br><br>All system access has been disabled and all application accounts will be deleted in 21 days for: <br><br>Name: ${firstName} ${lastName}<br>Username: ${sAMAccountName}<br><br>If this was processed in error, please contact the IGM Service Desk.<br><br>IGM Service Desk <br>Mon &ndash; Fri 7:30 am to 7:30 pm ET<br>Phone Number: 1-800-661-2040<br>SNAP Portal &ndash; Live Chat / Get Help<br>https://igmfinancial.service-now.com/snap<br><br>This is a system-generated email. Please do not respond to this email.<br><br><br>Bonjour ${managerFirstName} ${managerLastName},<br><br>Tous les acc&egrave;s au syst&egrave;me ont &eacute;t&eacute; d&eacute;sactiv&eacute;s et tous les comptes d&rsquo;application seront supprim&eacute;s dans un d&eacute;lai de 21 jours pour : <br><br>Nom : ${firstName} ${lastName}<br>Nom d&rsquo;utilisateur : ${sAMAccountName}<br><br>Si le retrait a &eacute;t&eacute; op&eacute;r&eacute; par erreur, veuillez communiquer avec le Bureau des services technologiques d&rsquo;IGM. <br><br>Bureau des services technologiques d&rsquo;IGM <br>Lundi au vendredi de 7 h 30 &agrave; 19 h 30 (HE) <br>Num&eacute;ro de t&eacute;l&eacute;phone : 1-800-661-2040 <br>Portail SNAP/Clavardage en direct/Aide <br>https://igmfinancial.service-now.com/snap<br><br>Ce courriel a &eacute;t&eacute; produit par le syst&egrave;me. Veuillez ne pas y r&eacute;pondre.</p>",
                                "context": {
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "managerFirstName.$": "$.getIdentity1.attributes.firstname",
                                    "managerLastName.$": "$.getIdentity1.attributes.lastname",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname"
                                },
                                "from": null,
                                "recipientEmailList.$": "$.getIdentity1.attributes.email",
                                "replyTo": "",
                                "subject": "Offboarding Complete for ${firstName} ${lastName} / Retrait d’utilisateur effectué pour ${firstName} ${lastName}"
                            },
                            "description": "Send email to manager",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email 1": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear Field Network Administration,<br><br>All system access has been disabled and all application accounts will be deleted in 21 days for: <br><br>Name: ${firstName} ${lastName}<br>Username: ${sAMAccountName}<br><br>If this was processed in error, please contact the IGM Service Desk.<br><br>IGM Service Desk <br>Mon &ndash; Fri 7:30 am to 7:30 pm ET<br>Phone Number: 1-800-661-2040<br>SNAP Portal &ndash; Live Chat / Get Help<br>https://igmfinancial.service-now.com/snap<br><br>This is a system-generated email. Please do not respond to this email.<br><br><br>Bonjour Field Network Administration,<br><br>Tous les acc&egrave;s au syst&egrave;me ont &eacute;t&eacute; d&eacute;sactiv&eacute;s et tous les comptes d&rsquo;application seront supprim&eacute;s dans un d&eacute;lai de 21 jours pour : <br><br>Nom : ${firstName} ${lastName}<br>Nom d&rsquo;utilisateur : ${sAMAccountName}<br><br>Si le retrait a &eacute;t&eacute; op&eacute;r&eacute; par erreur, veuillez communiquer avec le Bureau des services technologiques d&rsquo;IGM. <br><br>Bureau des services technologiques d&rsquo;IGM <br>Lundi au vendredi de 7 h 30 &agrave; 19 h 30 (HE) <br>Num&eacute;ro de t&eacute;l&eacute;phone : 1-800-661-2040 <br>Portail SNAP/Clavardage en direct/Aide <br>https://igmfinancial.service-now.com/snap<br><br>Ce courriel a &eacute;t&eacute; produit par le syst&egrave;me. Veuillez ne pas y r&eacute;pondre.</p>",
                                "context": {
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname"
                                },
                                "recipientEmailList": [
                                    "fieldnetworkadministration@ig.ca"
                                ],
                                "subject": "Offboarding Complete for ${firstName} ${lastName} / Retrait d’utilisateur effectué pour ${firstName} ${lastName}"
                            },
                            "description": "Email for Advisors goes to Field Network Administration",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "success": {
                            "description": null,
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "description": "Lifecycle State is terminated",
                        "filter.$": "$.changes[?(@.attribute == \"cloudLifecycleState\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "4e5638d2-32dc-42cb-a701-3517b9c4c296",
                "name": "Copy of Mover Advisor IAM Ops Notification"
            },
            "object": {
                "id": "4e5638d2-32dc-42cb-a701-3517b9c4c296",
                "name": "Copy of Mover Advisor IAM Ops Notification",
                "description": "Joiner Advisor IAM Ops Notification",
                "created": "2025-01-14T15:57:50.258954921Z",
                "modified": "2025-01-14T15:57:50.258954921Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "Get Identity",
                    "steps": {
                        "Compare Strings": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "success",
                                    "variableA.$": "$.getIdentity.attributes.cloudLifecycleState",
                                    "variableB": "Terminated"
                                }
                            ],
                            "defaultStep": "Compare Strings 1",
                            "description": "Check if identity was terminated. Since termination changes subscription indicatior as well",
                            "type": "choice"
                        },
                        "Compare Strings 1": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Send Email 1",
                                    "variableA.$": "$.getIdentity.attributes.userType",
                                    "variableB": "Advisor"
                                }
                            ],
                            "defaultStep": "success",
                            "description": "Check if identity is an Advisor",
                            "type": "choice"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "description": "Get Identity Information",
                            "nextStep": "Compare Strings",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email 1": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "IAM Ops,<br>\n<br>\nChanges have been made to an Advisor identity. Please reference the details below to provision and deprovision appropriate access for this event.<br>\n<br>\nEvent Type: MOVER<br>\nShort Description: MOVER - ${userType} - ${sAMAccountName}<br>\nName: ${firstName} ${lastName}<br>\nUser Type: ${userType}<br>\nStart Date: ${startDate}<br>\nLanguage: ${language}<br>\nManager: ${manager}<br>\nCompany: ${company}<br>\nWork Location: ${street}, ${city}, ${postalCode}, ${country}<br>\n<br>\n<br>\nChanges (If dollar sign and curly brackets appears, there was no change to the attribute) :<br><br>\nFirst Name Old Value:  ${oldFirst}<br>   \nFirst Name New Value:  ${newFirst}<br><br>\nLast Name Old Value:  ${oldLast}<br>   \nLastName New Value:  ${newLast}<br><br>\nDepartment Old Value:  ${oldDep}<br>   \nDepartment New Value:  ${newDep}<br><br>\nSubscription Indicator Old Value:  ${oldSub}<br>\nSubscription Indicator New Value:  ${newSub}<br><br>\nTitle Old Value:  ${oldTitle}<br>\nTitle New Value:  ${newTitle}<br><br>\nRep Relationships Old Value:  ${oldRep}<br>\nRep Relationships New Value:  ${newRep}<br><br>\nRGOFNAME Old Value:  ${oldRgofname}<br>\nRGOFNAME New Value:  ${newRgofname}<br><br>\nRGOFNO Old Value:  ${oldRgofno}<br>\nRGOFNO New Value:  ${newRgofno}<br><br>\nLanguage Old Value:  ${oldLanguage}<br>\nLanguage New Value:  ${newLanguage}<br><br>\n<br>\nThis is a system-generated email. Please do not respond to this email.",
                                "context": {
                                    "city.$": "$.getIdentity.attributes.city",
                                    "company.$": "$.getIdentity.attributes.company",
                                    "country.$": "$.getIdentity.attributes.country",
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "language.$": "$.getIdentity.attributes.language",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "manager.$": "$.getIdentity.managerRef.name",
                                    "newDep.$": "$.trigger.changes[?(@.attribute=='department')].newValue",
                                    "newFirst.$": "$.trigger.changes[?(@.attribute=='firstname')].newValue",
                                    "newLast.$": "$.trigger.changes[?(@.attribute=='lastname')].newValue",
                                    "newRep.$": "$.trigger.changes[?(@.attribute=='repRelationships')].newValue",
                                    "newSub.$": "$.trigger.changes[?(@.attribute=='subscriptionIndicator')].newValue",
                                    "newTitle.$": "$.trigger.changes[?(@.attribute=='title')].newValue",
                                    "oldDep.$": "$.trigger.changes[?(@.attribute=='department')].oldValue",
                                    "oldFirst.$": "$.trigger.changes[?(@.attribute=='firstname')].oldValue",
                                    "oldLast.$": "$.trigger.changes[?(@.attribute=='lastname')].oldValue",
                                    "oldRep.$": "$.trigger.changes[?(@.attribute=='repRelationships')].oldValue",
                                    "oldSub.$": "$.trigger.changes[?(@.attribute=='subscriptionIndicator')].oldValue",
                                    "oldTitle.$": "$.trigger.changes[?(@.attribute=='title')].oldValue",
                                    "postalCode.$": "$.getIdentity.attributes.postalCode",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname",
                                    "startDate.$": "$.getIdentity.attributes.startDate",
                                    "street.$": "$.getIdentity.attributes.street",
                                    "userType.$": "$.getIdentity.attributes.userType"
                                },
                                "from": null,
                                "recipientEmailList": [
                                    "igmfinancialtest@service-now.com",
                                    "iamops@igmfinancial.com"
                                ],
                                "replyTo": null,
                                "subject": "Mover - Advisor - ${firstName} ${lastName}"
                            },
                            "description": "Advisor mover event notification for IAM Ops team",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "success": {
                            "description": null,
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "description": "Need to check if department, subscription indicator, or job title changed",
                        "filter.$": "$.changes[?(@.attribute == \"department\" || @.attribute == \"subscriptionIndicator\" || @.attribute == \"title\" || @.attribute == \"firstname\" || @.attribute == \"lastname\" || @.attribute == \"repRelationships\" || @.attribute == \"rgofname\" || @.attribute == \"rgofno\" || @.attribute == \"language\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "86ebfc58-213a-4c32-9170-5e5169aebd19",
                "name": "Copy of Manager Change Notification for Contractors"
            },
            "object": {
                "id": "86ebfc58-213a-4c32-9170-5e5169aebd19",
                "name": "Copy of Manager Change Notification for Contractors",
                "description": "This workflow sends an email notification to the new manager of a Contractor, in an event of manager change.",
                "created": "2024-09-23T18:54:52.900145537Z",
                "modified": "2024-11-12T21:38:28.548508838Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "definition": {
                    "start": "Compare Strings 1",
                    "steps": {
                        "Compare Strings": {
                            "choiceList": [
                                {
                                    "comparator": "StringMatches",
                                    "nextStep": "Get Identity 1",
                                    "variableA.$": "$.defineVariable.userType",
                                    "variableB.$": "$.getIdentity.attributes.userType"
                                }
                            ],
                            "defaultStep": "End Step - Success",
                            "displayName": "",
                            "type": "choice"
                        },
                        "Compare Strings 1": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "End Step - Success",
                                    "variableA.$": "$.trigger.changes[?(@.attribute=='managerFullName')].oldValue",
                                    "variableB": "None"
                                }
                            ],
                            "defaultStep": "Get Identity",
                            "displayName": "",
                            "type": "choice"
                        },
                        "Compare Strings 2": {
                            "choiceList": [
                                {
                                    "comparator": "StringContains",
                                    "nextStep": "Send Email",
                                    "variableA.$": "$.defineVariable.newManagerLCS",
                                    "variableB.$": "$.getIdentity1.attributes.cloudLifecycleState"
                                }
                            ],
                            "defaultStep": "Send Email 1",
                            "displayName": "",
                            "type": "choice"
                        },
                        "Define Variable": {
                            "attributes": {
                                "id": "sp:define-variable",
                                "variables": [
                                    {
                                        "description": "",
                                        "name": "userType",
                                        "transforms": [],
                                        "variableA": "Contractor"
                                    },
                                    {
                                        "description": "",
                                        "name": "newManagerLCS",
                                        "transforms": [],
                                        "variableA": "active,prehire"
                                    }
                                ]
                            },
                            "displayName": "",
                            "nextStep": "Compare Strings",
                            "type": "Mutation"
                        },
                        "End Step - Success": {
                            "displayName": "",
                            "type": "success"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "displayName": "",
                            "nextStep": "Define Variable",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Get Identity 1": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.getIdentity.managerRef.id"
                            },
                            "description": "Get Manager Identity Information",
                            "displayName": "",
                            "nextStep": "Compare Strings 2",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear ${managerFirstName},<br><br></p>\n<p class=\"MsoNormal\">You have been assigned as the Manager for the following user:</p>\n<p class=\"MsoNormal\"><strong>Display Name:&nbsp;</strong>${displayName}<br><strong>sAMAccountName</strong>: ${AccountName}<br><strong>UPN</strong>: ${UPN}<br><br>This transfer was triggered by the offboarding of the previously assigned manager, ${oldManagerName}, or by a SNAP Request approved by ${oldManagerName}.&nbsp;</p>\n<p class=\"MsoNormal\"><br>If you wish to update the manager for this user to a different person, please follow the instructions in the link below to submit a SNAP request.<br><br></p>\n<p class=\"MsoNormal\"><strong><a href=\"https://can01.safelinks.protection.outlook.com/?url=https%3A%2F%2Figmfinancial.service-now.com%2Fsnap%3Fid%3Dkb_article_view%26sysparm_article%3DKB0015599&amp;data=05%7C02%7CJyoti.Gupta%40IGMFinancial.com%7Ca730246b12074bd17ba408dcbe354c5c%7Cdc411c631f524491bb51c4d215a1de23%7C0%7C0%7C638594383320646865%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&amp;sdata=zPvA%2Fa9eFkPr%2BACi1tOHF%2B1pyzbPr5IYK7i9Af5iSyE%3D&amp;reserved=0\" target=\"_blank\" rel=\"noopener noreferrer\">IGM -SNAP-How to Update Employee or Contractor User Account</a></strong></p>\n<p class=\"MsoNormal\"><br>This is a system-generated email. Please do not respond to this email.</p>\n<p>Bonjour ${managerFirstName},<br><br></p>\n<p class=\"MsoNormal\">On vous a d&eacute;sign&eacute;(e) comme gestionnaire de l&rsquo;utilisateur suivant :</p>\n<p class=\"MsoNormal\"><strong>Nom affich&eacute; &nbsp;</strong>: ${displayName}<br><strong>Nom d&rsquo;utilisateur</strong>: ${AccountName}<br><strong>UPN</strong>: ${UPN}<br><br>Ce transfert a &eacute;t&eacute; d&eacute;clench&eacute; par le d&eacute;part de l&rsquo;ancien(ne) gestionnaire assign&eacute;(e), ${oldManagerName}, ou fait suite &agrave; une demande SNAP approuv&eacute;e par ${oldManagerName}.&nbsp;</p>\n<p class=\"MsoNormal\"><br>Si vous souhaitez faire un changement de gestionnaire pour cet utilisateur, veuillez soumettre une demande SNAP en suivant les instructions accessibles par le lien ci-dessous.<br><br></p>\n<p class=\"MsoNormal\"><strong><a href=\"https://igmfinancial.service-now.com/kb_view.do?sysparm_article=KB0016562\" target=\"_blank\" rel=\"noopener noreferrer\">Portail SNAP d&rsquo;IGM &ndash; Proc&eacute;dure de mise &agrave; jour du compte d&rsquo;utilisateur d&rsquo;un(e) employ&eacute;(e) ou d&rsquo;un(e) employ&eacute;(e) contractuel(le)</a></strong></p>\n<p class=\"MsoNormal\"><br>Ce courriel a &eacute;t&eacute; produit par le syst&egrave;me. Veuillez ne pas y r&eacute;pondre.</p>",
                                "context": {
                                    "AccountName.$": "$.getIdentity.attributes.samaccountname",
                                    "UPN.$": "$.getIdentity.attributes.upn",
                                    "displayName.$": "$.getIdentity.attributes.displayName",
                                    "managerFirstName.$": "$.getIdentity1.attributes.firstname",
                                    "oldManagerName.$": "$.trigger.changes[?(@.attribute=='managerFullName')].oldValue"
                                },
                                "from": null,
                                "recipientEmailList.$": "$.getIdentity1.attributes.email",
                                "subject": "Change of Manager for User/Changement de gestionnaire pour utilisateur: ${displayName}"
                            },
                            "description": "Send email to manager's manager.",
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email 1": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear Recepient,</p>\n<p>The automated Manager assignment logic in SailPoint has failed for the following Contractor Identity:</p>\n<p>Display Name: ${displayName}<br>sAMAccountName: ${AccountName}<br>UPN: ${UPN}</p>\n<p class=\"MsoNormal\"><span style=\"mso-fareast-language: EN-US;\">The Manager assigned in the ServiceNowAPI source record and this Manager&rsquo;s Manager are both Terminated/Deleted/Suspended.</span></p>\n<p class=\"MsoNormal\"><span style=\"mso-fareast-language: EN-US;\">&nbsp;</span><span style=\"mso-fareast-language: EN-US;\">Action Required: Open an Incident and follow up with the Contractor to identify their current Manager and confirm this with the Manager before updating the ServiceNowAPI source to reflect this change.</span></p>\n<p>This is a system-generated email. Please do not respond to this email.</p>",
                                "context": {
                                    "AccountName.$": "$.getIdentity.attributes.samaccountname",
                                    "UPN.$": "$.getIdentity.attributes.upn",
                                    "displayName.$": "$.getIdentity.attributes.displayName",
                                    "managerFirstName.$": "$.getIdentity1.attributes.firstname",
                                    "oldManagerName.$": "$.trigger.changes[?(@.attribute=='managerFullName')].oldValue"
                                },
                                "from": null,
                                "recipientEmailList": [
                                    "igmsailpointsandboxnotifications@igmfinancial.com"
                                ],
                                "replyTo": null,
                                "subject": "Action Required - Update Manager for Contractor Identity:  ${displayName}"
                            },
                            "description": null,
                            "displayName": "",
                            "nextStep": "End Step - Success",
                            "type": "action",
                            "versionNumber": 2
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$.changes[?(@.attribute == \"managerFullName\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "885f7ebf-2b8b-4ef1-a021-7108c35eb11b",
                "name": "Copy of Certification Campaign Escalation 2"
            },
            "object": {
                "id": "885f7ebf-2b8b-4ef1-a021-7108c35eb11b",
                "name": "Copy of Certification Campaign Escalation 2",
                "description": "Certification Campaign second Escalation Email",
                "created": "2024-09-11T18:45:02.262218642Z",
                "modified": "2024-11-12T16:53:15.092772924Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "definition": {
                    "start": "Define Variable",
                    "steps": {
                        "Define Variable": {
                            "attributes": {
                                "id": "sp:define-variable",
                                "variables": [
                                    {
                                        "description": "",
                                        "name": "campaignStartDate",
                                        "transforms": [
                                            {
                                                "id": "sp:transform:substring:string",
                                                "input": {
                                                    "length": 10,
                                                    "start": 0
                                                }
                                            }
                                        ],
                                        "variableA.$": "$.now()"
                                    }
                                ]
                            },
                            "displayName": "",
                            "nextStep": "Wait",
                            "type": "Mutation"
                        },
                        "End Step - Success 1": {
                            "displayName": "",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "method": "get",
                                "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                "oAuthClientSecret": "$.secrets.64a0123c-d622-43f6-a123-d96c936867cb",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "url": "https://igmfinancial-uat.api.identitynow.com/v3/certifications",
                                "urlParams": {
                                    "filters": "(campaign.id eq \"{{$.trigger.campaign.id}}\") and (phase eq \"ACTIVE\")"
                                }
                            },
                            "displayName": "",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$.defineVariable.campaignStartDate",
                                "input.$": "$.hTTPRequest.body",
                                "start": "Define Variable 1",
                                "steps": {
                                    "Compare Strings": {
                                        "choiceList": [
                                            {
                                                "comparator": "StringMatches",
                                                "nextStep": "End Step - Success",
                                                "variableA.$": "$.defineVariable1.excludedTitles",
                                                "variableB.$": "$.getIdentity1.attributes.title"
                                            }
                                        ],
                                        "defaultStep": "Get Identity 2",
                                        "displayName": "",
                                        "type": "choice"
                                    },
                                    "Compare Strings 1": {
                                        "choiceList": [
                                            {
                                                "comparator": "StringMatches",
                                                "nextStep": "End Step - Success",
                                                "variableA.$": "$.defineVariable1.excludedTitles",
                                                "variableB.$": "$.getIdentity2.attributes.title"
                                            }
                                        ],
                                        "defaultStep": "Send Email",
                                        "displayName": "",
                                        "type": "choice"
                                    },
                                    "Define Variable 1": {
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "excludedTitles",
                                                    "transforms": [],
                                                    "variableA": "President & CEO IGM,President & CEO IGWM,President & CEO MFC,EVP & Chief Financial Officer,EVP & Chief HR Officer - IGM,EVP & Chief Information Officer,EVP & Chief Risk Officer,EVP Chief Marketing Officer,EVP General Counsel,EVP Products and Solutions,President, IGM Financial, QuÃ©bec,CIO Fixed Income & MAS,CIO Equities,Chief Investment Strategist,Vice Chair of IG Wealth Management,Head of Process Design,Head of Mortgage, Insurance, and Banking,Head of Investment Solutions,Head of Financial Planning,Head of Compliance,Head of Client Experience"
                                                },
                                                {
                                                    "description": "",
                                                    "name": "campaignEndDate",
                                                    "transforms": [
                                                        {
                                                            "id": "sp:transform:addTime:time",
                                                            "input": {
                                                                "length": 5,
                                                                "unit": "days"
                                                            }
                                                        },
                                                        {
                                                            "id": "sp:transform:substring:string",
                                                            "input": {
                                                                "length": 10,
                                                                "start": 0
                                                            }
                                                        }
                                                    ],
                                                    "variableA.$": "$.now()"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "Get Identity",
                                        "type": "Mutation"
                                    },
                                    "End Step - Success": {
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "Get Identity": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.reviewer.id"
                                        },
                                        "displayName": "",
                                        "nextStep": "Get Identity 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Get Identity 1": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.getIdentity.managerRef.id"
                                        },
                                        "displayName": "",
                                        "nextStep": "Compare Strings",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Get Identity 2": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.getIdentity1.managerRef.id"
                                        },
                                        "displayName": "",
                                        "nextStep": "Compare Strings 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<p>Hi ${twoUpManagerFirstName},<br><br>The <strong>${campaignName}</strong> was initiated on ${campaignStartDate}, and we have since sent three reminders to&nbsp;<strong>${firstName} ${lastName}</strong> and asked their manager for assistance last week. The certification campaign is scheduled to end on ${campaignEndDate} at 5pm EST.<br><br>We are seeking your assistance to ensure ${firstName} ${lastName} completes their certification as soon as possible.<br><br>If the reviewer is on vacation or on leave and won&rsquo;t be able to complete the certification, please open a <a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=3f1dd0320a0a0b99000a53f7604a2ef9\">SNAP incident</a> to have the certification reassigned by the IAM Operations team. Include the name of the individual whose certification requires reassignment and the name of the individual to reassign it to.<br><br>We appreciate your help in reminding the reviewer of the importance of completing the mandatory certification to comply with our security standards. <br><br><strong>Note: Upon the closure of the campaign, all unreviewed access will be deemed not required and will be revoked. To avoid your team member's access being revoked, please ensure ${firstName} ${lastName} completes the attestation prior to the ${campaignEndDate} at 5pm EST.</strong><br><br>To learn more about certification campaigns, please click <a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&amp;sysparm_article=KB0016063\">here</a> to review the Access Certification Overview and FAQ. <br><br>Thank you!<br>IAM Operations Team</p>",
                                            "context": {
                                                "campaignEndDate.$": "$.defineVariable1.campaignEndDate",
                                                "campaignName.$": "$.loop.loopInput.campaign.name",
                                                "campaignStartDate.$": "$.loop.context",
                                                "firstName.$": "$.getIdentity.attributes.firstname",
                                                "lastName.$": "$.getIdentity.attributes.lastname",
                                                "managerFirstName.$": "$.getIdentity1.attributes.firstname",
                                                "twoUpManagerFirstName.$": "$.getIdentity2.attributes.firstname"
                                            },
                                            "from": "",
                                            "recipientEmailList": [
                                                "{{$.getIdentity2.attributes.email}}",
                                                "{{$.getIdentity1.attributes.email}}",
                                                "{{$.getIdentity.attributes.email}}"
                                            ],
                                            "subject": "Action Required:  Final Reminder - ${campaignName}"
                                        },
                                        "displayName": "",
                                        "nextStep": "End Step - Success",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success 1",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Wait": {
                            "actionId": "sp:sleep",
                            "attributes": {
                                "duration": "1m",
                                "type": "waitFor"
                            },
                            "displayName": "",
                            "nextStep": "HTTP Request",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "id": "idn:campaign-activated"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "73275c30-c1ef-4ca3-8760-5c571ee8ff95",
                "name": "Notification Leaver-backup"
            },
            "object": {
                "id": "73275c30-c1ef-4ca3-8760-5c571ee8ff95",
                "name": "Notification Leaver-backup",
                "description": "Lifecycle state changed to terminated",
                "created": "2024-11-05T18:38:06.559638695Z",
                "modified": "2024-11-06T15:22:55.32079487Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "Compare Strings",
                    "steps": {
                        "Compare Strings": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Get Identity 2",
                                    "variableA.$": "$.trigger.changes[?(@.attribute=='cloudLifecycleState')].newValue",
                                    "variableB": "terminated"
                                }
                            ],
                            "defaultStep": "success",
                            "description": "Suspended?",
                            "type": "choice"
                        },
                        "Compare Strings 1": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Send Email 1",
                                    "variableA.$": "$.getIdentity.attributes.userType",
                                    "variableB": "Advisor"
                                }
                            ],
                            "defaultStep": "Get Identity 1",
                            "description": "Check if an advisor, they don't have a manager so we have to handle differently",
                            "type": "choice"
                        },
                        "Get Identity 1": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.getIdentity.managerRef.id"
                            },
                            "description": "Get Manager Identity Information for email",
                            "nextStep": "Send Email",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Get Identity 2": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "description": "Get Identity Information",
                            "displayName": "",
                            "nextStep": "Compare Strings 1",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear ${managerFirstName} ${managerLastName},<br><br>All system access has been disabled and all application accounts will be deleted in 21 days for: <br><br>Name: ${firstName} ${lastName}<br>Username: ${sAMAccountName}<br><br>If this was processed in error, please contact the IGM Service Desk.<br><br>IGM Service Desk <br>Mon &ndash; Fri 7:30 am to 7:30 pm ET<br>Phone Number: 1-800-661-2040<br>SNAP Portal &ndash; Live Chat / Get Help<br>https://igmfinancial.service-now.com/snap<br><br>This is a system-generated email. Please do not respond to this email.<br><br><br>Bonjour ${managerFirstName} ${managerLastName},<br><br>Tous les acc&egrave;s au syst&egrave;me ont &eacute;t&eacute; d&eacute;sactiv&eacute;s et tous les comptes d&rsquo;application seront supprim&eacute;s dans un d&eacute;lai de 21 jours pour : <br><br>Nom : ${firstName} ${lastName}<br>Nom d&rsquo;utilisateur : ${sAMAccountName}<br><br>Si le retrait a &eacute;t&eacute; op&eacute;r&eacute; par erreur, veuillez communiquer avec le Bureau des services technologiques d&rsquo;IGM. <br><br>Bureau des services technologiques d&rsquo;IGM <br>Lundi au vendredi de 7 h 30 &agrave; 19 h 30 (HE) <br>Num&eacute;ro de t&eacute;l&eacute;phone : 1-800-661-2040 <br>Portail SNAP/Clavardage en direct/Aide <br>https://igmfinancial.service-now.com/snap&nbsp;<br><br>Ce courriel a &eacute;t&eacute; produit par le syst&egrave;me. Veuillez ne pas y r&eacute;pondre.</p>",
                                "context": {
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "managerFirstName.$": "$.getIdentity1.attributes.firstname",
                                    "managerLastName.$": "$.getIdentity1.attributes.lastname",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname"
                                },
                                "from": null,
                                "recipientEmailList.$": "$.getIdentity1.attributes.email",
                                "replyTo": "",
                                "subject": "Offboarding Complete for ${firstName} ${lastName} / Retrait d’utilisateur effectué pour ${firstName} ${lastName}"
                            },
                            "description": "Send email to manager",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email 1": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "Dear Field Network Administration,<br>\n<br>\nAll system access has been disabled and all application accounts will be deleted in 21 days for: <br>\n<br>\nName:  ${firstName} ${lastName}<br>\nUsername: ${sAMAccountName}<br>\n<br>\nIf this was processed in error, please contact the IGM Service Desk.<br><br>  \nIGM Service Desk <br>\nMon – Fri 7:30 am to 7:30 pm ET<br>\nPhone Number: 1-800-661-2040<br> \nSNAP Portal – Live Chat / Get Help<br>\nhttps://igmfinancial.service-now.com/SNAP<br>\n<br>\nThis is a system-generated email. Please do not respond to this email.<br>\n<br>\n<br>\nBonjour Field Network Administration,<br>\n<br>\nTous les accès au système ont été désactivés et tous les comptes d’application seront supprimés dans un délai de 21 jours pour :  <br>\n<br>\nNom :  ${firstName} ${lastName}<br>\nNom d’utilisateur : ${sAMAccountName}<br>\n<br> \nSi le retrait a été opéré par erreur, veuillez communiquer avec le Bureau des services technologiques d’IGM. <br>\n<br> \nBureau des services technologiques d’IGM <br> \nLundi au vendredi de 7 h 30 à 19 h 30 (HE) <br>\nNuméro de téléphone : 1-800-661-2040 <br>\nPortail SNAP/Clavardage en direct/Aide <br>\nhttps://igmfinancial.service-now.com/SNAP <br>\n<br> \nCe courriel a été produit par le système. Veuillez ne pas y répondre.",
                                "context": {
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname"
                                },
                                "recipientEmailList": [
                                    "fieldnetworkadministration@ig.ca"
                                ],
                                "subject": "Offboarding Complete for ${firstName} ${lastName} / Retrait d’utilisateur effectué pour ${firstName} ${lastName}"
                            },
                            "description": "Email for Advisors goes to Field Network Administration",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "success": {
                            "description": null,
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "description": "Lifecycle State is terminated",
                        "filter.$": "$.changes[?(@.attribute == \"cloudLifecycleState\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "c24a8553-be7a-4e14-85bb-5d7d68f672d7",
                "name": "Copy of Certification Campaign Escalation 1"
            },
            "object": {
                "id": "c24a8553-be7a-4e14-85bb-5d7d68f672d7",
                "name": "Copy of Certification Campaign Escalation 1",
                "description": "Certification Campaign first Escalation Email",
                "created": "2024-09-11T18:45:11.933692446Z",
                "modified": "2024-11-06T14:39:49.900651516Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "definition": {
                    "start": "Define Variable",
                    "steps": {
                        "Define Variable": {
                            "attributes": {
                                "id": "sp:define-variable",
                                "variables": [
                                    {
                                        "description": "",
                                        "name": "campaignStartDate",
                                        "transforms": [
                                            {
                                                "id": "sp:transform:substring:string",
                                                "input": {
                                                    "length": 10,
                                                    "start": 0
                                                }
                                            }
                                        ],
                                        "variableA.$": "$.now()"
                                    }
                                ]
                            },
                            "displayName": "",
                            "nextStep": "Wait",
                            "type": "Mutation"
                        },
                        "End Step - Success 1": {
                            "displayName": "",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "method": "get",
                                "oAuthClientId": "b7984b0dd30b4d11a2063c9904cf6642",
                                "oAuthClientSecret": "$.secrets.1a597903-6357-4f8b-9736-15588fd6fe6d",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "url": "https://igmfinancial-uat.api.identitynow.com/v3/certifications",
                                "urlParams": {
                                    "filters": "(campaign.id eq \"{{$.trigger.campaign.id}}\") and (completed eq false)"
                                }
                            },
                            "displayName": "",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "context.$": "$.defineVariable.campaignStartDate",
                                "input.$": "$.hTTPRequest.body",
                                "start": "Define Variable 1",
                                "steps": {
                                    "Compare Strings": {
                                        "choiceList": [
                                            {
                                                "comparator": "StringMatches",
                                                "nextStep": "End Step - Success",
                                                "variableA.$": "$.defineVariable1.excludedTitles",
                                                "variableB.$": "$.getIdentity1.attributes.title"
                                            }
                                        ],
                                        "defaultStep": "Send Email",
                                        "displayName": "",
                                        "type": "choice"
                                    },
                                    "Define Variable 1": {
                                        "attributes": {
                                            "id": "sp:define-variable",
                                            "variables": [
                                                {
                                                    "description": "",
                                                    "name": "excludedTitles",
                                                    "transforms": [],
                                                    "variableA": "President & CEO IGM,President & CEO IGWM,President & CEO MFC,EVP & Chief Financial Officer,EVP & Chief HR Officer - IGM,EVP & Chief Information Officer,EVP & Chief Risk Officer,EVP Chief Marketing Officer,EVP General Counsel,EVP Products and Solutions,President, IGM Financial, QuÃ©bec,CIO Fixed Income & MAS,CIO Equities,Chief Investment Strategist,Vice Chair of IG Wealth Management,Head of Process Design,Head of Mortgage, Insurance, and Banking,Head of Investment Solutions,Head of Financial Planning,Head of Compliance,Head of Client Experience"
                                                },
                                                {
                                                    "description": "",
                                                    "name": "secondEscalationDate",
                                                    "transforms": [
                                                        {
                                                            "id": "sp:transform:addTime:time",
                                                            "input": {
                                                                "length": 6,
                                                                "unit": "days"
                                                            }
                                                        },
                                                        {
                                                            "id": "sp:transform:substring:string",
                                                            "input": {
                                                                "length": 10,
                                                                "start": 0
                                                            }
                                                        }
                                                    ],
                                                    "variableA.$": "$.now()"
                                                },
                                                {
                                                    "description": "",
                                                    "name": "campaignEndDate",
                                                    "transforms": [
                                                        {
                                                            "id": "sp:transform:addTime:time",
                                                            "input": {
                                                                "length": 12,
                                                                "unit": "days"
                                                            }
                                                        },
                                                        {
                                                            "id": "sp:transform:substring:string",
                                                            "input": {
                                                                "length": 10,
                                                                "start": 0
                                                            }
                                                        }
                                                    ],
                                                    "variableA.$": "$.now()"
                                                }
                                            ]
                                        },
                                        "displayName": "",
                                        "nextStep": "Get Identity",
                                        "type": "Mutation"
                                    },
                                    "End Step - Success": {
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "Get Identity": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.reviewer.id"
                                        },
                                        "displayName": "",
                                        "nextStep": "Get Identity 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Get Identity 1": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.getIdentity.managerRef.id"
                                        },
                                        "displayName": "",
                                        "nextStep": "Compare Strings",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "<p>Hi ${managerFirstName},<br><br>The <strong>${campaignName}</strong> was initiated on ${campaignStartDate}, and we have since sent two reminders to&nbsp;<strong>${firstName} ${lastName}</strong>. The certification campaign is scheduled to end on ${campaignEndDate} at 5pm EST.<br><br>We are seeking your assistance to ensure ${firstName} ${lastName} completes their certification as soon as possible.<br><br>If the reviewer is on vacation or on leave and won&rsquo;t be able to complete the certification, please open a <a href=\"https://igmfinancial.service-now.com/snap?id=sc_cat_item&amp;sys_id=3f1dd0320a0a0b99000a53f7604a2ef9\">SNAP incident</a> to have the certification reassigned by the IAM Operations team. Include the name of the individual whose certification requires reassignment and the name of the individual to reassign it to.<br><br>If the certification is not completed by ${secondEscalationDate}, an email will be sent to your manager to seek their assistance.<br>We appreciate your help in reminding the reviewer of the importance of completing the mandatory certification to comply with our security standards.<br><br><strong>Note: Upon the closure of the campaign, all unreviewed access will be deemed not required and will be revoked. To avoid your team member's access being revoked, please ensure ${firstName} ${lastName} completes the attestation prior to the ${campaignEndDate} at 5pm EST.</strong><br><br>To learn more about certification campaigns, please click <a href=\"https://igmfinancial.service-now.com/snap?id=kb_article_view&amp;sysparm_article=KB0016063\">here</a> to review the Access Certification Overview and FAQ. <br><br>Thank you!<br>IAM Operations Team</p>",
                                            "context": {
                                                "campaignEndDate.$": "$.defineVariable1.campaignEndDate",
                                                "campaignName.$": "$.loop.loopInput.campaign.name",
                                                "campaignStartDate.$": "$.loop.context",
                                                "firstName.$": "$.getIdentity.attributes.firstname",
                                                "lastName.$": "$.getIdentity.attributes.lastname",
                                                "managerFirstName.$": "$.getIdentity1.attributes.firstname",
                                                "secondEscalationDate.$": "$.defineVariable1.secondEscalationDate"
                                            },
                                            "from": "",
                                            "recipientEmailList": [
                                                "{{$.getIdentity1.attributes.email}}",
                                                "{{$.getIdentity.attributes.email}}"
                                            ],
                                            "subject": "Action Required: ${campaignName}"
                                        },
                                        "displayName": "",
                                        "nextStep": "End Step - Success",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success 1",
                            "type": "action",
                            "versionNumber": 1
                        },
                        "Wait": {
                            "actionId": "sp:sleep",
                            "attributes": {
                                "duration": "16d",
                                "type": "waitFor"
                            },
                            "displayName": "",
                            "nextStep": "HTTP Request",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "id": "idn:campaign-activated"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "f069ef1a-4839-4bbb-8e2e-0eeaaa0dd0ba",
                "name": "Notification Suspension or Leave of Absence -old"
            },
            "object": {
                "id": "f069ef1a-4839-4bbb-8e2e-0eeaaa0dd0ba",
                "name": "Notification Suspension or Leave of Absence -old",
                "description": "Lifecycle state changed to suspended",
                "created": "2023-02-02T18:05:53.582598785Z",
                "modified": "2024-11-05T18:38:31.753616624Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "Compare Strings",
                    "steps": {
                        "Compare Strings": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Get Identity",
                                    "variableA.$": "$.trigger.changes[?(@.attribute=='cloudLifecycleState')].newValue",
                                    "variableB": "suspended"
                                }
                            ],
                            "defaultStep": "success",
                            "description": "Suspended?",
                            "type": "choice"
                        },
                        "Compare Strings 1": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Send Email 1",
                                    "variableA.$": "$.getIdentity.attributes.userType",
                                    "variableB": "Advisor"
                                }
                            ],
                            "defaultStep": "Get Identity 1",
                            "description": "Check if an advisor, they don't have a manager so we have to handle differently",
                            "type": "choice"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "description": "Get Contractor Identity Information",
                            "nextStep": "Compare Strings 1",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Get Identity 1": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.getIdentity.managerRef.id"
                            },
                            "description": "Get Manager Identity Information for email",
                            "nextStep": "Send Email",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear ${managerFirstName} ${managerLastName},<br><br>The account has been suspended successfully and all system access has been disabled.<br><br>Name: ${firstName} ${lastName}<br>Username: ${sAMAccountName}<br><br>If this was processed in error, please contact the IGM Service Desk.<br><br>IGM Service Desk <br>Mon &ndash; Fri 7:30 am to 7:30 pm ET<br>Phone Number: 1-800-661-2040<br>SNAP Portal &ndash; Live Chat / Get Help<br>https://igmfinancial.service-now.com/snap<br>This is a system-generated email. Please do not respond to this email.<br><br><br><br>Bonjour ${managerFirstName} ${managerLastName},<br><br>Le compte a &eacute;t&eacute; suspendu avec succ&egrave;s et tous les acc&egrave;s au syst&egrave;me ont &eacute;t&eacute; d&eacute;sactiv&eacute;s. <br><br>Nom : ${firstName} ${lastName}<br>Nom d&rsquo;utilisateur : ${sAMAccountName}<br><br>Si la suspension a &eacute;t&eacute; op&eacute;r&eacute;e par erreur, veuillez communiquer avec le Bureau des services technologiques d&rsquo;IGM. <br><br>Bureau des services technologiques d&rsquo;IGM <br>Lundi au vendredi de 7 h 30 &agrave; 19 h 30 (HE) <br>Num&eacute;ro de t&eacute;l&eacute;phone : 1-800-661-2040 <br>Portail SNAP &ndash; Clavardage en direct/Aide <br>https://igmfinancial.service-now.com/snap&nbsp;<br>Ce courriel a &eacute;t&eacute; produit par le syst&egrave;me. Veuillez ne pas y r&eacute;pondre.</p>",
                                "context": {
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "managerFirstName.$": "$.getIdentity1.attributes.firstname",
                                    "managerLastName.$": "$.getIdentity1.attributes.lastname",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname"
                                },
                                "from": null,
                                "recipientEmailList.$": "$.getIdentity1.attributes.email",
                                "replyTo": "",
                                "subject": "Account Suspended for ${firstName} ${lastName} / Le compte de ${firstName} ${lastName} a été suspendu"
                            },
                            "description": "Send email to manager",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email 1": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear Field Network Administration<br><br>The account has been suspended successfully and all system access has been disabled.<br><br>Name: ${firstName} ${lastName}<br>Username: ${sAMAccountName}<br><br>If this was processed in error, please contact the IGM Service Desk.<br><br>IGM Service Desk <br>Mon &ndash; Fri 7:30 am to 7:30 pm ET<br>Phone Number: 1-800-661-2040<br>SNAP Portal &ndash; Live Chat / Get Help<br>https://igmfinancial.service-now.com/snap<br>This is a system-generated email. Please do not respond to this email.<br><br><br><br>Bonjour Field Network Administration,<br><br>Le compte a &eacute;t&eacute; suspendu avec succ&egrave;s et tous les acc&egrave;s au syst&egrave;me ont &eacute;t&eacute; d&eacute;sactiv&eacute;s. <br><br>Nom : ${firstName} ${lastName}<br>Nom d&rsquo;utilisateur : ${sAMAccountName}<br><br>Si la suspension a &eacute;t&eacute; op&eacute;r&eacute;e par erreur, veuillez communiquer avec le Bureau des services technologiques d&rsquo;IGM. <br><br>Bureau des services technologiques d&rsquo;IGM <br>Lundi au vendredi de 7 h 30 &agrave; 19 h 30 (HE) <br>Num&eacute;ro de t&eacute;l&eacute;phone : 1-800-661-2040 <br>Portail SNAP &ndash; Clavardage en direct/Aide <br>https://igmfinancial.service-now.com/snap&nbsp;<br>Ce courriel a &eacute;t&eacute; produit par le syst&egrave;me. Veuillez ne pas y r&eacute;pondre. </p>",
                                "context": {
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname"
                                },
                                "recipientEmailList": [
                                    "fieldnetworkadministration@ig.ca"
                                ],
                                "subject": "Account Suspended for ${firstName} ${lastName} / Le compte de ${firstName} ${lastName} a été suspendu"
                            },
                            "description": "Email for Advisors. goes to Field Network Administration",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "success": {
                            "description": null,
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "description": "Lifecycle State is suspended",
                        "filter.$": "$.changes[?(@.attribute == \"cloudLifecycleState\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "345f1d09-7b7e-4ce6-bfba-256d422ad76c",
                "name": "Notification Leaver -old"
            },
            "object": {
                "id": "345f1d09-7b7e-4ce6-bfba-256d422ad76c",
                "name": "Notification Leaver -old",
                "description": "Lifecycle state changed to terminated",
                "created": "2023-02-02T20:31:02.870326174Z",
                "modified": "2024-11-05T18:38:22.326054098Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "Compare Strings",
                    "steps": {
                        "Compare Strings": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Get Identity 2",
                                    "variableA.$": "$.trigger.changes[?(@.attribute=='cloudLifecycleState')].newValue",
                                    "variableB": "terminated"
                                }
                            ],
                            "defaultStep": "success",
                            "description": "Suspended?",
                            "type": "choice"
                        },
                        "Compare Strings 1": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Send Email 1",
                                    "variableA.$": "$.getIdentity.attributes.userType",
                                    "variableB": "Advisor"
                                }
                            ],
                            "defaultStep": "Get Identity 1",
                            "description": "Check if an advisor, they don't have a manager so we have to handle differently",
                            "type": "choice"
                        },
                        "Get Identity 1": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.getIdentity.managerRef.id"
                            },
                            "description": "Get Manager Identity Information for email",
                            "nextStep": "Send Email",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Get Identity 2": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "description": "Get Identity Information",
                            "displayName": "",
                            "nextStep": "Compare Strings 1",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear ${managerFirstName} ${managerLastName},<br><br>All system access has been disabled and all application accounts will be deleted in 21 days for: <br><br>Name: ${firstName} ${lastName}<br>Username: ${sAMAccountName}<br><br>If this was processed in error, please contact the IGM Service Desk.<br><br>IGM Service Desk <br>Mon &ndash; Fri 7:30 am to 7:30 pm ET<br>Phone Number: 1-800-661-2040<br>SNAP Portal &ndash; Live Chat / Get Help<br>https://igmfinancial.service-now.com/snap<br><br>This is a system-generated email. Please do not respond to this email.<br><br><br>Bonjour ${managerFirstName} ${managerLastName},<br><br>Tous les acc&egrave;s au syst&egrave;me ont &eacute;t&eacute; d&eacute;sactiv&eacute;s et tous les comptes d&rsquo;application seront supprim&eacute;s dans un d&eacute;lai de 21 jours pour : <br><br>Nom : ${firstName} ${lastName}<br>Nom d&rsquo;utilisateur : ${sAMAccountName}<br><br>Si le retrait a &eacute;t&eacute; op&eacute;r&eacute; par erreur, veuillez communiquer avec le Bureau des services technologiques d&rsquo;IGM. <br><br>Bureau des services technologiques d&rsquo;IGM <br>Lundi au vendredi de 7 h 30 &agrave; 19 h 30 (HE) <br>Num&eacute;ro de t&eacute;l&eacute;phone : 1-800-661-2040 <br>Portail SNAP/Clavardage en direct/Aide <br>https://igmfinancial.service-now.com/snap&nbsp;<br><br>Ce courriel a &eacute;t&eacute; produit par le syst&egrave;me. Veuillez ne pas y r&eacute;pondre.</p>",
                                "context": {
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "managerFirstName.$": "$.getIdentity1.attributes.firstname",
                                    "managerLastName.$": "$.getIdentity1.attributes.lastname",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname"
                                },
                                "from": null,
                                "recipientEmailList.$": "$.getIdentity1.attributes.email",
                                "replyTo": "",
                                "subject": "Offboarding Complete for ${firstName} ${lastName} / Retrait d’utilisateur effectué pour ${firstName} ${lastName}"
                            },
                            "description": "Send email to manager",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email 1": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Dear Field Network Administration,<br><br>All system access has been disabled and all application accounts will be deleted in 21 days for: <br><br>Name: ${firstName} ${lastName}<br>Username: ${sAMAccountName}<br><br>If this was processed in error, please contact the IGM Service Desk.<br><br>IGM Service Desk <br>Mon &ndash; Fri 7:30 am to 7:30 pm ET<br>Phone Number: 1-800-661-2040<br>SNAP Portal &ndash; Live Chat / Get Help<br>https://igmfinancial.service-now.com/snap<br><br>This is a system-generated email. Please do not respond to this email.<br><br><br>Bonjour Field Network Administration,<br><br>Tous les acc&egrave;s au syst&egrave;me ont &eacute;t&eacute; d&eacute;sactiv&eacute;s et tous les comptes d&rsquo;application seront supprim&eacute;s dans un d&eacute;lai de 21 jours pour : <br><br>Nom : ${firstName} ${lastName}<br>Nom d&rsquo;utilisateur : ${sAMAccountName}<br><br>Si le retrait a &eacute;t&eacute; op&eacute;r&eacute; par erreur, veuillez communiquer avec le Bureau des services technologiques d&rsquo;IGM. <br><br>Bureau des services technologiques d&rsquo;IGM <br>Lundi au vendredi de 7 h 30 &agrave; 19 h 30 (HE) <br>Num&eacute;ro de t&eacute;l&eacute;phone : 1-800-661-2040 <br>Portail SNAP/Clavardage en direct/Aide <br>https://igmfinancial.service-now.com/snap&nbsp;<br><br>Ce courriel a &eacute;t&eacute; produit par le syst&egrave;me. Veuillez ne pas y r&eacute;pondre.</p>",
                                "context": {
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname"
                                },
                                "recipientEmailList": [
                                    "fieldnetworkadministration@ig.ca"
                                ],
                                "subject": "Offboarding Complete for ${firstName} ${lastName} / Retrait d’utilisateur effectué pour ${firstName} ${lastName}"
                            },
                            "description": "Email for Advisors goes to Field Network Administration",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "success": {
                            "description": null,
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "description": "Lifecycle State is terminated",
                        "filter.$": "$.changes[?(@.attribute == \"cloudLifecycleState\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "998ed8fd-11d0-4543-bc6a-ebff289e2e45",
                "name": "Mover – UserType Change IAM Ops Notification"
            },
            "object": {
                "id": "998ed8fd-11d0-4543-bc6a-ebff289e2e45",
                "name": "Mover – UserType Change IAM Ops Notification",
                "description": "This is a workflow to send email to ‘igmfinancialtest@service-now.com’ for automatic SNAP ticket generation.",
                "created": "2024-10-08T15:30:23.970230904Z",
                "modified": "2024-10-08T16:38:10.483833045Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "definition": {
                    "start": "Define Variable",
                    "steps": {
                        "Compare Strings": {
                            "choiceList": [
                                {
                                    "comparator": "StringMatches",
                                    "nextStep": "Get Identity",
                                    "variableA.$": "$.defineVariable.userTypeVariable",
                                    "variableB.$": "$.trigger.changes[?(@.attribute=='userType')].newValue"
                                }
                            ],
                            "defaultStep": "success",
                            "displayName": "",
                            "type": "choice"
                        },
                        "Compare Strings 1": {
                            "choiceList": [
                                {
                                    "comparator": "StringMatches",
                                    "nextStep": "Compare Strings",
                                    "variableA.$": "$.defineVariable.userTypeVariable",
                                    "variableB.$": "$.trigger.changes[?(@.attribute=='userType')].oldValue"
                                }
                            ],
                            "defaultStep": "success",
                            "description": "Check if identity is an Advisor",
                            "type": "choice"
                        },
                        "Define Variable": {
                            "attributes": {
                                "id": "sp:define-variable",
                                "variables": [
                                    {
                                        "description": "",
                                        "name": "userTypeVariable",
                                        "transforms": [],
                                        "variableA": "Advisor,Hybrid,Employee"
                                    }
                                ]
                            },
                            "displayName": "",
                            "nextStep": "Compare Strings 1",
                            "type": "Mutation"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "displayName": "",
                            "nextStep": "Send Email 1",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email 1": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "<p>Test for userType Change</p>",
                                "context": null,
                                "from": null,
                                "recipientEmailList": [
                                    "jyoti.gupta@igmfinancial.com"
                                ],
                                "replyTo": null,
                                "subject": "Mover - Advisor - ${firstName} ${lastName}"
                            },
                            "description": "Advisor mover event notification for IAM Ops team",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "success": {
                            "description": null,
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "description": "Need to check if department, subscription indicator, or job title changed",
                        "filter.$": "$.changes[?(@.attribute == \"userType\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "388393df-0ae5-45b0-b782-989eb597252c",
                "name": "Test Certification Campaign Escalation 2"
            },
            "object": {
                "id": "388393df-0ae5-45b0-b782-989eb597252c",
                "name": "Test Certification Campaign Escalation 2",
                "description": "Test Certification Campaign Escalation",
                "created": "2024-09-04T18:44:56.969664474Z",
                "modified": "2024-09-11T18:43:38.026974993Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "definition": {
                    "start": "HTTP Request",
                    "steps": {
                        "End Step - Success 1": {
                            "displayName": "",
                            "type": "success"
                        },
                        "HTTP Request": {
                            "actionId": "sp:http",
                            "attributes": {
                                "authenticationType": "OAuth",
                                "method": "get",
                                "oAuthClientId": "da860c65a242448ab5856e609355927a",
                                "oAuthClientSecret": "$.secrets.23de6e5a-2dba-4a0a-b477-1fd5770ced40",
                                "oAuthCredentialLocation": "oAuthInHeader",
                                "oAuthTokenUrl": "https://igmfinancial-uat.api.identitynow.com/oauth/token",
                                "requestContentType": "json",
                                "url": "https://igmfinancial-uat.api.identitynow.com/v3/certifications",
                                "urlParams": {
                                    "filters": "(campaign.id eq \"{{$.trigger.campaign.id}}\") and (completed eq false)"
                                }
                            },
                            "displayName": "",
                            "nextStep": "Loop",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Loop": {
                            "actionId": "sp:loop:iterator",
                            "attributes": {
                                "input.$": "$.hTTPRequest.body",
                                "start": "Get Identity",
                                "steps": {
                                    "End Step - Success": {
                                        "displayName": "",
                                        "type": "success"
                                    },
                                    "Get Identity": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.loop.loopInput.reviewer.id"
                                        },
                                        "displayName": "",
                                        "nextStep": "Get Identity 1",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Get Identity 1": {
                                        "actionId": "sp:get-identity",
                                        "attributes": {
                                            "id.$": "$.getIdentity.managerRef.id"
                                        },
                                        "displayName": "",
                                        "nextStep": "Send Email",
                                        "type": "action",
                                        "versionNumber": 2
                                    },
                                    "Send Email": {
                                        "actionId": "sp:send-email",
                                        "attributes": {
                                            "body": "Test",
                                            "context": null,
                                            "from": null,
                                            "recipientEmailList": [
                                                "igmsailpointsandboxnotifications@igmfinancial.com"
                                            ],
                                            "subject": "Incomplete ${campaignName}"
                                        },
                                        "displayName": "",
                                        "nextStep": "End Step - Success",
                                        "type": "action",
                                        "versionNumber": 2
                                    }
                                }
                            },
                            "displayName": "",
                            "nextStep": "End Step - Success 1",
                            "type": "action",
                            "versionNumber": 1
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d06",
                    "name": "scott.walker"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d06",
                    "name": "scott.walker"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "id": "idn:campaign-activated"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "713ece0c-63a4-4978-99c2-aa04e57a4ee8",
                "name": "Suspension IAM Ops Notification"
            },
            "object": {
                "id": "713ece0c-63a4-4978-99c2-aa04e57a4ee8",
                "name": "Suspension IAM Ops Notification",
                "description": "Suspension IAM Ops Notification",
                "created": "2023-04-14T17:31:53.823589161Z",
                "modified": "2024-08-02T15:25:34.336235415Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "Compare Strings",
                    "steps": {
                        "Compare Strings": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Get Identity",
                                    "variableA.$": "$.trigger.changes[?(@.attribute=='cloudLifecycleState')].newValue",
                                    "variableB": "suspended"
                                }
                            ],
                            "defaultStep": "success",
                            "description": "Suspended?",
                            "type": "choice"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "description": "Get Contractor Identity Information",
                            "nextStep": "Send Email",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "IAM Ops,<br>\n<br>\nA(n) ${userType} identity has been suspended. Please reference the details below to deprovision appropriate access for this event.<br>\n<br>\nEvent Type: SUSPENSION<br>\nShort Description: SUSPENSION - ${userType} - ${sAMAccountName}<br>\nName: ${firstName} ${lastName}<br>\nUser Type: ${userType}<br>\nLOA Start Date: ${loaStartDate}<br>\nLOA End Date: ${loaEndDate}<br>\nLanguage: ${language}<br>\nManager: ${manager}<br>\nCompany: ${company}<br>\nDepartment: ${department}<br>\nTitle: ${title}<br>\nWork Location: ${street}, ${city}, ${postalCode}, ${country}<br>\n<br>\nThis is a system-generated email. Please do not respond to this email.",
                                "context": {
                                    "city.$": "$.getIdentity.attributes.city",
                                    "company.$": "$.getIdentity.attributes.company",
                                    "country.$": "$.getIdentity.attributes.country",
                                    "department.$": "$.getIdentity.attributes.department",
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "language.$": "$.getIdentity.attributes.language",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "loaEndDate.$": "$.getIdentity.attributes.loaEndDate",
                                    "loaStartDate.$": "$.getIdentity.attributes.loaStartDate",
                                    "manager.$": "$.getIdentity.managerRef.name",
                                    "postalCode.$": "$.getIdentity.attributes.postalCode",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname",
                                    "street.$": "$.getIdentity.attributes.street",
                                    "title.$": "$.getIdentity.attributes.title",
                                    "userType.$": "$.getIdentity.attributes.userType"
                                },
                                "from": null,
                                "recipientEmailList": [
                                    "iamops@igmfinancial.com"
                                ],
                                "replyTo": null,
                                "subject": "Suspended ${userType} - ${firstName} ${lastName}"
                            },
                            "description": "Send email to IAM Ops",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "success": {
                            "description": null,
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d08",
                    "name": "emmanuel.martinez"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d08",
                    "name": "emmanuel.martinez"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "description": "Lifecycle State is suspended",
                        "filter.$": "$.changes[?(@.attribute == \"cloudLifecycleState\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "41a71db2-1539-49ba-90df-ff2da0978f94",
                "name": "Return from Suspension - LOA IAM Ops Notification"
            },
            "object": {
                "id": "41a71db2-1539-49ba-90df-ff2da0978f94",
                "name": "Return from Suspension - LOA IAM Ops Notification",
                "description": "Return from Suspension - LOA IAM Ops Notification",
                "created": "2023-04-14T19:45:50.382644872Z",
                "modified": "2024-08-02T15:25:30.590849907Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "2c9180848439717c01843e07a4e206a4",
                    "name": "2007122"
                },
                "definition": {
                    "start": "Compare Strings",
                    "steps": {
                        "Compare Strings": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Compare Strings 1",
                                    "variableA.$": "$.trigger.changes[?(@.attribute=='cloudLifecycleState')].newValue",
                                    "variableB": "active"
                                }
                            ],
                            "defaultStep": "success",
                            "description": "Active?",
                            "type": "choice"
                        },
                        "Compare Strings 1": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Get Identity",
                                    "variableA.$": "$.trigger.changes[?(@.attribute=='cloudLifecycleState')].oldValue",
                                    "variableB": "suspended"
                                }
                            ],
                            "defaultStep": "success",
                            "description": "Previous state suspended?",
                            "type": "choice"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "description": "Get Identity Information",
                            "nextStep": "Send Email",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "IAM Ops,<br>\n<br>\nA(n) ${userType} identity has returned from suspension/LOA. Please reference the details below to provision appropriate access for this event.<br>\n<br>\nEvent Type: UNSUSPEND<br>\nShort Description: UNSUSPEND - ${userType} - ${sAMAccountName}<br>\nName: ${firstName} ${lastName}<br>\nUser Type: ${userType}<br>\nLOA Start Date: ${loaStartDate}<br>\nLOA End Date: ${loaEndDate}<br>\nLanguage: ${language}<br>\nManager: ${manager}<br>\nCompany: ${company}<br>\nDepartment: ${department}<br>\nTitle: ${title}<br>\nWork Location: ${street}, ${city}, ${postalCode}, ${country}<br>\n<br>\nThis is a system-generated email. Please do not respond to this email.",
                                "context": {
                                    "city.$": "$.getIdentity.attributes.city",
                                    "company.$": "$.getIdentity.attributes.company",
                                    "country.$": "$.getIdentity.attributes.country",
                                    "department.$": "$.getIdentity.attributes.department",
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "language.$": "$.getIdentity.attributes.language",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "loaEndDate.$": "$.getIdentity.attributes.loaEndDate",
                                    "loaStartDate.$": "$.getIdentity.attributes.loaStartDate",
                                    "manager.$": "$.getIdentity.managerRef.name",
                                    "postalCode.$": "$.getIdentity.attributes.postalCode",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname",
                                    "street.$": "$.getIdentity.attributes.street",
                                    "title.$": "$.getIdentity.attributes.title",
                                    "userType.$": "$.getIdentity.attributes.userType"
                                },
                                "from": null,
                                "recipientEmailList": [
                                    "iamops@igmfinancial.com"
                                ],
                                "replyTo": null,
                                "subject": "Return from Suspension/LOA ${userType} - ${firstName} ${lastName}"
                            },
                            "description": "Send email to IAM Ops",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "success": {
                            "description": null,
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d08",
                    "name": "emmanuel.martinez"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d08",
                    "name": "emmanuel.martinez"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "description": "Lifecycle State is suspended",
                        "filter.$": "$.changes[?(@.attribute == \"cloudLifecycleState\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "49d5f898-287a-4cf6-a1dd-d5900e72a6cc",
                "name": "Deletion IAM Ops Notification"
            },
            "object": {
                "id": "49d5f898-287a-4cf6-a1dd-d5900e72a6cc",
                "name": "Deletion IAM Ops Notification",
                "description": "Deletion IAM Ops Notification",
                "created": "2023-04-14T18:27:15.498781074Z",
                "modified": "2024-04-29T14:44:07.23966992Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "definition": {
                    "start": "Compare Strings",
                    "steps": {
                        "Compare Strings": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Get Identity",
                                    "variableA.$": "$.trigger.changes[?(@.attribute=='cloudLifecycleState')].newValue",
                                    "variableB": "deleted"
                                }
                            ],
                            "defaultStep": "success",
                            "description": "Suspended?",
                            "type": "choice"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "description": "Get Contractor Identity Information",
                            "nextStep": "Send Email",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "IAM Ops,<br>\n<br>\nA(n) ${userType} identity has changed to a deleted lifecycle state (21 days have passed since termination).<br>\nPlease reference the details below to deprovision appropriate access for this event.<br>\n<br>\nEvent Type: DELETION<br>\nShort Description: DELETION - ${userType} - ${sAMAccountName}<br>\nName: ${firstName} ${lastName}<br>\nUser Type: ${userType}<br>\nTermination Date: ${endDate}<br>\nLanguage: ${language}<br>\nManager: ${manager}<br>\nCompany: ${company}<br>\nDepartment: ${department}<br>\nTitle: ${title}<br>\nWork Location: ${street}, ${city}, ${postalCode}, ${country}<br>\n<br>\nThis is a system-generated email. Please do not respond to this email.",
                                "context": {
                                    "city.$": "$.getIdentity.attributes.city",
                                    "company.$": "$.getIdentity.attributes.company",
                                    "country.$": "$.getIdentity.attributes.country",
                                    "department.$": "$.getIdentity.attributes.department",
                                    "endDate.$": "$.getIdentity.attributes.endDate",
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "language.$": "$.getIdentity.attributes.language",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "manager.$": "$.getIdentity.managerRef.name",
                                    "postalCode.$": "$.getIdentity.attributes.postalCode",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname",
                                    "street.$": "$.getIdentity.attributes.street",
                                    "title.$": "$.getIdentity.attributes.title",
                                    "userType.$": "$.getIdentity.attributes.userType"
                                },
                                "from": null,
                                "recipientEmailList": [
                                    "iamops@igmfinancial.com"
                                ],
                                "replyTo": null,
                                "subject": "Deleted ${userType} - ${firstName} ${lastName}"
                            },
                            "description": "Send email to IAM Ops",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "success": {
                            "description": null,
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d08",
                    "name": "emmanuel.martinez"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d08",
                    "name": "emmanuel.martinez"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "description": "Lifecycle State is suspended",
                        "filter.$": "$.changes[?(@.attribute == \"cloudLifecycleState\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "338993eb-27d1-4cca-88b6-e3e879995ad9",
                "name": "Termination IAM Ops Notification"
            },
            "object": {
                "id": "338993eb-27d1-4cca-88b6-e3e879995ad9",
                "name": "Termination IAM Ops Notification",
                "description": "Termination IAM Ops Notification",
                "created": "2023-04-14T18:11:09.595045953Z",
                "modified": "2023-09-27T17:22:26.604988578Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "definition": {
                    "start": "Compare Strings",
                    "steps": {
                        "Compare Strings": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Get Identity",
                                    "variableA.$": "$.trigger.changes[?(@.attribute=='cloudLifecycleState')].newValue",
                                    "variableB": "terminated"
                                }
                            ],
                            "defaultStep": "success",
                            "description": "Suspended?",
                            "type": "choice"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "description": "Get Contractor Identity Information",
                            "nextStep": "Send Email",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "IAM Ops,<br>\n<br>\nA(n) ${userType} identity has been terminated. Please reference the details below to deprovision appropriate access for this event.<br>\n<br>\nEvent Type: TERMINATION<br>\nShort Description: TERMINATION - ${userType} - ${sAMAccountName}<br>\nName: ${firstName} ${lastName}<br>\nUser Type: ${userType}<br>\nTermination Date: ${endDate}<br>\nLanguage: ${language}<br>\nManager: ${manager}<br>\nCompany: ${company}<br>\nDepartment: ${department}<br>\nTitle: ${title}<br>\nWork Location: ${street}, ${city}, ${postalCode}, ${country}<br>\n<br>\nThis is a system-generated email. Please do not respond to this email.",
                                "context": {
                                    "city.$": "$.getIdentity.attributes.city",
                                    "company.$": "$.getIdentity.attributes.company",
                                    "country.$": "$.getIdentity.attributes.country",
                                    "department.$": "$.getIdentity.attributes.department",
                                    "endDate.$": "$.getIdentity.attributes.endDate",
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "language.$": "$.getIdentity.attributes.language",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "manager.$": "$.getIdentity.managerRef.name",
                                    "postalCode.$": "$.getIdentity.attributes.postalCode",
                                    "sAMAccountName.$": "$.getIdentity.attributes.samaccountname",
                                    "street.$": "$.getIdentity.attributes.street",
                                    "title.$": "$.getIdentity.attributes.title",
                                    "userType.$": "$.getIdentity.attributes.userType"
                                },
                                "from": null,
                                "recipientEmailList": [
                                    "iamops@igmfinancial.com"
                                ],
                                "replyTo": null,
                                "subject": "Terminated ${userType} - ${firstName} ${lastName}"
                            },
                            "description": "Send email to IAM Ops",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "success": {
                            "description": null,
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d08",
                    "name": "emmanuel.martinez"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d08",
                    "name": "emmanuel.martinez"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "description": "Lifecycle State is suspended",
                        "filter.$": "$.changes[?(@.attribute == \"cloudLifecycleState\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "cf2c7a27-523b-4513-a4f6-75724b2cc7ba",
                "name": "Notification Contractor Expiry "
            },
            "object": {
                "id": "cf2c7a27-523b-4513-a4f6-75724b2cc7ba",
                "name": "Notification Contractor Expiry ",
                "description": "Send email to manager prior to Contractor end date.\n\n28, 21, 14 and 7 days prior",
                "created": "2023-01-21T22:07:59.013990379Z",
                "modified": "2023-09-14T18:44:06.867375488Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "definition": {
                    "start": "Compare Strings",
                    "steps": {
                        "Compare Strings": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Get Identity",
                                    "variableA.$": "$.trigger.changes[?(@.attribute=='contractorEndDateNotificationTrigger')].newValue",
                                    "variableB": "Notify"
                                }
                            ],
                            "defaultStep": "success",
                            "description": "Check if 7 Days out",
                            "type": "choice"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identity.id"
                            },
                            "description": "Get Contractor Identity Information",
                            "nextStep": "Get Identity 1",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Get Identity 1": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.getIdentity.managerRef.id"
                            },
                            "description": "Get Manager Identity Information for email address",
                            "nextStep": "Send Email",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "Dear ${managerFirstName} ${managerLastName},<br>\n<br>\nThe account for <b>${contractorFirstName} ${contractorLastName}</b> is about to expire and will be disabled on ${endDate}.<br>\n<br>\nIf you do not wish to have this account disabled, follow the instructions in the link below to submit a SNAP request. <br>\n<br>\n<a href=\"https://igmfinancial.service-now.com/kb_view.do?sysparm_article=KB0015113\">IGM - SNAP: How Do I Extend a Contract End / Expiry Date</a><br>\n<br>\nThis is a system-generated email. Please do not respond to this email.\n<br>\n<br>\n\nBonjour ${managerFirstName} ${managerLastName},<br>\n<br>\nLe compte de ${contractorFirstName} ${contractorLastName} est sur le point d’expirer et sera désactivé le  ${endDate}. <br>\n<br>\nSi vous ne souhaitez pas que ce compte soit désactivé, activez le lien ci-dessous et suivez les instructions données pour présenter une demande SNAP.<br>\n<br>\n<a href=\"https://igmfinancial.service-now.com/kb_view.do?sys_kb_id=22cc65981b15799001cf2f82b24bcb3c\">Portail SNAP d'IGM: Comment repousser la date de fin ou d'expiration d'un contrat?</a><br>\n<br>\nCe courriel a été produit par le système. Veuillez ne pas y répondre.<br>",
                                "context": {
                                    "contractorFirstName.$": "$.getIdentity.attributes.firstname",
                                    "contractorLastName.$": "$.getIdentity.attributes.lastname",
                                    "endDate.$": "$.getIdentity.attributes.endDate",
                                    "managerFirstName.$": "$.getIdentity1.attributes.firstname",
                                    "managerLastName.$": "$.getIdentity1.attributes.lastname"
                                },
                                "from": null,
                                "recipientEmailList.$": "$.getIdentity1.attributes.email",
                                "replyTo": "",
                                "subject": "Reminder: Contingent Worker End Date Approaching / Approche de la date de fin d’un emploi occasionnel "
                            },
                            "description": "Send email to manager",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "success": {
                            "description": null,
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "628f08e9d3754deb94463c6380d0f61d",
                    "name": "slpt.services"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "attributeToFilter": "endDateNotificationTrigger",
                        "filter.$": "$.changes[?(@.attribute == \"endDateNotificationTrigger\")]",
                        "id": "idn:identity-attributes-changed"
                    }
                }
            }
        },
        {
            "version": 1,
            "self": {
                "type": "WORKFLOW",
                "id": "55f37eea-9139-47e0-adef-8534cb8320f7",
                "name": "Joiner Advisor IAM Ops Notification"
            },
            "object": {
                "id": "55f37eea-9139-47e0-adef-8534cb8320f7",
                "name": "Joiner Advisor IAM Ops Notification",
                "description": "Joiner Advisor IAM Ops Notification",
                "created": "2023-04-11T13:51:02.806864365Z",
                "modified": "2023-08-29T14:36:22.938866417Z",
                "modifiedBy": {
                    "type": "IDENTITY",
                    "id": "cf41145275194a66bd2989bcac443640",
                    "name": "jyoti.gupta"
                },
                "definition": {
                    "start": "Get Identity",
                    "steps": {
                        "Compare Strings 1": {
                            "choiceList": [
                                {
                                    "comparator": "StringEquals",
                                    "nextStep": "Send Email 1",
                                    "variableA.$": "$.getIdentity.attributes.userType",
                                    "variableB": "Advisor"
                                }
                            ],
                            "defaultStep": "success",
                            "description": "Check if new identity is an Advisor",
                            "type": "choice"
                        },
                        "Get Identity": {
                            "actionId": "sp:get-identity",
                            "attributes": {
                                "id.$": "$.trigger.identityId"
                            },
                            "description": "Get Identity Information",
                            "nextStep": "Compare Strings 1",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "Send Email 1": {
                            "actionId": "sp:send-email",
                            "attributes": {
                                "body": "IAM Ops,<br>\n<br>\nA new Advisor identity has been created. Please reference the details below to provision appropriate access for this event.<br>\n<br>\nEvent Type: JOINER<br>\nShort Description: JOINER - ${userType} - ${sAMAccountName}<br>\nName: ${firstName} ${lastName}<br>\nUser Type: ${userType}<br>\nStart Date: ${startDate}<br>\nLanguage: ${language}<br>\nDepartment: ${department}<br>\nManager: ${manager}<br>\nCompany: ${company}<br>\nTitle: ${title}<br>\nWork Location: ${street}, ${city}, ${postalCode}, ${country}<br>\n\n<br>\nThis is a system-generated email. Please do not respond to this email.",
                                "context": {
                                    "city.$": "$.getIdentity.attributes.city",
                                    "company.$": "$.getIdentity.attributes.company",
                                    "country.$": "$.getIdentity.attributes.country",
                                    "department.$": "$.getIdentity.attributes.department",
                                    "firstName.$": "$.getIdentity.attributes.firstname",
                                    "language.$": "$.getIdentity.attributes.language",
                                    "lastName.$": "$.getIdentity.attributes.lastname",
                                    "manager.$": "$.getIdentity.attributes.managerRef.name",
                                    "postalCode.$": "$.getIdentity.attributes.postalCode",
                                    "sAMAccountName.$": "$.trigger.attributes.sAMAccountName",
                                    "startDate.$": "$.getIdentity.attributes.startDate",
                                    "street.$": "$.getIdentity.attributes.street",
                                    "title.$": "$.getIdentity.attributes.title",
                                    "userType.$": "$.getIdentity.attributes.userType"
                                },
                                "recipientEmailList": [
                                    "iamops@igmfinancial.com"
                                ],
                                "subject": "New Advisor - ${firstName} ${lastName}"
                            },
                            "description": "Email for new Advisors for IAM Ops team",
                            "nextStep": "success",
                            "type": "action",
                            "versionNumber": 2
                        },
                        "success": {
                            "description": null,
                            "type": "success"
                        }
                    }
                },
                "enabled": false,
                "creator": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d08",
                    "name": "emmanuel.martinez"
                },
                "owner": {
                    "type": "IDENTITY",
                    "id": "2c918086837fb2ca0183c858c6597d08",
                    "name": "emmanuel.martinez"
                },
                "trigger": {
                    "type": "EVENT",
                    "attributes": {
                        "filter.$": "$[?($.sourceId == \"be421fd329474dc08a0b43ab73bedbcd\")]",
                        "id": "idn:source-account-created"
                    }
                }
            }
        }
    ]
}